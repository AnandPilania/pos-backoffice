{"ast":null,"code":"import axios from 'axios';\nimport { servicePath, tokenPrefix } from '../../constants/defaultValues';\nimport errorMessage from '../../constants/errorMessages';\nimport { UPDATE_MENU_APP_COLORS_REQUEST, UPDATE_MENU_APP_COLORS_SUCCESS, UPDATE_MENU_APP_COLORS_FAIL, UPDATE_MENU_APP_LOGO_REQUEST, UPDATE_MENU_APP_LOGO_SUCCESS, UPDATE_MENU_APP_LOGO_FAIL } from '../actions';\nexport var updateMenuAppColor = function updateMenuAppColor(payload) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: UPDATE_MENU_APP_COLORS_REQUEST\n    });\n    axios.post(servicePath + \"/user/update-menu-app-colors\", payload, {\n      headers: {\n        'X-API-TOKEN': tokenPrefix + getState().authUser.token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).then(function (data) {\n      if (data['message'] === \"\") {\n        localStorage.setItem('user_info', JSON.stringify(data['data']['user']));\n        dispatch({\n          type: UPDATE_MENU_APP_COLORS_SUCCESS\n        });\n      } else {\n        dispatch({\n          type: UPDATE_MENU_APP_COLORS_FAIL,\n          payload: data['message']\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: UPDATE_MENU_APP_COLORS_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport var updateMenuAppLogo = function updateMenuAppLogo(payload) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: UPDATE_MENU_APP_LOGO_REQUEST\n    });\n    axios.post(servicePath + \"/user/update-menu-app-logo\", payload, {\n      headers: {\n        'X-API-TOKEN': tokenPrefix + getState().authUser.token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).then(function (data) {\n      if (data['message'] === \"\") {\n        localStorage.setItem('user_info', JSON.stringify(data['data']['user']));\n        dispatch({\n          type: UPDATE_MENU_APP_LOGO_SUCCESS\n        });\n      } else {\n        dispatch({\n          type: UPDATE_MENU_APP_LOGO_FAIL,\n          payload: data['message']\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: UPDATE_MENU_APP_LOGO_FAIL,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/my-site/actions.js"],"names":["axios","servicePath","tokenPrefix","errorMessage","UPDATE_MENU_APP_COLORS_REQUEST","UPDATE_MENU_APP_COLORS_SUCCESS","UPDATE_MENU_APP_COLORS_FAIL","UPDATE_MENU_APP_LOGO_REQUEST","UPDATE_MENU_APP_LOGO_SUCCESS","UPDATE_MENU_APP_LOGO_FAIL","updateMenuAppColor","payload","dispatch","getState","type","post","headers","authUser","token","then","response","data","localStorage","setItem","JSON","stringify","catch","error","updateMenuAppLogo"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {servicePath, tokenPrefix} from '../../constants/defaultValues';\nimport errorMessage from '../../constants/errorMessages';\n\nimport {\n    UPDATE_MENU_APP_COLORS_REQUEST,\n    UPDATE_MENU_APP_COLORS_SUCCESS,\n    UPDATE_MENU_APP_COLORS_FAIL,\n    UPDATE_MENU_APP_LOGO_REQUEST,\n    UPDATE_MENU_APP_LOGO_SUCCESS,\n    UPDATE_MENU_APP_LOGO_FAIL,\n} from '../actions';\n\nexport const updateMenuAppColor = (payload) => (dispatch, getState) => {\n\n    dispatch({\n        type: UPDATE_MENU_APP_COLORS_REQUEST\n    });\n\n    axios\n        .post(servicePath + \"/user/update-menu-app-colors\", payload, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response.data)\n        .then(data => {\n            if (data['message'] === \"\") {\n                localStorage.setItem('user_info', JSON.stringify(data['data']['user']));\n                dispatch({\n                    type: UPDATE_MENU_APP_COLORS_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: UPDATE_MENU_APP_COLORS_FAIL,\n                    payload: data['message']\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: UPDATE_MENU_APP_COLORS_FAIL,\n                payload: error\n            });\n        });\n};\n\nexport const updateMenuAppLogo = (payload) => (dispatch, getState) => {\n\n    dispatch({\n        type: UPDATE_MENU_APP_LOGO_REQUEST\n    });\n\n    axios\n        .post(servicePath + \"/user/update-menu-app-logo\", payload, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response.data)\n        .then(data => {\n            if (data['message'] === \"\") {\n                localStorage.setItem('user_info', JSON.stringify(data['data']['user']));\n                dispatch({\n                    type: UPDATE_MENU_APP_LOGO_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: UPDATE_MENU_APP_LOGO_FAIL,\n                    payload: data['message']\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: UPDATE_MENU_APP_LOGO_FAIL,\n                payload: error\n            });\n        });\n};"]},"metadata":{},"sourceType":"module"}