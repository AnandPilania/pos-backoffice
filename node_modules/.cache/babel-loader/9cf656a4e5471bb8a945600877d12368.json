{"ast":null,"code":"import _toConsumableArray from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/views/my-site/site-info/list.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\nimport axios from \"axios\";\nimport { servicePath, tokenPrefix } from \"../../../constants/defaultValues\";\nimport Pagination from \"../../../containers/products/Pagination\";\nimport ContextMenuContainer from \"../../../containers/products/ContextMenuContainer\";\nimport ListPageHeading from \"../../../containers/products/ListPageHeading\";\nimport ThumbListView from \"../../../containers/products/ThumbListView\";\nimport AddNewModal from \"../../../containers/products/AddNewModal\";\nimport ImageListView from \"../../../containers/products/ImageListView\";\nimport DataListView from \"../../../containers/products/DataListView\";\nimport { connect } from \"react-redux\";\n\nfunction collect(props) {\n  return {\n    data: props.data\n  };\n}\n\nvar apiUrl = servicePath + \"/products/paging\";\n\nvar ProductListPages = /*#__PURE__*/function (_Component) {\n  _inherits(ProductListPages, _Component);\n\n  var _super = _createSuper(ProductListPages);\n\n  function ProductListPages(props) {\n    var _this;\n\n    _classCallCheck(this, ProductListPages);\n\n    _this = _super.call(this, props);\n\n    _this.toggleModal = function () {\n      _this.setState({\n        modalOpen: !_this.state.modalOpen\n      });\n    };\n\n    _this.changeOrderBy = function (column) {\n      _this.setState({\n        selectedOrderOption: _this.state.orderOptions.find(function (x) {\n          return x.column === column;\n        })\n      }, function () {\n        return _this.dataListRender();\n      });\n    };\n\n    _this.changePageSize = function (size) {\n      _this.setState({\n        selectedPageSize: size,\n        currentPage: 1\n      }, function () {\n        return _this.dataListRender();\n      });\n    };\n\n    _this.changeDisplayMode = function (mode) {\n      _this.setState({\n        displayMode: mode\n      });\n\n      return false;\n    };\n\n    _this.onChangePage = function (page) {\n      _this.setState({\n        currentPage: page\n      }, function () {\n        return _this.dataListRender();\n      });\n    };\n\n    _this.onSearchKey = function (e) {\n      if (e.key === \"Enter\") {\n        _this.setState({\n          search: e.target.value.toLowerCase()\n        }, function () {\n          return _this.dataListRender();\n        });\n      }\n    };\n\n    _this.onCheckItem = function (event, id) {\n      if (event.target.tagName === \"A\" || event.target.parentElement && event.target.parentElement.tagName === \"A\") {\n        return true;\n      }\n\n      if (_this.state.lastChecked === null) {\n        _this.setState({\n          lastChecked: id\n        });\n      }\n\n      var selectedItems = _this.state.selectedItems;\n\n      if (selectedItems.includes(id)) {\n        selectedItems = selectedItems.filter(function (x) {\n          return x !== id;\n        });\n      } else {\n        selectedItems.push(id);\n      }\n\n      _this.setState({\n        selectedItems\n      });\n\n      if (event.shiftKey) {\n        var _selectedItems;\n\n        var items = _this.state.items;\n\n        var start = _this.getIndex(id, items, \"id\");\n\n        var end = _this.getIndex(_this.state.lastChecked, items, \"id\");\n\n        items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\n\n        (_selectedItems = selectedItems).push.apply(_selectedItems, _toConsumableArray(items.map(function (item) {\n          return item.id;\n        })));\n\n        selectedItems = Array.from(new Set(selectedItems));\n\n        _this.setState({\n          selectedItems\n        });\n      }\n\n      document.activeElement.blur();\n    };\n\n    _this.handleChangeSelectAll = function (isToggle) {\n      if (_this.state.selectedItems.length >= _this.state.items.length) {\n        if (isToggle) {\n          _this.setState({\n            selectedItems: []\n          });\n        }\n      } else {\n        _this.setState({\n          selectedItems: _this.state.items.map(function (x) {\n            return x.id;\n          })\n        });\n      }\n\n      document.activeElement.blur();\n      return false;\n    };\n\n    _this.getCategoryList = function () {\n      axios.get(\"\".concat(servicePath, \"/categories/all\"), {\n        headers: {\n          'X-API-TOKEN': tokenPrefix + _this.props.apiToken\n        }\n      }).then(function (res) {\n        console.log(res);\n        return res.data['data'];\n      }).then(function (data) {\n        _this.setState({\n          categories: data['category_list']\n        });\n      });\n    };\n\n    _this.onContextMenuClick = function (e, data, target) {\n      console.log(\"onContextMenuClick - selected items\", _this.state.selectedItems);\n      console.log(\"onContextMenuClick - action : \", data.action);\n    };\n\n    _this.onContextMenu = function (e, data) {\n      var clickedProductId = data.data;\n\n      if (!_this.state.selectedItems.includes(clickedProductId)) {\n        _this.setState({\n          selectedItems: [clickedProductId]\n        });\n      }\n\n      return true;\n    };\n\n    _this.mouseTrap = require('mousetrap');\n    _this.state = {\n      displayMode: \"thumblist\",\n      selectedPageSize: 8,\n      orderOptions: [{\n        column: \"\",\n        label: \"Default\"\n      }, {\n        column: \"name\",\n        label: \"Product Name\"\n      }, {\n        column: \"category\",\n        label: \"Category\"\n      }, {\n        column: \"status\",\n        label: \"Status\"\n      }],\n      pageSizes: [8, 12, 24],\n      categories: [],\n      selectedOrderOption: {\n        column: \"\",\n        label: \"Default\"\n      },\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      currentPage: 1,\n      totalItemCount: 0,\n      totalPage: 1,\n      search: \"\",\n      selectedItems: [],\n      lastChecked: null,\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(ProductListPages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.dataListRender();\n      this.getCategoryList();\n      this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], function () {\n        return _this2.handleChangeSelectAll(false);\n      });\n      this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], function () {\n        _this2.setState({\n          selectedItems: []\n        });\n\n        return false;\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mouseTrap.unbind(\"ctrl+a\");\n      this.mouseTrap.unbind(\"command+a\");\n      this.mouseTrap.unbind(\"ctrl+d\");\n      this.mouseTrap.unbind(\"command+d\");\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(value, arr, prop) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i][prop] === value) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"dataListRender\",\n    value: function dataListRender() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          selectedPageSize = _this$state.selectedPageSize,\n          currentPage = _this$state.currentPage,\n          selectedOrderOption = _this$state.selectedOrderOption,\n          search = _this$state.search;\n      axios.get(\"\".concat(apiUrl, \"?pageSize=\").concat(selectedPageSize, \"&currentPage=\").concat(currentPage, \"&orderBy=\").concat(selectedOrderOption.column, \"&search=\").concat(search), {\n        headers: {\n          'X-API-TOKEN': tokenPrefix + this.props.apiToken\n        }\n      }).then(function (res) {\n        return res.data['data'];\n      }).then(function (data) {\n        _this3.setState({\n          totalPage: data.totalPage,\n          items: data.data,\n          selectedItems: [],\n          totalItemCount: data.totalItem,\n          isLoading: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          currentPage = _this$state2.currentPage,\n          items = _this$state2.items,\n          displayMode = _this$state2.displayMode,\n          selectedPageSize = _this$state2.selectedPageSize,\n          totalItemCount = _this$state2.totalItemCount,\n          selectedOrderOption = _this$state2.selectedOrderOption,\n          selectedItems = _this$state2.selectedItems,\n          orderOptions = _this$state2.orderOptions,\n          pageSizes = _this$state2.pageSizes,\n          modalOpen = _this$state2.modalOpen,\n          categories = _this$state2.categories;\n      var match = this.props.match;\n      var startIndex = (currentPage - 1) * selectedPageSize;\n      var endIndex = currentPage * selectedPageSize;\n      console.log(categories);\n      return !this.state.isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"disable-text-selection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListPageHeading, {\n        heading: \"menu.products\",\n        displayModeEnable: 1,\n        displayMode: displayMode,\n        changeDisplayMode: this.changeDisplayMode,\n        handleChangeSelectAll: this.handleChangeSelectAll,\n        changeOrderBy: this.changeOrderBy,\n        changePageSize: this.changePageSize,\n        selectedPageSize: selectedPageSize,\n        totalItemCount: totalItemCount,\n        selectedOrderOption: selectedOrderOption,\n        match: match,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        selectedItemsLength: selectedItems ? selectedItems.length : 0,\n        itemsLength: items ? items.length : 0,\n        onSearchKey: this.onSearchKey,\n        orderOptions: orderOptions,\n        pageSizes: pageSizes,\n        toggleModal: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(AddNewModal, {\n        modalOpen: modalOpen,\n        toggleModal: this.toggleModal,\n        categories: categories,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }\n      }, this.state.items.map(function (product) {\n        if (_this4.state.displayMode === \"imagelist\") {\n          return /*#__PURE__*/React.createElement(ImageListView, {\n            key: product.id,\n            product: product,\n            isSelect: _this4.state.selectedItems.includes(product.id),\n            collect: collect,\n            onCheckItem: _this4.onCheckItem,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 37\n            }\n          });\n        } else if (_this4.state.displayMode === \"thumblist\") {\n          return /*#__PURE__*/React.createElement(ThumbListView, {\n            key: product.id,\n            product: product,\n            isSelect: _this4.state.selectedItems.includes(product.id),\n            collect: collect,\n            onCheckItem: _this4.onCheckItem,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 37\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(DataListView, {\n            key: product.id,\n            product: product,\n            isSelect: _this4.state.selectedItems.includes(product.id),\n            onCheckItem: _this4.onCheckItem,\n            collect: collect,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 37\n            }\n          });\n        }\n      }), \" \", /*#__PURE__*/React.createElement(Pagination, {\n        currentPage: this.state.currentPage,\n        totalPage: this.state.totalPage,\n        onChangePage: function onChangePage(i) {\n          return _this4.onChangePage(i);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ContextMenuContainer, {\n        onContextMenuClick: this.onContextMenuClick,\n        onContextMenu: this.onContextMenu,\n        selectedItemsLength: selectedItems ? selectedItems.length : 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return ProductListPages;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var authUser = _ref.authUser;\n  var apiToken = authUser.token;\n  return {\n    apiToken\n  };\n};\n\nexport default connect(mapStateToProps, {})(ProductListPages);","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/views/my-site/site-info/list.js"],"names":["React","Component","Fragment","Row","axios","servicePath","tokenPrefix","Pagination","ContextMenuContainer","ListPageHeading","ThumbListView","AddNewModal","ImageListView","DataListView","connect","collect","props","data","apiUrl","ProductListPages","toggleModal","setState","modalOpen","state","changeOrderBy","column","selectedOrderOption","orderOptions","find","x","dataListRender","changePageSize","size","selectedPageSize","currentPage","changeDisplayMode","mode","displayMode","onChangePage","page","onSearchKey","e","key","search","target","value","toLowerCase","onCheckItem","event","id","tagName","parentElement","lastChecked","selectedItems","includes","filter","push","shiftKey","items","start","getIndex","end","slice","Math","min","max","map","item","Array","from","Set","document","activeElement","blur","handleChangeSelectAll","isToggle","length","getCategoryList","get","headers","apiToken","then","res","console","log","categories","onContextMenuClick","action","onContextMenu","clickedProductId","mouseTrap","require","label","pageSizes","dropdownSplitOpen","totalItemCount","totalPage","isLoading","bind","unbind","arr","prop","i","totalItem","match","startIndex","endIndex","product","mapStateToProps","authUser","token"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport { servicePath, tokenPrefix } from \"../../../constants/defaultValues\";\r\n\r\nimport Pagination from \"../../../containers/products/Pagination\";\r\nimport ContextMenuContainer from \"../../../containers/products/ContextMenuContainer\";\r\nimport ListPageHeading from \"../../../containers/products/ListPageHeading\";\r\nimport ThumbListView from \"../../../containers/products/ThumbListView\";\r\nimport AddNewModal from \"../../../containers/products/AddNewModal\";\r\nimport ImageListView from \"../../../containers/products/ImageListView\";\r\nimport DataListView from \"../../../containers/products/DataListView\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction collect(props) {\r\n    return { data: props.data };\r\n}\r\nconst apiUrl = servicePath + \"/products/paging\";\r\n\r\nclass ProductListPages extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.mouseTrap = require('mousetrap');\r\n        this.state = {\r\n            displayMode: \"thumblist\",\r\n\r\n            selectedPageSize: 8,\r\n            orderOptions: [\r\n                { column: \"\", label: \"Default\" },\r\n                { column: \"name\", label: \"Product Name\" },\r\n                { column: \"category\", label: \"Category\" },\r\n                { column: \"status\", label: \"Status\" }\r\n            ],\r\n            pageSizes: [8, 12, 24],\r\n\r\n            categories: [],\r\n\r\n            selectedOrderOption: { column: \"\", label: \"Default\" },\r\n            dropdownSplitOpen: false,\r\n            modalOpen: false,\r\n            currentPage: 1,\r\n            totalItemCount: 0,\r\n            totalPage: 1,\r\n            search: \"\",\r\n            selectedItems: [],\r\n            lastChecked: null,\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dataListRender();\r\n        this.getCategoryList();\r\n        this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], () =>\r\n            this.handleChangeSelectAll(false)\r\n        );\r\n        this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], () => {\r\n            this.setState({\r\n                selectedItems: []\r\n            });\r\n            return false;\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mouseTrap.unbind(\"ctrl+a\");\r\n        this.mouseTrap.unbind(\"command+a\");\r\n        this.mouseTrap.unbind(\"ctrl+d\");\r\n        this.mouseTrap.unbind(\"command+d\");\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modalOpen: !this.state.modalOpen\r\n        });\r\n    };\r\n\r\n    changeOrderBy = column => {\r\n        this.setState(\r\n            {\r\n                selectedOrderOption: this.state.orderOptions.find(\r\n                    x => x.column === column\r\n                )\r\n            },\r\n            () => this.dataListRender()\r\n        );\r\n    };\r\n    changePageSize = size => {\r\n        this.setState(\r\n            {\r\n                selectedPageSize: size,\r\n                currentPage: 1\r\n            },\r\n            () => this.dataListRender()\r\n        );\r\n    };\r\n    changeDisplayMode = mode => {\r\n        this.setState({\r\n            displayMode: mode\r\n        });\r\n        return false;\r\n    };\r\n    onChangePage = page => {\r\n        this.setState(\r\n            {\r\n                currentPage: page\r\n            },\r\n            () => this.dataListRender()\r\n        );\r\n    };\r\n\r\n    onSearchKey = e => {\r\n        if (e.key === \"Enter\") {\r\n            this.setState(\r\n                {\r\n                    search: e.target.value.toLowerCase()\r\n                },\r\n                () => this.dataListRender()\r\n            );\r\n        }\r\n    };\r\n\r\n    onCheckItem = (event, id) => {\r\n        if (\r\n            event.target.tagName === \"A\" ||\r\n            (event.target.parentElement && event.target.parentElement.tagName === \"A\")\r\n        ) {\r\n            return true;\r\n        }\r\n        if (this.state.lastChecked === null) {\r\n            this.setState({\r\n                lastChecked: id\r\n            });\r\n        }\r\n\r\n        let selectedItems = this.state.selectedItems;\r\n        if (selectedItems.includes(id)) {\r\n            selectedItems = selectedItems.filter(x => x !== id);\r\n        } else {\r\n            selectedItems.push(id);\r\n        }\r\n        this.setState({\r\n            selectedItems\r\n        });\r\n\r\n        if (event.shiftKey) {\r\n            var items = this.state.items;\r\n            var start = this.getIndex(id, items, \"id\");\r\n            var end = this.getIndex(this.state.lastChecked, items, \"id\");\r\n            items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\r\n            selectedItems.push(\r\n                ...items.map(item => {\r\n                    return item.id;\r\n                })\r\n            );\r\n            selectedItems = Array.from(new Set(selectedItems));\r\n            this.setState({\r\n                selectedItems\r\n            });\r\n        }\r\n        document.activeElement.blur();\r\n    };\r\n\r\n    getIndex(value, arr, prop) {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (arr[i][prop] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    handleChangeSelectAll = isToggle => {\r\n        if (this.state.selectedItems.length >= this.state.items.length) {\r\n            if (isToggle) {\r\n                this.setState({\r\n                    selectedItems: []\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                selectedItems: this.state.items.map(x => x.id)\r\n            });\r\n        }\r\n        document.activeElement.blur();\r\n        return false;\r\n    };\r\n\r\n\r\n    dataListRender() {\r\n        const {\r\n            selectedPageSize,\r\n            currentPage,\r\n            selectedOrderOption,\r\n            search\r\n        } = this.state;\r\n        axios\r\n            .get(\r\n                `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${\r\n                    selectedOrderOption.column\r\n                }&search=${search}`, {\r\n                    headers: {\r\n                        'X-API-TOKEN': tokenPrefix + this.props.apiToken\r\n                    }\r\n                }\r\n            )\r\n            .then(res => {\r\n                return res.data['data'];\r\n            })\r\n            .then(data => {\r\n                this.setState({\r\n                    totalPage: data.totalPage,\r\n                    items: data.data,\r\n                    selectedItems: [],\r\n                    totalItemCount: data.totalItem,\r\n                    isLoading: true\r\n                });\r\n            });\r\n    }\r\n\r\n    getCategoryList = () => {\r\n        axios\r\n            .get(\r\n                `${servicePath}/categories/all`, {\r\n                    headers: {\r\n                        'X-API-TOKEN': tokenPrefix + this.props.apiToken\r\n                    }\r\n                }\r\n            )\r\n            .then(res => {\r\n                console.log(res);\r\n                return res.data['data'];\r\n            })\r\n            .then(data => {\r\n                this.setState({\r\n                    categories: data['category_list']\r\n                });\r\n            });\r\n    }\r\n\r\n    onContextMenuClick = (e, data, target) => {\r\n        console.log(\r\n            \"onContextMenuClick - selected items\",\r\n            this.state.selectedItems\r\n        );\r\n        console.log(\"onContextMenuClick - action : \", data.action);\r\n    };\r\n\r\n    onContextMenu = (e, data) => {\r\n        const clickedProductId = data.data;\r\n        if (!this.state.selectedItems.includes(clickedProductId)) {\r\n            this.setState({\r\n                selectedItems: [clickedProductId]\r\n            });\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            currentPage,\r\n            items,\r\n            displayMode,\r\n            selectedPageSize,\r\n            totalItemCount,\r\n            selectedOrderOption,\r\n            selectedItems,\r\n            orderOptions,\r\n            pageSizes,\r\n            modalOpen,\r\n            categories\r\n        } = this.state;\r\n        const { match } = this.props;\r\n        const startIndex = (currentPage - 1) * selectedPageSize;\r\n        const endIndex = currentPage * selectedPageSize;\r\n\r\n        console.log(categories);\r\n\r\n        return !this.state.isLoading ? (\r\n            <div className=\"loading\" />\r\n        ) : (\r\n            <Fragment>\r\n                <div className=\"disable-text-selection\">\r\n                    <ListPageHeading\r\n                        heading=\"menu.products\"\r\n                        displayModeEnable={1}\r\n                        displayMode={displayMode}\r\n                        changeDisplayMode={this.changeDisplayMode}\r\n                        handleChangeSelectAll={this.handleChangeSelectAll}\r\n                        changeOrderBy={this.changeOrderBy}\r\n                        changePageSize={this.changePageSize}\r\n                        selectedPageSize={selectedPageSize}\r\n                        totalItemCount={totalItemCount}\r\n                        selectedOrderOption={selectedOrderOption}\r\n                        match={match}\r\n                        startIndex={startIndex}\r\n                        endIndex={endIndex}\r\n                        selectedItemsLength={selectedItems ? selectedItems.length : 0}\r\n                        itemsLength={items ? items.length : 0}\r\n                        onSearchKey={this.onSearchKey}\r\n                        orderOptions={orderOptions}\r\n                        pageSizes={pageSizes}\r\n                        toggleModal={this.toggleModal}\r\n                    />\r\n                    <AddNewModal\r\n                        modalOpen={modalOpen}\r\n                        toggleModal={this.toggleModal}\r\n                        categories={categories}\r\n                    />\r\n                    <Row>\r\n                        {this.state.items.map(product => {\r\n                            if (this.state.displayMode === \"imagelist\") {\r\n                                return (\r\n                                    <ImageListView\r\n                                        key={product.id}\r\n                                        product={product}\r\n                                        isSelect={this.state.selectedItems.includes(product.id)}\r\n                                        collect={collect}\r\n                                        onCheckItem={this.onCheckItem}\r\n                                    />\r\n                                );\r\n                            } else if (this.state.displayMode === \"thumblist\") {\r\n                                return (\r\n                                    <ThumbListView\r\n                                        key={product.id}\r\n                                        product={product}\r\n                                        isSelect={this.state.selectedItems.includes(product.id)}\r\n                                        collect={collect}\r\n                                        onCheckItem={this.onCheckItem}\r\n                                    />\r\n                                );\r\n                            } else {\r\n                                return (\r\n                                    <DataListView\r\n                                        key={product.id}\r\n                                        product={product}\r\n                                        isSelect={this.state.selectedItems.includes(product.id)}\r\n                                        onCheckItem={this.onCheckItem}\r\n                                        collect={collect}\r\n                                    />\r\n                                );\r\n                            }\r\n                        })}{\" \"}\r\n                        <Pagination\r\n                            currentPage={this.state.currentPage}\r\n                            totalPage={this.state.totalPage}\r\n                            onChangePage={i => this.onChangePage(i)}\r\n                        />\r\n                        <ContextMenuContainer\r\n                            onContextMenuClick={this.onContextMenuClick}\r\n                            onContextMenu={this.onContextMenu}\r\n                            selectedItemsLength={selectedItems ? selectedItems.length : 0}\r\n                        />\r\n                    </Row>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n    const { token: apiToken } = authUser;\r\n    return { apiToken };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n)(ProductListPages);\r\n\r\n"]},"metadata":{},"sourceType":"module"}