{"ast":null,"code":"import _classCallCheck from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Row,Card,CardTitle,Label,FormGroup,Button}from\"reactstrap\";import{NavLink}from\"react-router-dom\";import{Formik,Form,Field}from\"formik\";import{Colxx}from\"../../components/common/CustomBootstrap\";import IntlMessages from\"../../helpers/IntlMessages\";import{resetPassword}from\"../../redux/actions\";import{NotificationManager}from\"../../components/common/react-notifications\";import{connect}from\"react-redux\";var ResetPassword=/*#__PURE__*/function(_Component){_inherits(ResetPassword,_Component);var _super=_createSuper(ResetPassword);function ResetPassword(props){var _this;_classCallCheck(this,ResetPassword);_this=_super.call(this,props);_this.onResetPassword=function(values){if(!_this.props.loading){var params=new URLSearchParams(_this.props.location.search);var oobCode=params.get('oobCode');if(oobCode){if(values.newPassword!==\"\"){_this.props.resetPassword({newPassword:values.newPassword,resetPasswordCode:oobCode,history:_this.props.history});}}else{NotificationManager.warning(\"Please check your email url.\",\"Reset Password Error\",3000,null,null,'');}}};_this.validateNewPassword=function(values){var newPassword=values.newPassword,newPasswordAgain=values.newPasswordAgain;var errors={};if(newPasswordAgain&&newPassword!==newPasswordAgain){errors.newPasswordAgain=\"Please check your new password\";}return errors;};_this.state={newPassword:'',newPasswordAgain:''};return _this;}_createClass(ResetPassword,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.props.error){NotificationManager.warning(this.props.error,\"Forgot Password Error\",3000,null,null,'');}else{if(!this.props.loading&&this.props.newPassword===\"success\")NotificationManager.success(\"Please login with your new password.\",\"Reset Password Success\",3000,null,null,'');}}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,newPassword=_this$state.newPassword,newPasswordAgain=_this$state.newPasswordAgain;var initialValues={newPassword,newPasswordAgain};return/*#__PURE__*/React.createElement(Row,{className:\"h-100\"},/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",md:\"10\",className:\"mx-auto my-auto\"},/*#__PURE__*/React.createElement(Card,{className:\"auth-card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"position-relative image-side \"},/*#__PURE__*/React.createElement(\"p\",{className:\"text-white h2\"},\"WELCOME TO PICKITAPPS\"),/*#__PURE__*/React.createElement(\"p\",{className:\"white mb-0\"},\"Please use your e-mail to reset your password. \",/*#__PURE__*/React.createElement(\"br\",null),\"If you are not a member, please\",\" \",/*#__PURE__*/React.createElement(NavLink,{to:\"/register\",className:\"white\"},\"register\"),\".\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-side\"},/*#__PURE__*/React.createElement(NavLink,{to:\"/\",className:\"white\"},/*#__PURE__*/React.createElement(\"span\",{className:\"logo-single\"})),/*#__PURE__*/React.createElement(CardTitle,{className:\"mb-4\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.reset-password\"})),/*#__PURE__*/React.createElement(Formik,{validate:this.validateNewPassword,initialValues:initialValues,onSubmit:this.onResetPassword},function(_ref){var errors=_ref.errors,touched=_ref.touched;return/*#__PURE__*/React.createElement(Form,{className:\"av-tooltip tooltip-label-bottom\"},/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group has-float-label\"},/*#__PURE__*/React.createElement(Label,null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.new-password\"})),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"newPassword\",type:\"password\"})),/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group has-float-label\"},/*#__PURE__*/React.createElement(Label,null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.new-password-again\"})),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"newPasswordAgain\",type:\"password\"}),errors.newPasswordAgain&&touched.newPasswordAgain&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback d-block\"},errors.newPasswordAgain)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between align-items-center\"},/*#__PURE__*/React.createElement(NavLink,{to:\"/user/login\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.login-title\"})),/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"btn-shadow btn-multiple-state \".concat(_this2.props.loading?\"show-spinner\":\"\"),size:\"lg\"},/*#__PURE__*/React.createElement(\"span\",{className:\"spinner d-inline-block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"bounce1\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"bounce2\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"bounce3\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.reset-password-button\"})))));})))));}}]);return ResetPassword;}(Component);var mapStateToProps=function mapStateToProps(_ref2){var authUser=_ref2.authUser;var newPassword=authUser.newPassword,resetPasswordCode=authUser.resetPasswordCode,loading=authUser.loading,error=authUser.error;return{newPassword,resetPasswordCode,loading,error};};export default connect(mapStateToProps,{resetPassword})(ResetPassword);","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/views/auth/reset-password.js"],"names":["React","Component","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","Formik","Form","Field","Colxx","IntlMessages","resetPassword","NotificationManager","connect","ResetPassword","props","onResetPassword","values","loading","params","URLSearchParams","location","search","oobCode","get","newPassword","resetPasswordCode","history","warning","validateNewPassword","newPasswordAgain","errors","state","error","success","initialValues","touched","mapStateToProps","authUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { resetPassword } from \"../../redux/actions\";\r\nimport { NotificationManager } from \"../../components/common/react-notifications\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newPassword: '',\r\n            newPasswordAgain: ''\r\n        };\r\n    }\r\n\r\n    onResetPassword = (values) => {\r\n        if (!this.props.loading) {\r\n            const params = new URLSearchParams(this.props.location.search);\r\n            const oobCode = params.get('oobCode');\r\n            if (oobCode) {\r\n                if (values.newPassword !== \"\") {\r\n                    this.props.resetPassword({ newPassword: values.newPassword, resetPasswordCode: oobCode, history: this.props.history });\r\n                }\r\n            } else {\r\n                NotificationManager.warning(\r\n                    \"Please check your email url.\",\r\n                    \"Reset Password Error\",\r\n                    3000,\r\n                    null,\r\n                    null,\r\n                    ''\r\n                );\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    validateNewPassword = (values) => {\r\n        const { newPassword, newPasswordAgain } = values;\r\n        let errors = {};\r\n        if (newPasswordAgain && newPassword !== newPasswordAgain) {\r\n            errors.newPasswordAgain = \"Please check your new password\";\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.error) {\r\n            NotificationManager.warning(\r\n                this.props.error,\r\n                \"Forgot Password Error\",\r\n                3000,\r\n                null,\r\n                null,\r\n                ''\r\n            );\r\n        } else {\r\n            if (!this.props.loading && this.props.newPassword === \"success\")\r\n                NotificationManager.success(\r\n                    \"Please login with your new password.\",\r\n                    \"Reset Password Success\",\r\n                    3000,\r\n                    null,\r\n                    null,\r\n                    ''\r\n                );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { newPassword, newPasswordAgain } = this.state;\r\n        const initialValues = { newPassword, newPasswordAgain };\r\n\r\n        return (\r\n            <Row className=\"h-100\">\r\n                <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n                    <Card className=\"auth-card\">\r\n                        <div className=\"position-relative image-side \">\r\n                            <p className=\"text-white h2\">WELCOME TO PICKITAPPS</p>\r\n                            <p className=\"white mb-0\">\r\n                                Please use your e-mail to reset your password. <br />\r\n                                If you are not a member, please{\" \"}\r\n                                <NavLink to={`/register`} className=\"white\">\r\n                                    register\r\n                </NavLink>\r\n                                .\r\n              </p>\r\n                        </div>\r\n                        <div className=\"form-side\">\r\n                            <NavLink to={`/`} className=\"white\">\r\n                                <span className=\"logo-single\" />\r\n                            </NavLink>\r\n                            <CardTitle className=\"mb-4\">\r\n                                <IntlMessages id=\"user.reset-password\" />\r\n                            </CardTitle>\r\n\r\n                            <Formik\r\n                                validate={this.validateNewPassword}\r\n                                initialValues={initialValues}\r\n                                onSubmit={this.onResetPassword}>\r\n                                {({ errors, touched }) => (\r\n                                    <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                                        <FormGroup className=\"form-group has-float-label\">\r\n                                            <Label>\r\n                                                <IntlMessages id=\"user.new-password\" />\r\n                                            </Label>\r\n                                            <Field\r\n                                                className=\"form-control\"\r\n                                                name=\"newPassword\"\r\n                                                type=\"password\"\r\n                                            />\r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"form-group has-float-label\">\r\n                                            <Label>\r\n                                                <IntlMessages id=\"user.new-password-again\" />\r\n                                            </Label>\r\n                                            <Field\r\n                                                className=\"form-control\"\r\n                                                name=\"newPasswordAgain\"\r\n                                                type=\"password\"\r\n                                            />\r\n                                            {errors.newPasswordAgain && touched.newPasswordAgain && (\r\n                                                <div className=\"invalid-feedback d-block\">\r\n                                                    {errors.newPasswordAgain}\r\n                                                </div>\r\n                                            )}\r\n                                        </FormGroup>\r\n\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <NavLink to={`/user/login`}>\r\n                                                <IntlMessages id=\"user.login-title\" />\r\n                                            </NavLink>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                className={`btn-shadow btn-multiple-state ${this.props.loading ? \"show-spinner\" : \"\"}`}\r\n                                                size=\"lg\"\r\n                                            >\r\n                                                <span className=\"spinner d-inline-block\">\r\n                                                    <span className=\"bounce1\" />\r\n                                                    <span className=\"bounce2\" />\r\n                                                    <span className=\"bounce3\" />\r\n                                                </span>\r\n                                                <span className=\"label\"><IntlMessages id=\"user.reset-password-button\" /></span>\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Form>\r\n                                )}\r\n                            </Formik>\r\n                        </div>\r\n                    </Card>\r\n                </Colxx>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n    const { newPassword, resetPasswordCode, loading, error } = authUser;\r\n    return { newPassword, resetPasswordCode, loading, error };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        resetPassword\r\n    }\r\n)(ResetPassword);\r\n\r\n"]},"metadata":{},"sourceType":"module"}