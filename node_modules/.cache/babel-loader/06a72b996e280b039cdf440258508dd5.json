{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LOAD_PRODUCT_SUCCESS, LOAD_PRODUCT_FAIL, TOGGLE_PRODUCT_STATE, TOGGLE_PRODUCT_STATE_SUCCESS, TOGGLE_PRODUCT_STATE_FAIL, CHANGE_PRODUCTS_STATE_SUCCESS, CHANGE_PRODUCTS_STATE_FAIL } from \"../actions\";\nimport axios from \"axios\";\nimport { tokenPrefix, servicePath } from \"../../constants/defaultValues\";\nexport var getProduct = function getProduct(pageInfo) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", axios.get(\"\".concat(servicePath, \"/products/paging?pageSize=\").concat(pageInfo.selectedPageSize, \"&currentPage=\").concat(pageInfo.currentPage, \"&orderBy=\").concat(pageInfo.selectedOrderOption.column, \"&search=\").concat(pageInfo.search), {\n                headers: {\n                  'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n              }).then(function (res) {\n                return res.data['data'];\n              }).then(function (data) {\n                dispatch({\n                  type: LOAD_PRODUCT_SUCCESS,\n                  payload: data\n                });\n              }).catch(function (error) {\n                dispatch({\n                  type: LOAD_PRODUCT_FAIL\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var toggleProductState = function toggleProductState(productId) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: TOGGLE_PRODUCT_STATE,\n      payload: [productId]\n    });\n    axios.post(servicePath + \"/products/toggleActive\", {\n      productId\n    }, {\n      headers: {\n        'X-API-TOKEN': tokenPrefix + getState().authUser.token\n      }\n    }).then(function (response) {\n      return response['data'];\n    }).then(function (data) {\n      if (data['message'] === \"\") {\n        dispatch({\n          type: TOGGLE_PRODUCT_STATE_SUCCESS,\n          payload: productId\n        });\n      } else {\n        dispatch({\n          type: TOGGLE_PRODUCT_STATE_FAIL\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: TOGGLE_PRODUCT_STATE_FAIL\n      });\n    });\n  };\n};\nexport var changeProductsState = function changeProductsState(productIds, state) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: TOGGLE_PRODUCT_STATE,\n      payload: productIds\n    });\n    axios.post(servicePath + \"/products/changeState\", {\n      productIds: JSON.stringify(productIds),\n      state\n    }, {\n      headers: {\n        'X-API-TOKEN': tokenPrefix + getState().authUser.token\n      }\n    }).then(function (response) {\n      return response['data'];\n    }).then(function (data) {\n      if (data['message'] === \"\") {\n        dispatch({\n          type: CHANGE_PRODUCTS_STATE_SUCCESS,\n          payload: productIds\n        });\n      } else {\n        dispatch({\n          type: CHANGE_PRODUCTS_STATE_FAIL\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: CHANGE_PRODUCTS_STATE_FAIL\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/products/actions.js"],"names":["LOAD_PRODUCT_SUCCESS","LOAD_PRODUCT_FAIL","TOGGLE_PRODUCT_STATE","TOGGLE_PRODUCT_STATE_SUCCESS","TOGGLE_PRODUCT_STATE_FAIL","CHANGE_PRODUCTS_STATE_SUCCESS","CHANGE_PRODUCTS_STATE_FAIL","axios","tokenPrefix","servicePath","getProduct","pageInfo","dispatch","getState","get","selectedPageSize","currentPage","selectedOrderOption","column","search","headers","authUser","token","then","res","data","type","payload","catch","error","toggleProductState","productId","post","response","changeProductsState","productIds","state","JSON","stringify"],"mappings":"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","sourcesContent":["import {\n    LOAD_PRODUCT_SUCCESS,\n    LOAD_PRODUCT_FAIL,\n    TOGGLE_PRODUCT_STATE,\n    TOGGLE_PRODUCT_STATE_SUCCESS,\n    TOGGLE_PRODUCT_STATE_FAIL,\n    CHANGE_PRODUCTS_STATE_SUCCESS,\n    CHANGE_PRODUCTS_STATE_FAIL\n} from \"../actions\";\nimport axios from \"axios\";\nimport {tokenPrefix, servicePath} from \"../../constants/defaultValues\";\n\nexport const getProduct = (pageInfo) => async (dispatch, getState) => {\n    return axios\n        .get(\n            `${servicePath}/products/paging?pageSize=${pageInfo.selectedPageSize}&currentPage=${pageInfo.currentPage}&orderBy=${\n                pageInfo.selectedOrderOption.column}&search=${pageInfo.search}`, {\n                headers: {\n                    'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n            }\n        )\n        .then(res => {\n            return res.data['data'];\n        })\n        .then(data => {\n            dispatch({\n                type: LOAD_PRODUCT_SUCCESS,\n                payload: data\n            });\n        })\n        .catch(error => {\n            dispatch({\n                type: LOAD_PRODUCT_FAIL,\n            });\n        });\n}\n\nexport const toggleProductState = (productId) => (dispatch, getState) => {\n    dispatch({\n        type: TOGGLE_PRODUCT_STATE,\n        payload: [productId]\n    });\n    axios\n        .post(servicePath + \"/products/toggleActive\", {\n            productId\n        }, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response['data'])\n        .then(data => {\n            if (data['message'] === \"\") {\n                dispatch({\n                    type: TOGGLE_PRODUCT_STATE_SUCCESS,\n                    payload: productId\n                });\n            } else {\n                dispatch({\n                    type: TOGGLE_PRODUCT_STATE_FAIL\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: TOGGLE_PRODUCT_STATE_FAIL\n            });\n        });\n}\n\nexport const changeProductsState = (productIds, state) => (dispatch, getState) => {\n    dispatch({\n        type: TOGGLE_PRODUCT_STATE,\n        payload: productIds\n    });\n    axios\n        .post(servicePath + \"/products/changeState\", {\n            productIds: JSON.stringify(productIds),\n            state\n        }, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response['data'])\n        .then(data => {\n            if (data['message'] === \"\") {\n                dispatch({\n                    type: CHANGE_PRODUCTS_STATE_SUCCESS,\n                    payload: productIds\n                });\n            } else {\n                dispatch({\n                    type: CHANGE_PRODUCTS_STATE_FAIL\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: CHANGE_PRODUCTS_STATE_FAIL\n            });\n        });\n}"]},"metadata":{},"sourceType":"module"}