{"ast":null,"code":"import _objectSpread from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{LOAD_CATEGORY_SUCCESS,LOAD_CATEGORY_FAIL,TOGGLE_CATEGORY_STATE,TOGGLE_CATEGORY_STATE_SUCCESS,TOGGLE_CATEGORY_STATE_FAIL,CHANGE_CATEGORIES_STATE_SUCCESS,CHANGE_CATEGORIES_STATE_FAIL}from\"../actions\";var INIT_STATE={items:[],totalPage:1,totalItem:0,toggleItems:[]};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INIT_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LOAD_CATEGORY_SUCCESS:return _objectSpread(_objectSpread({},state),{},{items:action.payload.data,totalItem:action.payload.totalItem,totalPage:action.payload.totalPage});case LOAD_CATEGORY_FAIL:return _objectSpread(_objectSpread({},state),{},{items:[],totalItem:0,totalPage:1});case TOGGLE_CATEGORY_STATE:return _objectSpread(_objectSpread({},state),{},{toggleItems:action.payload});case TOGGLE_CATEGORY_STATE_SUCCESS:return _objectSpread(_objectSpread({},state),{},{items:toggleCategoryState(state.items,action.payload),toggleItems:[]});case CHANGE_CATEGORIES_STATE_SUCCESS:return _objectSpread(_objectSpread({},state),{},{items:updateCategoriesState(state.items,action.payload.categoryIds,action.payload.state),toggleItems:[]});case TOGGLE_CATEGORY_STATE_FAIL:case CHANGE_CATEGORIES_STATE_FAIL:return _objectSpread(_objectSpread({},state),{},{toggleItems:[]});default:return _objectSpread({},state);}});var toggleCategoryState=function toggleCategoryState(categories,categoryId){return categories.map(function(category){if(category['id']!==categoryId)return category;return _objectSpread(_objectSpread({},category),{},{show_flag:1-category.show_flag});});};var updateCategoriesState=function updateCategoriesState(categories,categoryIds,state){return categories.map(function(category){if(categoryIds.indexOf(category['id'])<0)return category;return _objectSpread(_objectSpread({},category),{},{show_flag:state});});};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/categories/reducer.js"],"names":["LOAD_CATEGORY_SUCCESS","LOAD_CATEGORY_FAIL","TOGGLE_CATEGORY_STATE","TOGGLE_CATEGORY_STATE_SUCCESS","TOGGLE_CATEGORY_STATE_FAIL","CHANGE_CATEGORIES_STATE_SUCCESS","CHANGE_CATEGORIES_STATE_FAIL","INIT_STATE","items","totalPage","totalItem","toggleItems","state","action","type","payload","data","toggleCategoryState","updateCategoriesState","categoryIds","categories","categoryId","map","category","show_flag","indexOf"],"mappings":"+MAAA,OACIA,qBADJ,CAEIC,kBAFJ,CAGIC,qBAHJ,CAIIC,6BAJJ,CAKIC,0BALJ,CAMIC,+BANJ,CAOIC,4BAPJ,KAQO,YARP,CAUA,GAAMC,CAAAA,UAAU,CAAG,CACfC,KAAK,CAAE,EADQ,CAEfC,SAAS,CAAE,CAFI,CAGfC,SAAS,CAAE,CAHI,CAIfC,WAAW,CAAE,EAJE,CAAnB,CAOA,eAAe,UAAgC,IAA/BC,CAAAA,KAA+B,2DAAvBL,UAAuB,IAAXM,CAAAA,MAAW,2CAC3C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKd,CAAAA,qBAAL,CACI,sCACOY,KADP,MAEIJ,KAAK,CAAEK,MAAM,CAACE,OAAP,CAAeC,IAF1B,CAGIN,SAAS,CAAEG,MAAM,CAACE,OAAP,CAAeL,SAH9B,CAIID,SAAS,CAAEI,MAAM,CAACE,OAAP,CAAeN,SAJ9B,GAMJ,IAAKR,CAAAA,kBAAL,CACI,sCACOW,KADP,MAEIJ,KAAK,CAAE,EAFX,CAGIE,SAAS,CAAE,CAHf,CAIID,SAAS,CAAE,CAJf,GAMJ,IAAKP,CAAAA,qBAAL,CACI,sCACOU,KADP,MAEID,WAAW,CAAEE,MAAM,CAACE,OAFxB,GAIJ,IAAKZ,CAAAA,6BAAL,CACI,sCACOS,KADP,MAEIJ,KAAK,CAAES,mBAAmB,CAACL,KAAK,CAACJ,KAAP,CAAcK,MAAM,CAACE,OAArB,CAF9B,CAGIJ,WAAW,CAAE,EAHjB,GAKJ,IAAKN,CAAAA,+BAAL,CACI,sCACOO,KADP,MAEIJ,KAAK,CAAEU,qBAAqB,CAACN,KAAK,CAACJ,KAAP,CAAcK,MAAM,CAACE,OAAP,CAAeI,WAA7B,CAA0CN,MAAM,CAACE,OAAP,CAAeH,KAAzD,CAFhC,CAGID,WAAW,CAAE,EAHjB,GAKJ,IAAKP,CAAAA,0BAAL,CACA,IAAKE,CAAAA,4BAAL,CACI,sCACOM,KADP,MAEID,WAAW,CAAE,EAFjB,GAIJ,QACI,wBAAWC,KAAX,EAvCR,CAyCH,CA1CD,EA4CA,GAAMK,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACG,UAAD,CAAaC,UAAb,CAA4B,CACpD,MAAOD,CAAAA,UAAU,CAACE,GAAX,CAAe,SAAAC,QAAQ,CAAI,CAC9B,GAAIA,QAAQ,CAAC,IAAD,CAAR,GAAmBF,UAAvB,CAAmC,MAAOE,CAAAA,QAAP,CACnC,sCACOA,QADP,MAEIC,SAAS,CAAE,EAAID,QAAQ,CAACC,SAF5B,GAIH,CANM,CAAP,CAOH,CARD,CAUA,GAAMN,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACE,UAAD,CAAaD,WAAb,CAA0BP,KAA1B,CAAoC,CAC9D,MAAOQ,CAAAA,UAAU,CAACE,GAAX,CAAe,SAAAC,QAAQ,CAAI,CAC9B,GAAIJ,WAAW,CAACM,OAAZ,CAAoBF,QAAQ,CAAC,IAAD,CAA5B,EAAsC,CAA1C,CAA6C,MAAOA,CAAAA,QAAP,CAC7C,sCACOA,QADP,MAEIC,SAAS,CAAEZ,KAFf,GAIH,CANM,CAAP,CAOH,CARD","sourcesContent":["import {\n    LOAD_CATEGORY_SUCCESS,\n    LOAD_CATEGORY_FAIL,\n    TOGGLE_CATEGORY_STATE,\n    TOGGLE_CATEGORY_STATE_SUCCESS,\n    TOGGLE_CATEGORY_STATE_FAIL,\n    CHANGE_CATEGORIES_STATE_SUCCESS,\n    CHANGE_CATEGORIES_STATE_FAIL\n} from \"../actions\";\n\nconst INIT_STATE = {\n    items: [],\n    totalPage: 1,\n    totalItem: 0,\n    toggleItems: []\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case LOAD_CATEGORY_SUCCESS:\n            return {\n                ...state,\n                items: action.payload.data,\n                totalItem: action.payload.totalItem,\n                totalPage: action.payload.totalPage\n            };\n        case LOAD_CATEGORY_FAIL:\n            return {\n                ...state,\n                items: [],\n                totalItem: 0,\n                totalPage: 1\n            };\n        case TOGGLE_CATEGORY_STATE:\n            return {\n                ...state,\n                toggleItems: action.payload,\n            };\n        case TOGGLE_CATEGORY_STATE_SUCCESS:\n            return {\n                ...state,\n                items: toggleCategoryState(state.items, action.payload),\n                toggleItems: []\n            };\n        case CHANGE_CATEGORIES_STATE_SUCCESS:\n            return {\n                ...state,\n                items: updateCategoriesState(state.items, action.payload.categoryIds, action.payload.state),\n                toggleItems: []\n            }\n        case TOGGLE_CATEGORY_STATE_FAIL:\n        case CHANGE_CATEGORIES_STATE_FAIL:\n            return {\n                ...state,\n                toggleItems: []\n            }\n        default:\n            return {...state};\n    }\n}\n\nconst toggleCategoryState = (categories, categoryId) => {\n    return categories.map(category => {\n        if (category['id'] !== categoryId) return category;\n        return {\n            ...category,\n            show_flag: 1 - category.show_flag\n        }\n    });\n}\n\nconst updateCategoriesState = (categories, categoryIds, state) => {\n    return categories.map(category => {\n        if (categoryIds.indexOf(category['id']) < 0) return category;\n        return {\n            ...category,\n            show_flag: state\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}