{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/products/AddNewModal.js\";\nimport React, { Component } from \"react\";\nimport { CustomInput, Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from \"reactstrap\";\nimport Select from \"react-select\";\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport axios from \"axios\";\nimport { servicePath, tokenPrefix } from \"../../constants/defaultValues\";\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nimport errorMessage from \"../../constants/errorMessages\";\n\nvar AddNewModal = /*#__PURE__*/function (_Component) {\n  _inherits(AddNewModal, _Component);\n\n  var _super = _createSuper(AddNewModal);\n\n  function AddNewModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddNewModal);\n\n    _this = _super.call(this, props);\n\n    _this.handleCategory = function (category) {\n      console.log('a');\n\n      _this.setState({\n        category\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    _this.onStatusChange = function (e) {\n      _this.setState({\n        status: e.target.value\n      });\n    };\n\n    _this.onSubmit = function () {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          status = _this$state.status,\n          loading = _this$state.loading,\n          description = _this$state.description;\n\n      if (!loading && name !== \"\") {\n        _this.setState({\n          loading: true\n        });\n\n        axios.post(servicePath + \"/products/add\", {\n          name,\n          description,\n          status\n        }, {\n          headers: {\n            'X-API-TOKEN': tokenPrefix + _this.props.apiToken\n          }\n        }).then(function (response) {\n          _this.setState({\n            name: \"\",\n            status: \"\",\n            loading: false\n          });\n\n          if (response.status === 200 && response.data['message'] === \"\") {\n            NotificationManager.success(\"Successfully Added Category\", \"Success\", 3000, null, null, '');\n\n            _this.props.toggleModal();\n\n            _this.props.dataListRender();\n          } else {\n            var errorCode = response.data['message'];\n            NotificationManager.warning(errorMessage[errorCode], \"Error\", 3000, null, null, '');\n          }\n        }).catch(function (error) {\n          _this.setState({\n            name: \"\",\n            status: \"\",\n            loading: false\n          });\n\n          NotificationManager.warning(error, \"Error\", 3000, null, null, '');\n        });\n      }\n    };\n\n    _this.handleCategory = _this.handleCategory.bind(_assertThisInitialized(_this));\n    _this.state = {\n      name: \"\",\n      description: \"\",\n      status: \"\",\n      loading: false,\n      category: {}\n    };\n    return _this;\n  }\n\n  _createClass(AddNewModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          modalOpen = _this$props.modalOpen,\n          toggleModal = _this$props.toggleModal,\n          categories = _this$props.categories;\n      var category = this.state.category;\n      return /*#__PURE__*/React.createElement(Modal, {\n        isOpen: modalOpen,\n        toggle: toggleModal,\n        wrapClassName: \"modal-right\",\n        backdrop: \"static\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.add-new-modal-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.product-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        name: \"name\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Select, {\n        components: {\n          Input: CustomSelectInput\n        },\n        className: \"react-select\",\n        classNamePrefix: \"react-select\",\n        name: \"form-field-name\" //value={category}\n        ,\n        onChage: function onChage(val) {\n          return _this2.handleCategory(val);\n        },\n        options: categories,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"textarea\",\n        name: \"description\",\n        id: \"exampleText\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"radio\",\n        id: \"exCustomRadio\",\n        name: \"customRadio\",\n        label: \"ON HOLD\",\n        value: \"0\",\n        onChange: this.onStatusChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"radio\",\n        id: \"exCustomRadio2\",\n        name: \"customRadio\",\n        label: \"PROCESSED\",\n        value: \"1\",\n        onChange: this.onStatusChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        outline: true,\n        onClick: toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        className: \"btn-shadow btn-multiple-state \".concat(this.state.loading ? \"show-spinner\" : \"\"),\n        onClick: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spinner d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 49\n        }\n      }))), \" \"));\n    }\n  }]);\n\n  return AddNewModal;\n}(Component);\n\nexport default AddNewModal;","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/products/AddNewModal.js"],"names":["React","Component","CustomInput","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","Select","CustomSelectInput","IntlMessages","axios","servicePath","tokenPrefix","NotificationManager","errorMessage","AddNewModal","props","handleCategory","category","console","log","setState","onChange","e","target","name","value","onStatusChange","status","onSubmit","state","loading","description","post","headers","apiToken","then","response","data","success","toggleModal","dataListRender","errorCode","warning","catch","error","bind","modalOpen","categories","val"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n    CustomInput,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Input,\r\n    Label\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport axios from \"axios\";\r\nimport {servicePath, tokenPrefix} from \"../../constants/defaultValues\";\r\nimport {NotificationManager} from \"../../components/common/react-notifications\";\r\nimport errorMessage from \"../../constants/errorMessages\";\r\n\r\nclass AddNewModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCategory = this.handleCategory.bind(this);\r\n        this.state = {\r\n            name: \"\",\r\n            description: \"\",\r\n            status: \"\",\r\n            loading: false,\r\n            category: {}\r\n        };\r\n    }\r\n\r\n    handleCategory = category => {\r\n        console.log('a');\r\n        this.setState({category});\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onStatusChange = e => {\r\n        this.setState({\r\n            status: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const {name, status, loading, description} = this.state;\r\n        if (!loading && name !== \"\") {\r\n            this.setState({loading: true});\r\n            axios\r\n                .post(servicePath + \"/products/add\", {\r\n                    name,\r\n                    description,\r\n                    status\r\n                }, {\r\n                    headers: {\r\n                        'X-API-TOKEN': tokenPrefix + this.props.apiToken\r\n                    }\r\n                })\r\n                .then(response => {\r\n                    this.setState({\r\n                        name: \"\",\r\n                        status: \"\",\r\n                        loading: false\r\n                    });\r\n                    if (response.status === 200 && response.data['message'] === \"\") {\r\n                        NotificationManager.success(\r\n                            \"Successfully Added Category\",\r\n                            \"Success\",\r\n                            3000,\r\n                            null,\r\n                            null,\r\n                            ''\r\n                        );\r\n                        this.props.toggleModal();\r\n                        this.props.dataListRender();\r\n                    } else {\r\n                        const errorCode = response.data['message'];\r\n                        NotificationManager.warning(\r\n                            errorMessage[errorCode],\r\n                            \"Error\",\r\n                            3000,\r\n                            null,\r\n                            null,\r\n                            ''\r\n                        );\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        name: \"\",\r\n                        status: \"\",\r\n                        loading: false\r\n                    });\r\n                    NotificationManager.warning(\r\n                        error,\r\n                        \"Error\",\r\n                        3000,\r\n                        null,\r\n                        null,\r\n                        ''\r\n                    );\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {modalOpen, toggleModal, categories} = this.props;\r\n        const {category} = this.state;\r\n        return (\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                toggle={toggleModal}\r\n                wrapClassName=\"modal-right\"\r\n                backdrop=\"static\"\r\n            >\r\n                <ModalHeader toggle={toggleModal}>\r\n                    <IntlMessages id=\"pages.add-new-modal-title\"/>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Label>\r\n                        <IntlMessages id=\"pages.product-name\"/>\r\n                    </Label>\r\n                    <Input name=\"name\" onChange={this.onChange}/>\r\n                    <Label className=\"mt-4\">\r\n                        <IntlMessages id=\"pages.category\"/>\r\n                    </Label>\r\n                    <Select\r\n                        components={{Input: CustomSelectInput}}\r\n                        className=\"react-select\"\r\n                        classNamePrefix=\"react-select\"\r\n                        name=\"form-field-name\"\r\n                        //value={category}\r\n                        onChage={(val) => this.handleCategory(val)}\r\n                        options={categories}\r\n\r\n                    />\r\n                    <Label className=\"mt-4\">\r\n                        <IntlMessages id=\"pages.description\"/>\r\n                    </Label>\r\n                    <Input type=\"textarea\" name=\"description\" id=\"exampleText\" onChange={this.onChange}/>\r\n                    <Label className=\"mt-4\">\r\n                        <IntlMessages id=\"pages.status\"/>\r\n                    </Label>\r\n                    <CustomInput\r\n                        type=\"radio\"\r\n                        id=\"exCustomRadio\"\r\n                        name=\"customRadio\"\r\n                        label=\"ON HOLD\"\r\n                        value=\"0\"\r\n                        onChange={this.onStatusChange}\r\n                    />\r\n                    <CustomInput\r\n                        type=\"radio\"\r\n                        id=\"exCustomRadio2\"\r\n                        name=\"customRadio\"\r\n                        label=\"PROCESSED\"\r\n                        value=\"1\"\r\n                        onChange={this.onStatusChange}\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"secondary\" outline onClick={toggleModal}>\r\n                        <IntlMessages id=\"pages.cancel\"/>\r\n                    </Button>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        className={`btn-shadow btn-multiple-state ${this.state.loading ? \"show-spinner\" : \"\"}`}\r\n                        onClick={this.onSubmit}\r\n                    >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\"><IntlMessages id=\"pages.submit\" /></span>\r\n                    </Button>{\" \"}\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewModal;\r\n"]},"metadata":{},"sourceType":"module"}