{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/navs/Topnav.js\";\nimport React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu, Input } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setContainerClassnames, clickOnMobileMenu, changeLocale } from \"../../redux/actions\";\nimport { localeOptions, isDarkSwitchActive } from \"../../constants/defaultValues\";\nimport { MobileMenuIcon, MenuIcon } from \"../../components/svg\";\nimport TopnavNotifications from \"./Topnav.Notifications\";\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\nimport { getDirection, setDirection } from \"../../helpers/Utils\";\n\nvar TopNav = /*#__PURE__*/function (_Component) {\n  _inherits(TopNav, _Component);\n\n  var _super = _createSuper(TopNav);\n\n  function TopNav(props) {\n    var _this;\n\n    _classCallCheck(this, TopNav);\n\n    _this = _super.call(this, props);\n\n    _this.handleChangeLocale = function (locale, direction) {\n      _this.props.changeLocale(locale);\n\n      var currentDirection = getDirection().direction;\n\n      if (direction !== currentDirection) {\n        setDirection(direction);\n        setTimeout(function () {\n          window.location.reload();\n        }, 500);\n      }\n    };\n\n    _this.handleLogout = function () {//logout\n    };\n\n    _this.menuButtonClick = function (e, menuClickCount, containerClassnames) {\n      e.preventDefault();\n      setTimeout(function () {\n        var event = document.createEvent(\"HTMLEvents\");\n        event.initEvent(\"resize\", false, false);\n        window.dispatchEvent(event);\n      }, 350);\n\n      _this.props.setContainerClassnames(++menuClickCount, containerClassnames, _this.props.selectedMenuHasSubItems);\n    };\n\n    _this.mobileMenuButtonClick = function (e, containerClassnames) {\n      e.preventDefault();\n\n      _this.props.clickOnMobileMenu(containerClassnames);\n    };\n\n    _this.state = {\n      isInFullScreen: false,\n      searchKeyword: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TopNav, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          containerClassnames = _this$props.containerClassnames,\n          menuClickCount = _this$props.menuClickCount,\n          locale = _this$props.locale;\n      var messages = this.props.intl.messages;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar fixed-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center navbar-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"#\",\n        location: {},\n        className: \"menu-button d-none d-md-block\",\n        onClick: function onClick(e) {\n          return _this2.menuButtonClick(e, menuClickCount, containerClassnames);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(NavLink, {\n        to: \"#\",\n        location: {},\n        className: \"menu-button-mobile d-xs-block d-sm-block d-md-none\",\n        onClick: function onClick(e) {\n          return _this2.mobileMenuButtonClick(e, containerClassnames);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MobileMenuIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        caret: true,\n        color: \"light\",\n        size: \"sm\",\n        className: \"language-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, locale.toUpperCase())), /*#__PURE__*/React.createElement(DropdownMenu, {\n        className: \"mt-3\",\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, localeOptions.map(function (l) {\n        return /*#__PURE__*/React.createElement(DropdownItem, {\n          onClick: function onClick() {\n            return _this2.handleChangeLocale(l.id, l.direction);\n          },\n          key: l.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }\n        }, l.name);\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, isDarkSwitchActive && /*#__PURE__*/React.createElement(TopnavDarkSwitch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 34\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header-icons d-inline-block align-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TopnavNotifications, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        className: \"dropdown-menu-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        className: \"p-0\",\n        color: \"empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"name mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, \"Sarah Kortney\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Profile\",\n        src: \"/assets/img/profile-pic-l.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(DropdownMenu, {\n        className: \"mt-3\",\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, \"Account\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, \"Features\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, \"History\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, \"Support\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        divider: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: function onClick() {\n          return _this2.handleLogout();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, \"Sign out\"))))));\n    }\n  }]);\n\n  return TopNav;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var menu = _ref.menu,\n      settings = _ref.settings;\n  var containerClassnames = menu.containerClassnames,\n      menuClickCount = menu.menuClickCount,\n      selectedMenuHasSubItems = menu.selectedMenuHasSubItems;\n  var locale = settings.locale;\n  return {\n    containerClassnames,\n    menuClickCount,\n    selectedMenuHasSubItems,\n    locale\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, {\n  setContainerClassnames,\n  clickOnMobileMenu,\n  logoutUser,\n  changeLocale\n})(TopNav));","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/navs/Topnav.js"],"names":["React","Component","injectIntl","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","Input","NavLink","connect","setContainerClassnames","clickOnMobileMenu","changeLocale","localeOptions","isDarkSwitchActive","MobileMenuIcon","MenuIcon","TopnavNotifications","TopnavDarkSwitch","getDirection","setDirection","TopNav","props","handleChangeLocale","locale","direction","currentDirection","setTimeout","window","location","reload","handleLogout","menuButtonClick","e","menuClickCount","containerClassnames","preventDefault","event","document","createEvent","initEvent","dispatchEvent","selectedMenuHasSubItems","mobileMenuButtonClick","state","isInFullScreen","searchKeyword","messages","intl","toUpperCase","map","l","id","name","mapStateToProps","menu","settings","logoutUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  changeLocale\r\n} from \"../../redux/actions\";\r\n\r\nimport {\r\n  localeOptions,\r\n  isDarkSwitchActive,\r\n} from \"../../constants/defaultValues\";\r\n\r\nimport { MobileMenuIcon, MenuIcon } from \"../../components/svg\";\r\nimport TopnavNotifications from \"./Topnav.Notifications\";\r\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\r\n\r\nimport { getDirection, setDirection } from \"../../helpers/Utils\";\r\n\r\nclass TopNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isInFullScreen: false,\r\n      searchKeyword: \"\"\r\n    };\r\n  }\r\n\r\n  handleChangeLocale = (locale, direction) => {\r\n    this.props.changeLocale(locale);\r\n\r\n    const currentDirection = getDirection().direction;\r\n    if (direction !== currentDirection) {\r\n      setDirection(direction);\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  handleLogout = () => {\r\n    //logout\r\n  };\r\n\r\n  menuButtonClick = (e, menuClickCount, containerClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      var event = document.createEvent(\"HTMLEvents\");\r\n      event.initEvent(\"resize\", false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    this.props.setContainerClassnames(\r\n      ++menuClickCount,\r\n      containerClassnames,\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n  mobileMenuButtonClick = (e, containerClassnames) => {\r\n    e.preventDefault();\r\n    this.props.clickOnMobileMenu(containerClassnames);\r\n  };\r\n\r\n  render() {\r\n    const { containerClassnames, menuClickCount, locale } = this.props;\r\n    const { messages } = this.props.intl;\r\n    return (\r\n      <nav className=\"navbar fixed-top\">\r\n        <div className=\"d-flex align-items-center navbar-left\">\r\n          <NavLink\r\n            to=\"#\" location={{}}\r\n            className=\"menu-button d-none d-md-block\"\r\n            onClick={e =>\r\n              this.menuButtonClick(e, menuClickCount, containerClassnames)\r\n            }\r\n          >\r\n            <MenuIcon />\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"#\" location={{}}\r\n            className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n            onClick={e => this.mobileMenuButtonClick(e, containerClassnames)}\r\n          >\r\n            <MobileMenuIcon />\r\n          </NavLink>\r\n\r\n          <div className=\"d-inline-block\">\r\n            <UncontrolledDropdown className=\"ml-2\">\r\n              <DropdownToggle\r\n                caret\r\n                color=\"light\"\r\n                size=\"sm\"\r\n                className=\"language-button\"\r\n              >\r\n                <span className=\"name\">{locale.toUpperCase()}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"mt-3\" right>\r\n                {localeOptions.map(l => {\r\n                  return (\r\n                    <DropdownItem\r\n                      onClick={() => this.handleChangeLocale(l.id, l.direction)}\r\n                      key={l.id}\r\n                    >\r\n                      {l.name}\r\n                    </DropdownItem>\r\n                  );\r\n                })}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"navbar-right\">\r\n          {isDarkSwitchActive && <TopnavDarkSwitch />}\r\n\r\n          <div className=\"header-icons d-inline-block align-middle\">\r\n\r\n            <TopnavNotifications />\r\n          </div>\r\n          <div className=\"user d-inline-block\">\r\n            <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n              <DropdownToggle className=\"p-0\" color=\"empty\">\r\n                <span className=\"name mr-1\">Sarah Kortney</span>\r\n                <span>\r\n                  <img alt=\"Profile\" src=\"/assets/img/profile-pic-l.jpg\" />\r\n                </span>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"mt-3\" right>\r\n                <DropdownItem>Account</DropdownItem>\r\n                <DropdownItem>Features</DropdownItem>\r\n                <DropdownItem>History</DropdownItem>\r\n                <DropdownItem>Support</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem onClick={() => this.handleLogout()}>\r\n                  Sign out\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, settings }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { locale } = settings;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    { setContainerClassnames, clickOnMobileMenu, logoutUser, changeLocale }\r\n  )(TopNav)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}