{"ast":null,"code":"import axios from \"axios\";\nimport { servicePath, tokenPrefix } from \"../../constants/defaultValues\";\nimport errorMessage from \"../../constants/errorMessages\";\nimport { LOAD_USER_SUCCESS, LOGIN_USER, LOGIN_USER_SUCCESS, LOGOUT_USER, REGISTER_USER, REGISTER_USER_SUCCESS, LOGIN_USER_ERROR, REGISTER_USER_ERROR, FORGOT_PASSWORD, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_ERROR, RESET_PASSWORD, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_ERROR } from '../actions';\nexport var loadUser = function loadUser() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: LOGIN_USER\n    });\n    axios.get(servicePath + \"/user/check-auth\", {\n      headers: {\n        'X-API-TOKEN': tokenPrefix + getState().authUser.token\n      }\n    }).then(function (response) {\n      if (response.status === 200 && response.data['message'] === \"\") {\n        var data = response.data['data'];\n        dispatch({\n          type: LOAD_USER_SUCCESS,\n          payload: data['user']\n        });\n      } else {\n        dispatch({\n          type: LOGOUT_USER\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: LOGOUT_USER\n      });\n    });\n  };\n};\nexport var loginUser = function loginUser(user, history) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_USER\n    });\n    axios.post(servicePath + \"/user/login\", {\n      email: user.email,\n      password: user.password\n    }).then(function (response) {\n      if (response.status === 200 && response.data['message'] === \"\") {\n        var data = response.data['data'];\n        localStorage.setItem('_fs_utk', data['api_token']);\n        localStorage.setItem('user_info', JSON.stringify(data['user_info']));\n        localStorage.setItem('menu_app_config', JSON.stringify(data['menu_app_settings']));\n        dispatch({\n          type: LOGIN_USER_SUCCESS,\n          payload: {\n            token: data['api_token'],\n            user: data['user_info']\n          }\n        });\n        history.push('/');\n      } else {\n        var errorCode = response.data['message'];\n        dispatch({\n          type: LOGIN_USER_ERROR,\n          payload: errorMessage[errorCode]\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: LOGIN_USER_ERROR,\n        payload: error\n      });\n    });\n  };\n};\nexport var forgotPassword = function forgotPassword(forgotUserMail, history) {\n  return {\n    type: FORGOT_PASSWORD,\n    payload: {\n      forgotUserMail,\n      history\n    }\n  };\n};\nexport var forgotPasswordSuccess = function forgotPasswordSuccess(forgotUserMail) {\n  return {\n    type: FORGOT_PASSWORD_SUCCESS,\n    payload: forgotUserMail\n  };\n};\nexport var forgotPasswordError = function forgotPasswordError(message) {\n  return {\n    type: FORGOT_PASSWORD_ERROR,\n    payload: {\n      message\n    }\n  };\n};\nexport var resetPassword = function resetPassword(_ref) {\n  var resetPasswordCode = _ref.resetPasswordCode,\n      newPassword = _ref.newPassword,\n      history = _ref.history;\n  return {\n    type: RESET_PASSWORD,\n    payload: {\n      resetPasswordCode,\n      newPassword,\n      history\n    }\n  };\n};\nexport var resetPasswordSuccess = function resetPasswordSuccess(newPassword) {\n  return {\n    type: RESET_PASSWORD_SUCCESS,\n    payload: newPassword\n  };\n};\nexport var resetPasswordError = function resetPasswordError(message) {\n  return {\n    type: RESET_PASSWORD_ERROR,\n    payload: {\n      message\n    }\n  };\n};\nexport var registerUser = function registerUser(user, history) {\n  return {\n    type: REGISTER_USER,\n    payload: {\n      user,\n      history\n    }\n  };\n};\nexport var registerUserSuccess = function registerUserSuccess(user) {\n  return {\n    type: REGISTER_USER_SUCCESS,\n    payload: user\n  };\n};\nexport var registerUserError = function registerUserError(message) {\n  return {\n    type: REGISTER_USER_ERROR,\n    payload: {\n      message\n    }\n  };\n};\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT_USER\n    });\n  };\n};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/auth/actions.js"],"names":["axios","servicePath","tokenPrefix","errorMessage","LOAD_USER_SUCCESS","LOGIN_USER","LOGIN_USER_SUCCESS","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","LOGIN_USER_ERROR","REGISTER_USER_ERROR","FORGOT_PASSWORD","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","loadUser","dispatch","getState","type","get","headers","authUser","token","then","response","status","data","payload","catch","error","loginUser","user","history","post","email","password","localStorage","setItem","JSON","stringify","push","errorCode","forgotPassword","forgotUserMail","forgotPasswordSuccess","forgotPasswordError","message","resetPassword","resetPasswordCode","newPassword","resetPasswordSuccess","resetPasswordError","registerUser","registerUserSuccess","registerUserError","logoutUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {servicePath, tokenPrefix} from \"../../constants/defaultValues\";\r\nimport errorMessage from \"../../constants/errorMessages\";\r\n\r\nimport {\r\n    LOAD_USER_SUCCESS,\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    REGISTER_USER_ERROR,\r\n    FORGOT_PASSWORD,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_ERROR,\r\n    RESET_PASSWORD,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_ERROR\r\n} from '../actions';\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: LOGIN_USER\r\n    });\r\n\r\n    axios.get(servicePath + \"/user/check-auth\", {\r\n        headers: {\r\n            'X-API-TOKEN': tokenPrefix + getState().authUser.token\r\n        }\r\n    }).then(response => {\r\n\r\n        if (response.status === 200 && response.data['message'] === \"\") {\r\n            const data = response.data['data'];\r\n            dispatch({\r\n                type: LOAD_USER_SUCCESS,\r\n                payload:  data['user']\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOGOUT_USER\r\n            });\r\n        }\r\n\r\n    }).catch(error => {\r\n        dispatch({\r\n            type: LOGOUT_USER\r\n        });\r\n    });\r\n};\r\n\r\nexport const loginUser = (user, history) => dispatch => {\r\n\r\n    dispatch({\r\n        type: LOGIN_USER\r\n    });\r\n\r\n    axios.post(servicePath + \"/user/login\", {\r\n        email: user.email,\r\n        password: user.password\r\n    }).then(response => {\r\n\r\n        if (response.status === 200 && response.data['message'] === \"\") {\r\n            const data = response.data['data'];\r\n            localStorage.setItem('_fs_utk', data['api_token']);\r\n            localStorage.setItem('user_info', JSON.stringify(data['user_info']));\r\n            localStorage.setItem('menu_app_config', JSON.stringify(data['menu_app_settings']));\r\n            dispatch({\r\n                type: LOGIN_USER_SUCCESS,\r\n                payload: {\r\n                    token: data['api_token'],\r\n                    user: data['user_info']\r\n                }\r\n            });\r\n            history.push('/');\r\n        } else {\r\n            const errorCode = response.data['message'];\r\n            dispatch({\r\n                type: LOGIN_USER_ERROR,\r\n                payload: errorMessage[errorCode]\r\n            });\r\n        }\r\n\r\n    }).catch(error => {\r\n        dispatch({\r\n            type: LOGIN_USER_ERROR,\r\n            payload: error\r\n        });\r\n    });\r\n};\r\n\r\nexport const forgotPassword = (forgotUserMail, history) => ({\r\n    type: FORGOT_PASSWORD,\r\n    payload: {forgotUserMail, history}\r\n});\r\nexport const forgotPasswordSuccess = (forgotUserMail) => ({\r\n    type: FORGOT_PASSWORD_SUCCESS,\r\n    payload: forgotUserMail\r\n});\r\nexport const forgotPasswordError = (message) => ({\r\n    type: FORGOT_PASSWORD_ERROR,\r\n    payload: {message}\r\n});\r\n\r\nexport const resetPassword = ({resetPasswordCode, newPassword, history}) => ({\r\n    type: RESET_PASSWORD,\r\n    payload: {resetPasswordCode, newPassword, history}\r\n});\r\nexport const resetPasswordSuccess = (newPassword) => ({\r\n    type: RESET_PASSWORD_SUCCESS,\r\n    payload: newPassword\r\n});\r\nexport const resetPasswordError = (message) => ({\r\n    type: RESET_PASSWORD_ERROR,\r\n    payload: {message}\r\n});\r\n\r\n\r\nexport const registerUser = (user, history) => ({\r\n    type: REGISTER_USER,\r\n    payload: {user, history}\r\n})\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user\r\n})\r\nexport const registerUserError = (message) => ({\r\n    type: REGISTER_USER_ERROR,\r\n    payload: {message}\r\n})\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}