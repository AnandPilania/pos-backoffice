{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/categories/AddNewModal.js\";\nimport React, { Component } from \"react\";\nimport { CustomInput, Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from \"reactstrap\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport axios from \"axios\";\nimport { servicePath, tokenPrefix } from \"../../constants/defaultValues\";\nimport errorMessage from \"../../constants/errorMessages\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"../../components/common/react-notifications\";\n\nvar AddNewModal = /*#__PURE__*/function (_Component) {\n  _inherits(AddNewModal, _Component);\n\n  var _super = _createSuper(AddNewModal);\n\n  function AddNewModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddNewModal);\n\n    _this = _super.call(this, props);\n\n    _this.onChange = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.onStatusChange = function (e) {\n      _this.setState({\n        status: e.target.value\n      });\n    };\n\n    _this.onSubmit = function () {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          status = _this$state.status,\n          loading = _this$state.loading;\n\n      if (!loading && name !== \"\") {\n        _this.setState({\n          loading: true\n        });\n\n        axios.post(servicePath + \"/categories/add\", {\n          \"category-name\": name,\n          \"status\": status\n        }, {\n          headers: {\n            'X-API-TOKEN': tokenPrefix + _this.props.apiToken\n          }\n        }).then(function (response) {\n          _this.setState({\n            loading: false\n          });\n\n          if (response.status === 200 && response.data['message'] === \"\") {\n            NotificationManager.success(\"Successfully Added Category\", \"Success\", 3000, _this.props.toggleModal, null, '');\n\n            _this.props.toggleModal();\n          } else {\n            var errorCode = response.data['message'];\n            NotificationManager.warning(errorMessage[errorCode], \"Error\", 3000, null, null, '');\n          }\n        }).catch(function (error) {});\n      }\n    };\n\n    _this.state = {\n      name: \"\",\n      status: \"\",\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(AddNewModal, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.props.modalOpen,\n        toggle: this.props.toggleModal,\n        wrapClassName: \"modal-right\",\n        backdrop: \"static\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.props.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.add-new-modal-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.category-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"radio\",\n        id: \"exCustomRadio\",\n        name: \"customRadio\",\n        label: \"ON HOLD\",\n        value: \"0\",\n        onChange: this.onStatusChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"radio\",\n        id: \"exCustomRadio2\",\n        name: \"customRadio\",\n        label: \"PROCESSED\",\n        value: \"1\",\n        onChange: this.onStatusChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        outline: true,\n        onClick: this.props.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        className: \"btn-shadow btn-multiple-state \".concat(this.state.loading ? \"show-spinner\" : \"\"),\n        onClick: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spinner d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"pages.submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 49\n        }\n      }))), \" \"));\n    }\n  }]);\n\n  return AddNewModal;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var authUser = _ref.authUser;\n  var apiToken = authUser.user;\n  return {\n    apiToken\n  };\n};\n\nexport default connect(mapStateToProps, {})(AddNewModal);","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/categories/AddNewModal.js"],"names":["React","Component","CustomInput","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","IntlMessages","axios","servicePath","tokenPrefix","errorMessage","connect","NotificationManager","AddNewModal","props","onChange","e","setState","name","target","value","onStatusChange","status","onSubmit","state","loading","post","headers","apiToken","then","response","data","success","toggleModal","errorCode","warning","catch","error","modalOpen","mapStateToProps","authUser","user"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n    CustomInput,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Input,\r\n    Label\r\n} from \"reactstrap\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport axios from \"axios\";\r\nimport {servicePath, tokenPrefix} from \"../../constants/defaultValues\";\r\nimport errorMessage from \"../../constants/errorMessages\";\r\nimport {connect} from \"react-redux\";\r\nimport {NotificationManager} from \"../../components/common/react-notifications\";\r\n\r\nclass AddNewModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            status: \"\",\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onStatusChange = e => {\r\n        this.setState({\r\n            status: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const {name, status, loading} = this.state;\r\n        if (!loading && name !== \"\") {\r\n            this.setState({loading: true});\r\n            axios\r\n                .post(servicePath + \"/categories/add\", {\r\n                    \"category-name\": name,\r\n                    \"status\": status\r\n                }, {\r\n                    headers: {\r\n                        'X-API-TOKEN': tokenPrefix + this.props.apiToken\r\n                    }\r\n                })\r\n                .then(response => {\r\n                    this.setState({loading: false});\r\n                    if (response.status === 200 && response.data['message'] === \"\") {\r\n                        NotificationManager.success(\r\n                            \"Successfully Added Category\",\r\n                            \"Success\",\r\n                            3000,\r\n                            this.props.toggleModal,\r\n                            null,\r\n                            ''\r\n                        );\r\n                        this.props.toggleModal();\r\n                    } else {\r\n                        const errorCode = response.data['message'];\r\n                        NotificationManager.warning(\r\n                            errorMessage[errorCode],\r\n                            \"Error\",\r\n                            3000,\r\n                            null,\r\n                            null,\r\n                            ''\r\n                        );\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.modalOpen}\r\n                toggle={this.props.toggleModal}\r\n                wrapClassName=\"modal-right\"\r\n                backdrop=\"static\"\r\n            >\r\n                <ModalHeader toggle={this.props.toggleModal}>\r\n                    <IntlMessages id=\"pages.add-new-modal-title\"/>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Label>\r\n                        <IntlMessages id=\"pages.category-name\"/>\r\n                    </Label>\r\n                    <Input onChange={this.onChange}/>\r\n\r\n                    <Label className=\"mt-4\">\r\n                        <IntlMessages id=\"pages.status\"/>\r\n                    </Label>\r\n                    <CustomInput\r\n                        type=\"radio\"\r\n                        id=\"exCustomRadio\"\r\n                        name=\"customRadio\"\r\n                        label=\"ON HOLD\"\r\n                        value=\"0\"\r\n                        onChange={this.onStatusChange}\r\n                    />\r\n                    <CustomInput\r\n                        type=\"radio\"\r\n                        id=\"exCustomRadio2\"\r\n                        name=\"customRadio\"\r\n                        label=\"PROCESSED\"\r\n                        value=\"1\"\r\n                        onChange={this.onStatusChange}\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"secondary\" outline onClick={this.props.toggleModal}>\r\n                        <IntlMessages id=\"pages.cancel\"/>\r\n                    </Button>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        className={`btn-shadow btn-multiple-state ${this.state.loading ? \"show-spinner\" : \"\"}`}\r\n                        onClick={this.onSubmit}\r\n                    >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\"><IntlMessages id=\"pages.submit\" /></span>\r\n                    </Button>{\" \"}\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({authUser}) => {\r\n    const {user: apiToken} = authUser;\r\n    return {apiToken};\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n)(AddNewModal);\r\n\r\n"]},"metadata":{},"sourceType":"module"}