{"ast":null,"code":"import _classCallCheck from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from\"react\";import{Row,Card,CardBody,Label,Input,FormGroup,Button}from\"reactstrap\";import IntlMessages from\"../../../helpers/IntlMessages\";import{Colxx,Separator}from\"../../../components/common/CustomBootstrap\";import Breadcrumb from\"../../../containers/navs/Breadcrumb\";import axios from\"axios\";import{productImagePath,servicePath,tokenPrefix}from\"../../../constants/defaultValues\";import{NotificationManager}from\"../../../components/common/react-notifications\";import errorMessage from\"../../../constants/errorMessages\";import{connect}from\"react-redux\";import ImageUploader from\"react-images-upload\";import CustomSelectInput from\"../../../components/common/CustomSelectInput\";import Select from\"react-select\";var ProductEdit=/*#__PURE__*/function(_Component){_inherits(ProductEdit,_Component);var _super=_createSuper(ProductEdit);function ProductEdit(props){var _this;_classCallCheck(this,ProductEdit);_this=_super.call(this,props);_this.onChange=function(e){_this.setState({[e.target.name]:e.target.value});};_this.onDropImage=function(image){_this.setState({newImage:image});};_this.handleCategoryChange=function(category){_this.setState({category});};_this.handleCurrencyChange=function(currency){_this.setState({currency});};_this.onSubmit=function(){var _this$state=_this.state,loading=_this$state.loading,uploading=_this$state.uploading,name=_this$state.name,price=_this$state.price,description=_this$state.description,category=_this$state.category,currency=_this$state.currency;if(!loading&&!uploading){var data=new FormData();data.append('id',_this.props.match.params.productId);data.append('name',name);data.append('description',description);data.append('category',category.value);data.append('price',price);data.append('currency',currency.value);if(_this.state.newImage!=null&&_this.state.newImage.length>0){data.append('image',_this.state.newImage[0]);}_this.setState({uploading:true});axios.post(servicePath+\"/products/update\",data,{headers:{'X-API-TOKEN':tokenPrefix+_this.props.apiToken}}).then(function(response){_this.setState({uploading:false,newImage:[]});if(response.status===200&&response.data['message']===\"\"){console.log(response.data['data']);if(response.data['data'].length>0){_this.setState({image:response.data['data'][0]});}NotificationManager.success(\"Product Successfully Updated\",\"Success\",3000,null,null,'');}else{var errorCode=response.data['message'];NotificationManager.warning(errorMessage[errorCode],\"Error\",3000,null,null,'');}}).catch(function(error){_this.setState({uploading:false});NotificationManager.warning(error,\"Error\",3000,null,null,'');});}};_this.state={loading:false,uploading:false};return _this;}_createClass(ProductEdit,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.setState({loading:true});axios.get(servicePath+\"/products/get\",{params:{productId:this.props.match.params.productId},headers:{'X-API-TOKEN':tokenPrefix+this.props.apiToken}}).then(function(response){return response['data'];}).then(function(data){if(data['message']===\"\"){var category=data['data']['categoryList'].filter(function(item){return item.value===data['data']['product'].category_id;});var currency=data['data']['currencyList'].filter(function(item){return item.value===data['data']['product'].currency_id;});_this2.setState({loading:false,name:data['data']['product']['name'],price:data['data']['product']['price'],description:data['data']['product']['description'],image:data['data']['product']['picture'],categoryList:data['data']['categoryList'],currencyList:data['data']['currencyList'],category:category.length>0?category[0]:{},currency:currency.length>0?currency[0]:{}});}else{_this2.props.history.push('/products/products');}}).catch(function(error){_this2.props.history.push('/products/products');});}},{key:\"render\",value:function render(){console.log(this.state);var _this$state2=this.state,loading=_this$state2.loading,uploading=_this$state2.uploading,name=_this$state2.name,category=_this$state2.category,price=_this$state2.price,description=_this$state2.description,image=_this$state2.image,currency=_this$state2.currency,categoryList=_this$state2.categoryList,currencyList=_this$state2.currencyList;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(Breadcrumb,{heading:\"menu.product-edit\",match:this.props.match}),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5\"}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},loading?/*#__PURE__*/React.createElement(\"div\",{className:\"loading\"}):/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",xl:\"8\",className:\"col-left\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"name\"},\"Product Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"name\",name:\"name\",value:name,onChange:this.onChange})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"category\"},\"Category\"),/*#__PURE__*/React.createElement(Select,{id:\"category\",components:{Input:CustomSelectInput},className:\"react-select\",classNamePrefix:\"react-select\",onChange:this.handleCategoryChange,value:category,options:categoryList})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"price\"},\"Price\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"price\",value:price!==null&&price!==void 0?price:'',name:\"price\",onChange:this.onChange})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"currency\"},\"Currency\"),/*#__PURE__*/React.createElement(Select,{id:\"currency\",components:{Input:CustomSelectInput},className:\"react-select\",classNamePrefix:\"react-select\",onChange:this.handleCurrencyChange,value:currency,options:currencyList})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"description\"},\"Description\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",id:\"description\",name:\"description\",value:description,onChange:this.onChange}))),/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",xl:\"4\",className:\"col-right\"},image!=null?/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(productImagePath,\"/appview/\").concat(image),className:\"card-img-top\",alt:\"Company Logo\"}):\"\",/*#__PURE__*/React.createElement(ImageUploader,{withPreview:true,key:image!=null?image:'1',onChange:this.onDropImage,singleImage:true,buttonText:\"Choose Image\"}))),/*#__PURE__*/React.createElement(Button,{onClick:this.onSubmit,color:\"primary\",className:\"btn-shadow btn-multiple-state \".concat(uploading?\"show-spinner\":\"\"),size:\"lg\"},/*#__PURE__*/React.createElement(\"span\",{className:\"spinner d-inline-block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"bounce1\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"bounce2\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"bounce3\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"pages.save\"}))))))));}}]);return ProductEdit;}(Component);var mapStateToProps=function mapStateToProps(_ref){var authUser=_ref.authUser;var apiToken=authUser.token;return{apiToken};};export default connect(mapStateToProps,{})(ProductEdit);","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/views/products/products/edit.js"],"names":["React","Component","Fragment","Row","Card","CardBody","Label","Input","FormGroup","Button","IntlMessages","Colxx","Separator","Breadcrumb","axios","productImagePath","servicePath","tokenPrefix","NotificationManager","errorMessage","connect","ImageUploader","CustomSelectInput","Select","ProductEdit","props","onChange","e","setState","target","name","value","onDropImage","image","newImage","handleCategoryChange","category","handleCurrencyChange","currency","onSubmit","state","loading","uploading","price","description","data","FormData","append","match","params","productId","length","post","headers","apiToken","then","response","status","console","log","success","errorCode","warning","catch","error","get","filter","item","category_id","currency_id","categoryList","currencyList","history","push","mapStateToProps","authUser","token"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\nimport {Row, Card, CardBody, Label, Input, FormGroup, Button} from \"reactstrap\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport {Colxx, Separator} from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport axios from \"axios\";\r\nimport {productImagePath, servicePath, tokenPrefix} from \"../../../constants/defaultValues\";\r\nimport {NotificationManager} from \"../../../components/common/react-notifications\";\r\nimport errorMessage from \"../../../constants/errorMessages\";\r\nimport {connect} from \"react-redux\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport CustomSelectInput from \"../../../components/common/CustomSelectInput\";\r\nimport Select from \"react-select\";\r\n\r\nclass ProductEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            uploading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        axios\r\n            .get(servicePath + \"/products/get\", {\r\n                params: {\r\n                    productId: this.props.match.params.productId,\r\n                },\r\n                headers: {\r\n                    'X-API-TOKEN': tokenPrefix + this.props.apiToken\r\n                }\r\n            })\r\n            .then(response => response['data'])\r\n            .then(data => {\r\n                if (data['message'] === \"\") {\r\n                    const category = data['data']['categoryList'].filter(item => item.value === data['data']['product'].category_id)\r\n                    const currency = data['data']['currencyList'].filter(item => item.value === data['data']['product'].currency_id)\r\n                    this.setState({\r\n                        loading: false,\r\n                        name: data['data']['product']['name'],\r\n                        price: data['data']['product']['price'],\r\n                        description: data['data']['product']['description'],\r\n                        image: data['data']['product']['picture'],\r\n                        categoryList: data['data']['categoryList'],\r\n                        currencyList: data['data']['currencyList'],\r\n                        category: category.length > 0 ? category[0] : {},\r\n                        currency: currency.length > 0 ? currency[0] : {},\r\n                    });\r\n                } else {\r\n                    this.props.history.push('/products/products');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.props.history.push('/products/products');\r\n            });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onDropImage = image => {\r\n        this.setState({\r\n            newImage: image\r\n        });\r\n    }\r\n\r\n    handleCategoryChange = category => {\r\n        this.setState({category});\r\n    }\r\n\r\n    handleCurrencyChange = currency => {\r\n        this.setState({currency});\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const {loading, uploading, name, price, description, category, currency} = this.state;\r\n\r\n        if (!loading && !uploading) {\r\n\r\n            const data = new FormData();\r\n            data.append('id', this.props.match.params.productId);\r\n            data.append('name', name);\r\n            data.append('description', description);\r\n            data.append('category', category.value);\r\n            data.append('price', price);\r\n            data.append('currency', currency.value);\r\n\r\n            if (this.state.newImage != null && this.state.newImage.length > 0) {\r\n                data.append('image', this.state.newImage[0]);\r\n            }\r\n\r\n            this.setState({uploading: true});\r\n\r\n            axios\r\n                .post(servicePath + \"/products/update\", data, {\r\n                    headers: {\r\n                        'X-API-TOKEN': tokenPrefix + this.props.apiToken\r\n                    }\r\n                })\r\n                .then(response => {\r\n                    this.setState({\r\n                        uploading: false,\r\n                        newImage: []\r\n                    });\r\n                    if (response.status === 200 && response.data['message'] === \"\") {\r\n                        console.log(response.data['data']);\r\n                        if (response.data['data'].length > 0) {\r\n                            this.setState({\r\n                                image: response.data['data'][0]\r\n                            });\r\n                        }\r\n                        NotificationManager.success(\r\n                            \"Product Successfully Updated\",\r\n                            \"Success\",\r\n                            3000,\r\n                            null,\r\n                            null,\r\n                            ''\r\n                        );\r\n                    } else {\r\n                        const errorCode = response.data['message'];\r\n                        NotificationManager.warning(\r\n                            errorMessage[errorCode],\r\n                            \"Error\",\r\n                            3000,\r\n                            null,\r\n                            null,\r\n                            ''\r\n                        );\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        uploading: false\r\n                    });\r\n                    NotificationManager.warning(\r\n                        error,\r\n                        \"Error\",\r\n                        3000,\r\n                        null,\r\n                        null,\r\n                        ''\r\n                    );\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        const {\r\n            loading,\r\n            uploading,\r\n            name,\r\n            category,\r\n            price,\r\n            description,\r\n            image,\r\n            currency,\r\n            categoryList,\r\n            currencyList\r\n        } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n                        <Breadcrumb heading=\"menu.product-edit\" match={this.props.match}/>\r\n                        <Separator className=\"mb-5\"/>\r\n                    </Colxx>\r\n                </Row>\r\n                <Row>\r\n                    <Colxx xxs=\"12\" className=\"mb-4\">\r\n                        {\r\n                            loading ? <div className=\"loading\"/> :\r\n\r\n                                <Card className=\"mb-4\">\r\n                                    <CardBody>\r\n                                        <Row>\r\n                                            <Colxx xxs=\"12\" xl=\"8\" className=\"col-left\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"name\">Product Name</Label>\r\n                                                    <Input type=\"text\" id=\"name\" name=\"name\" value={name}\r\n                                                           onChange={this.onChange}/>\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"category\">Category</Label>\r\n                                                    <Select\r\n                                                        id=\"category\"\r\n                                                        components={{Input: CustomSelectInput}}\r\n                                                        className=\"react-select\"\r\n                                                        classNamePrefix=\"react-select\"\r\n                                                        onChange={this.handleCategoryChange}\r\n                                                        value={category}\r\n                                                        options={categoryList}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"price\">Price</Label>\r\n                                                    <Input type=\"text\" id=\"price\" value={price ?? ''} name=\"price\"\r\n                                                           onChange={this.onChange}/>\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"currency\">Currency</Label>\r\n                                                    <Select\r\n                                                        id=\"currency\"\r\n                                                        components={{Input: CustomSelectInput}}\r\n                                                        className=\"react-select\"\r\n                                                        classNamePrefix=\"react-select\"\r\n                                                        onChange={this.handleCurrencyChange}\r\n                                                        value={currency}\r\n                                                        options={currencyList}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"description\">Description</Label>\r\n                                                    <Input type=\"textarea\" id=\"description\" name=\"description\"\r\n                                                           value={description} onChange={this.onChange}/>\r\n                                                </FormGroup>\r\n                                            </Colxx>\r\n                                            <Colxx xxs=\"12\" xl=\"4\" className=\"col-right\">\r\n                                                {\r\n                                                    image != null ?\r\n                                                        <img src={`${productImagePath}/appview/${image}`}\r\n                                                             className=\"card-img-top\"\r\n                                                             alt=\"Company Logo\"/> : \"\"\r\n                                                }\r\n\r\n                                                <ImageUploader\r\n                                                    withPreview={true}\r\n                                                    key={image != null ? image : '1'}\r\n                                                    onChange={this.onDropImage}\r\n                                                    singleImage={true}\r\n                                                    buttonText=\"Choose Image\"\r\n                                                />\r\n                                            </Colxx>\r\n                                        </Row>\r\n                                        <Button\r\n                                            onClick={this.onSubmit}\r\n                                            color=\"primary\"\r\n                                            className={`btn-shadow btn-multiple-state ${uploading ? \"show-spinner\" : \"\"}`}\r\n                                            size=\"lg\"\r\n                                        >\r\n                                        <span className=\"spinner d-inline-block\">\r\n                                          <span className=\"bounce1\"/>\r\n                                          <span className=\"bounce2\"/>\r\n                                          <span className=\"bounce3\"/>\r\n                                        </span>\r\n                                            <span className=\"label\"><IntlMessages id=\"pages.save\"/></span>\r\n                                        </Button>\r\n                                    </CardBody>\r\n                                </Card>\r\n                        }\r\n                    </Colxx>\r\n                </Row>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({authUser}) => {\r\n    const {token: apiToken} = authUser;\r\n    return {apiToken};\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n)(ProductEdit);"]},"metadata":{},"sourceType":"module"}