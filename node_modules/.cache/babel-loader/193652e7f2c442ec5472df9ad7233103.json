{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/navs/Topnav.js\";\nimport React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu, Input } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport { setContainerClassnames, clickOnMobileMenu, changeLocale } from \"../../redux/actions\";\nimport { menuHiddenBreakpoint, searchPath, localeOptions, isDarkSwitchActive } from \"../../constants/defaultValues\";\nimport { MobileMenuIcon, MenuIcon } from \"../../components/svg\";\nimport TopnavEasyAccess from \"./Topnav.EasyAccess\";\nimport TopnavNotifications from \"./Topnav.Notifications\";\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\nimport { getDirection, setDirection } from \"../../helpers/Utils\";\n\nvar TopNav =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TopNav, _Component);\n\n  function TopNav(props) {\n    var _this;\n\n    _classCallCheck(this, TopNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TopNav).call(this, props));\n\n    _this.handleChangeLocale = function (locale, direction) {\n      _this.props.changeLocale(locale);\n\n      var currentDirection = getDirection().direction;\n\n      if (direction !== currentDirection) {\n        setDirection(direction);\n        setTimeout(function () {\n          window.location.reload();\n        }, 500);\n      }\n    };\n\n    _this.isInFullScreen = function () {\n      return document.fullscreenElement && document.fullscreenElement !== null || document.webkitFullscreenElement && document.webkitFullscreenElement !== null || document.mozFullScreenElement && document.mozFullScreenElement !== null || document.msFullscreenElement && document.msFullscreenElement !== null;\n    };\n\n    _this.handleSearchIconClick = function (e) {\n      if (window.innerWidth < menuHiddenBreakpoint) {\n        var elem = e.target;\n\n        if (!e.target.classList.contains(\"search\")) {\n          if (e.target.parentElement.classList.contains(\"search\")) {\n            elem = e.target.parentElement;\n          } else if (e.target.parentElement.parentElement.classList.contains(\"search\")) {\n            elem = e.target.parentElement.parentElement;\n          }\n        }\n\n        if (elem.classList.contains(\"mobile-view\")) {\n          _this.search();\n\n          elem.classList.remove(\"mobile-view\");\n\n          _this.removeEventsSearch();\n        } else {\n          elem.classList.add(\"mobile-view\");\n\n          _this.addEventsSearch();\n        }\n      } else {\n        _this.search();\n      }\n    };\n\n    _this.addEventsSearch = function () {\n      document.addEventListener(\"click\", _this.handleDocumentClickSearch, true);\n    };\n\n    _this.removeEventsSearch = function () {\n      document.removeEventListener(\"click\", _this.handleDocumentClickSearch, true);\n    };\n\n    _this.handleDocumentClickSearch = function (e) {\n      var isSearchClick = false;\n\n      if (e.target && e.target.classList && (e.target.classList.contains(\"navbar\") || e.target.classList.contains(\"simple-icon-magnifier\"))) {\n        isSearchClick = true;\n\n        if (e.target.classList.contains(\"simple-icon-magnifier\")) {\n          _this.search();\n        }\n      } else if (e.target.parentElement && e.target.parentElement.classList && e.target.parentElement.classList.contains(\"search\")) {\n        isSearchClick = true;\n      }\n\n      if (!isSearchClick) {\n        var input = document.querySelector(\".mobile-view\");\n        if (input && input.classList) input.classList.remove(\"mobile-view\");\n\n        _this.removeEventsSearch();\n\n        _this.setState({\n          searchKeyword: \"\"\n        });\n      }\n    };\n\n    _this.handleLogout = function () {//logout\n    };\n\n    _this.menuButtonClick = function (e, menuClickCount, containerClassnames) {\n      e.preventDefault();\n      setTimeout(function () {\n        var event = document.createEvent(\"HTMLEvents\");\n        event.initEvent(\"resize\", false, false);\n        window.dispatchEvent(event);\n      }, 350);\n\n      _this.props.setContainerClassnames(++menuClickCount, containerClassnames, _this.props.selectedMenuHasSubItems);\n    };\n\n    _this.mobileMenuButtonClick = function (e, containerClassnames) {\n      e.preventDefault();\n\n      _this.props.clickOnMobileMenu(containerClassnames);\n    };\n\n    _this.state = {\n      isInFullScreen: false,\n      searchKeyword: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TopNav, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          containerClassnames = _this$props.containerClassnames,\n          menuClickCount = _this$props.menuClickCount,\n          locale = _this$props.locale;\n      var messages = this.props.intl.messages;\n      return React.createElement(\"nav\", {\n        className: \"navbar fixed-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex align-items-center navbar-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"#\",\n        location: {},\n        className: \"menu-button d-none d-md-block\",\n        onClick: function onClick(e) {\n          return _this2.menuButtonClick(e, menuClickCount, containerClassnames);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(NavLink, {\n        to: \"#\",\n        location: {},\n        className: \"menu-button-mobile d-xs-block d-sm-block d-md-none\",\n        onClick: function onClick(e) {\n          return _this2.mobileMenuButtonClick(e, containerClassnames);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(MobileMenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(UncontrolledDropdown, {\n        className: \"ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        color: \"light\",\n        size: \"sm\",\n        className: \"language-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, locale.toUpperCase())), React.createElement(DropdownMenu, {\n        className: \"mt-3\",\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, localeOptions.map(function (l) {\n        return React.createElement(DropdownItem, {\n          onClick: function onClick() {\n            return _this2.handleChangeLocale(l.id, l.direction);\n          },\n          key: l.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, l.name);\n      }))))), React.createElement(\"div\", {\n        className: \"navbar-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, isDarkSwitchActive && React.createElement(TopnavDarkSwitch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"header-icons d-inline-block align-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(TopnavNotifications, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"user d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(UncontrolledDropdown, {\n        className: \"dropdown-menu-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        className: \"p-0\",\n        color: \"empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"name mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Sarah Kortney\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Profile\",\n        src: \"/assets/img/profile-pic-l.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }))), React.createElement(DropdownMenu, {\n        className: \"mt-3\",\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Account\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Features\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"History\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Support\"), React.createElement(DropdownItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(DropdownItem, {\n        onClick: function onClick() {\n          return _this2.handleLogout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Sign out\"))))));\n    }\n  }]);\n\n  return TopNav;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var menu = _ref.menu,\n      settings = _ref.settings;\n  var containerClassnames = menu.containerClassnames,\n      menuClickCount = menu.menuClickCount,\n      selectedMenuHasSubItems = menu.selectedMenuHasSubItems;\n  var locale = settings.locale;\n  return {\n    containerClassnames: containerClassnames,\n    menuClickCount: menuClickCount,\n    selectedMenuHasSubItems: selectedMenuHasSubItems,\n    locale: locale\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, {\n  setContainerClassnames: setContainerClassnames,\n  clickOnMobileMenu: clickOnMobileMenu,\n  changeLocale: changeLocale\n})(TopNav));","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/navs/Topnav.js"],"names":["React","Component","injectIntl","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","Input","NavLink","connect","IntlMessages","setContainerClassnames","clickOnMobileMenu","changeLocale","menuHiddenBreakpoint","searchPath","localeOptions","isDarkSwitchActive","MobileMenuIcon","MenuIcon","TopnavEasyAccess","TopnavNotifications","TopnavDarkSwitch","getDirection","setDirection","TopNav","props","handleChangeLocale","locale","direction","currentDirection","setTimeout","window","location","reload","isInFullScreen","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","handleSearchIconClick","e","innerWidth","elem","target","classList","contains","parentElement","search","remove","removeEventsSearch","add","addEventsSearch","addEventListener","handleDocumentClickSearch","removeEventListener","isSearchClick","input","querySelector","setState","searchKeyword","handleLogout","menuButtonClick","menuClickCount","containerClassnames","preventDefault","event","createEvent","initEvent","dispatchEvent","selectedMenuHasSubItems","mobileMenuButtonClick","state","messages","intl","toUpperCase","map","l","id","name","mapStateToProps","menu","settings"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  changeLocale\r\n} from \"../../redux/actions\";\r\n\r\nimport {\r\n  menuHiddenBreakpoint,\r\n  searchPath,\r\n  localeOptions,\r\n  isDarkSwitchActive,\r\n} from \"../../constants/defaultValues\";\r\n\r\nimport { MobileMenuIcon, MenuIcon } from \"../../components/svg\";\r\nimport TopnavEasyAccess from \"./Topnav.EasyAccess\";\r\nimport TopnavNotifications from \"./Topnav.Notifications\";\r\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\r\n\r\nimport { getDirection, setDirection } from \"../../helpers/Utils\";\r\n\r\nclass TopNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isInFullScreen: false,\r\n      searchKeyword: \"\"\r\n    };\r\n  }\r\n\r\n  handleChangeLocale = (locale, direction) => {\r\n    this.props.changeLocale(locale);\r\n\r\n    const currentDirection = getDirection().direction;\r\n    if (direction !== currentDirection) {\r\n      setDirection(direction);\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  isInFullScreen = () => {\r\n    return (\r\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n      (document.webkitFullscreenElement &&\r\n        document.webkitFullscreenElement !== null) ||\r\n      (document.mozFullScreenElement &&\r\n        document.mozFullScreenElement !== null) ||\r\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    );\r\n  };\r\n  handleSearchIconClick = e => {\r\n    if (window.innerWidth < menuHiddenBreakpoint) {\r\n      let elem = e.target;\r\n      if (!e.target.classList.contains(\"search\")) {\r\n        if (e.target.parentElement.classList.contains(\"search\")) {\r\n          elem = e.target.parentElement;\r\n        } else if (\r\n          e.target.parentElement.parentElement.classList.contains(\"search\")\r\n        ) {\r\n          elem = e.target.parentElement.parentElement;\r\n        }\r\n      }\r\n\r\n      if (elem.classList.contains(\"mobile-view\")) {\r\n        this.search();\r\n        elem.classList.remove(\"mobile-view\");\r\n        this.removeEventsSearch();\r\n      } else {\r\n        elem.classList.add(\"mobile-view\");\r\n        this.addEventsSearch();\r\n      }\r\n    } else {\r\n      this.search();\r\n    }\r\n  };\r\n  addEventsSearch = () => {\r\n    document.addEventListener(\"click\", this.handleDocumentClickSearch, true);\r\n  };\r\n  removeEventsSearch = () => {\r\n    document.removeEventListener(\"click\", this.handleDocumentClickSearch, true);\r\n  };\r\n\r\n  handleDocumentClickSearch = e => {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains(\"navbar\") ||\r\n        e.target.classList.contains(\"simple-icon-magnifier\"))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains(\"simple-icon-magnifier\")) {\r\n        this.search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains(\"search\")\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector(\".mobile-view\");\r\n      if (input && input.classList) input.classList.remove(\"mobile-view\");\r\n      this.removeEventsSearch();\r\n      this.setState({\r\n        searchKeyword: \"\"\r\n      });\r\n    }\r\n  };\r\n  \r\n  handleLogout = () => {\r\n    //logout\r\n  };\r\n\r\n  menuButtonClick = (e, menuClickCount, containerClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      var event = document.createEvent(\"HTMLEvents\");\r\n      event.initEvent(\"resize\", false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    this.props.setContainerClassnames(\r\n      ++menuClickCount,\r\n      containerClassnames,\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n  mobileMenuButtonClick = (e, containerClassnames) => {\r\n    e.preventDefault();\r\n    this.props.clickOnMobileMenu(containerClassnames);\r\n  };\r\n\r\n  render() {\r\n    const { containerClassnames, menuClickCount, locale } = this.props;\r\n    const { messages } = this.props.intl;\r\n    return (\r\n      <nav className=\"navbar fixed-top\">\r\n        <div className=\"d-flex align-items-center navbar-left\">\r\n          <NavLink\r\n            to=\"#\" location={{}}\r\n            className=\"menu-button d-none d-md-block\"\r\n            onClick={e =>\r\n              this.menuButtonClick(e, menuClickCount, containerClassnames)\r\n            }\r\n          >\r\n            <MenuIcon />\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"#\" location={{}}\r\n            className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n            onClick={e => this.mobileMenuButtonClick(e, containerClassnames)}\r\n          >\r\n            <MobileMenuIcon />\r\n          </NavLink>\r\n\r\n          <div className=\"d-inline-block\">\r\n            <UncontrolledDropdown className=\"ml-2\">\r\n              <DropdownToggle\r\n                caret\r\n                color=\"light\"\r\n                size=\"sm\"\r\n                className=\"language-button\"\r\n              >\r\n                <span className=\"name\">{locale.toUpperCase()}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"mt-3\" right>\r\n                {localeOptions.map(l => {\r\n                  return (\r\n                    <DropdownItem\r\n                      onClick={() => this.handleChangeLocale(l.id, l.direction)}\r\n                      key={l.id}\r\n                    >\r\n                      {l.name}\r\n                    </DropdownItem>\r\n                  );\r\n                })}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"navbar-right\">\r\n          {isDarkSwitchActive && <TopnavDarkSwitch />}\r\n\r\n          <div className=\"header-icons d-inline-block align-middle\">\r\n\r\n            <TopnavNotifications />\r\n          </div>\r\n          <div className=\"user d-inline-block\">\r\n            <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n              <DropdownToggle className=\"p-0\" color=\"empty\">\r\n                <span className=\"name mr-1\">Sarah Kortney</span>\r\n                <span>\r\n                  <img alt=\"Profile\" src=\"/assets/img/profile-pic-l.jpg\" />\r\n                </span>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"mt-3\" right>\r\n                <DropdownItem>Account</DropdownItem>\r\n                <DropdownItem>Features</DropdownItem>\r\n                <DropdownItem>History</DropdownItem>\r\n                <DropdownItem>Support</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem onClick={() => this.handleLogout()}>\r\n                  Sign out\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, settings }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { locale } = settings;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    { setContainerClassnames, clickOnMobileMenu, changeLocale }\r\n  )(TopNav)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}