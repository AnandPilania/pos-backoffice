{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{LOAD_CATEGORY_SUCCESS,LOAD_CATEGORY_FAIL,TOGGLE_CATEGORY_STATE,TOGGLE_CATEGORY_STATE_SUCCESS,TOGGLE_CATEGORY_STATE_FAIL,CHANGE_CATEGORIES_STATE_SUCCESS,CHANGE_CATEGORIES_STATE_FAIL}from\"../actions\";import axios from\"axios\";import{tokenPrefix,servicePath}from\"../../constants/defaultValues\";export var getCategoryList=function getCategoryList(pageInfo){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",axios.get(\"\".concat(servicePath,\"/categories/paging\"),{params:{pageSize:pageInfo.selectedPageSize,currentPage:pageInfo.currentPage,orderBy:pageInfo.selectedOrderOption.column,search:pageInfo.search},headers:{'X-API-TOKEN':tokenPrefix+getState().authUser.token}}).then(function(res){return res.data['data'];}).then(function(data){dispatch({type:LOAD_CATEGORY_SUCCESS,payload:data});return true;}).catch(function(error){dispatch({type:LOAD_CATEGORY_FAIL});return false;}));case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var toggleCategoryState=function toggleCategoryState(categoryId){return function(dispatch,getState){dispatch({type:TOGGLE_CATEGORY_STATE,payload:[categoryId]});axios.post(servicePath+\"/categories/toggleActive\",{categoryId},{headers:{'X-API-TOKEN':tokenPrefix+getState().authUser.token}}).then(function(response){return response['data'];}).then(function(data){if(data['message']===\"\"){dispatch({type:TOGGLE_CATEGORY_STATE_SUCCESS,payload:categoryId});}else{dispatch({type:TOGGLE_CATEGORY_STATE_FAIL});}}).catch(function(error){dispatch({type:TOGGLE_CATEGORY_STATE_FAIL});});};};export var changeCategoriesState=function changeCategoriesState(categoryIds,state){return function(dispatch,getState){dispatch({type:TOGGLE_CATEGORY_STATE,payload:categoryIds});axios.post(servicePath+\"/categories/changeState\",{categoryIds:JSON.stringify(categoryIds),state},{headers:{'X-API-TOKEN':tokenPrefix+getState().authUser.token}}).then(function(response){return response['data'];}).then(function(data){if(data['message']===\"\"){dispatch({type:CHANGE_CATEGORIES_STATE_SUCCESS,payload:{categoryIds,state}});}else{dispatch({type:CHANGE_CATEGORIES_STATE_FAIL});}}).catch(function(error){dispatch({type:CHANGE_CATEGORIES_STATE_FAIL});});};};export var deleteCategories=function deleteCategories(categoryIds){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",axios.delete(\"\".concat(servicePath,\"/categories/delete\"),{data:{categoryIds:JSON.stringify(categoryIds)},headers:{'X-API-TOKEN':tokenPrefix+getState().authUser.token}}).then(function(res){return res.data['data'];}).then(function(data){return true;}).catch(function(error){return false;}));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/categories/actions.js"],"names":["LOAD_CATEGORY_SUCCESS","LOAD_CATEGORY_FAIL","TOGGLE_CATEGORY_STATE","TOGGLE_CATEGORY_STATE_SUCCESS","TOGGLE_CATEGORY_STATE_FAIL","CHANGE_CATEGORIES_STATE_SUCCESS","CHANGE_CATEGORIES_STATE_FAIL","axios","tokenPrefix","servicePath","getCategoryList","pageInfo","dispatch","getState","get","params","pageSize","selectedPageSize","currentPage","orderBy","selectedOrderOption","column","search","headers","authUser","token","then","res","data","type","payload","catch","error","toggleCategoryState","categoryId","post","response","changeCategoriesState","categoryIds","state","JSON","stringify","deleteCategories","delete"],"mappings":"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","sourcesContent":["import {\n    LOAD_CATEGORY_SUCCESS,\n    LOAD_CATEGORY_FAIL,\n    TOGGLE_CATEGORY_STATE,\n    TOGGLE_CATEGORY_STATE_SUCCESS,\n    TOGGLE_CATEGORY_STATE_FAIL,\n    CHANGE_CATEGORIES_STATE_SUCCESS,\n    CHANGE_CATEGORIES_STATE_FAIL\n} from \"../actions\";\nimport axios from \"axios\";\nimport {tokenPrefix, servicePath} from \"../../constants/defaultValues\";\n\nexport const getCategoryList = (pageInfo) => async (dispatch, getState) => {\n    return axios\n        .get(\n            `${servicePath}/categories/paging`, {\n                params: {\n                    pageSize: pageInfo.selectedPageSize,\n                    currentPage: pageInfo.currentPage,\n                    orderBy: pageInfo.selectedOrderOption.column,\n                    search: pageInfo.search\n                },\n                headers: {\n                    'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n            }\n        )\n        .then(res => res.data['data'])\n        .then(data => {\n            dispatch({\n                type: LOAD_CATEGORY_SUCCESS,\n                payload: data\n            });\n            return true;\n        })\n        .catch(error => {\n            dispatch({\n                type: LOAD_CATEGORY_FAIL,\n            });\n            return false;\n        });\n}\n\nexport const toggleCategoryState = (categoryId) => (dispatch, getState) => {\n    dispatch({\n        type: TOGGLE_CATEGORY_STATE,\n        payload: [categoryId]\n    });\n    axios\n        .post(servicePath + \"/categories/toggleActive\", {\n            categoryId\n        }, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response['data'])\n        .then(data => {\n            if (data['message'] === \"\") {\n                dispatch({\n                    type: TOGGLE_CATEGORY_STATE_SUCCESS,\n                    payload: categoryId\n                });\n            } else {\n                dispatch({\n                    type: TOGGLE_CATEGORY_STATE_FAIL\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: TOGGLE_CATEGORY_STATE_FAIL\n            });\n        });\n}\n\nexport const changeCategoriesState = (categoryIds, state) => (dispatch, getState) => {\n    dispatch({\n        type: TOGGLE_CATEGORY_STATE,\n        payload: categoryIds\n    });\n    axios\n        .post(servicePath + \"/categories/changeState\", {\n            categoryIds: JSON.stringify(categoryIds),\n            state\n        }, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response['data'])\n        .then(data => {\n            if (data['message'] === \"\") {\n                dispatch({\n                    type: CHANGE_CATEGORIES_STATE_SUCCESS,\n                    payload: {\n                        categoryIds,\n                        state\n                    }\n                });\n            } else {\n                dispatch({\n                    type: CHANGE_CATEGORIES_STATE_FAIL\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: CHANGE_CATEGORIES_STATE_FAIL\n            });\n        });\n}\n\nexport const deleteCategories = (categoryIds) => async (dispatch, getState) => {\n    return axios\n        .delete(\n            `${servicePath}/categories/delete`, {\n                data: {\n                    categoryIds: JSON.stringify(categoryIds)\n                },\n                headers: {\n                    'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n            }\n        )\n        .then(res => {\n            return res.data['data'];\n        })\n        .then(data => {\n            return true;\n        })\n        .catch(error => {\n            return false;\n        });\n}"]},"metadata":{},"sourceType":"module"}