{"ast":null,"code":"import _classCallCheck from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{Row,Card,CardBody,FormGroup,Label,Input}from\"reactstrap\";import{Colxx,Separator}from\"../../../components/common/CustomBootstrap\";import Breadcrumb from\"../../../containers/navs/Breadcrumb\";import{connect}from\"react-redux\";var SiteInfo=/*#__PURE__*/function(_Component){_inherits(SiteInfo,_Component);var _super=_createSuper(SiteInfo);function SiteInfo(){_classCallCheck(this,SiteInfo);return _super.apply(this,arguments);}_createClass(SiteInfo,[{key:\"render\",value:function render(){var _this$props$user=this.props.user,firstName=_this$props$user.firstName,lastName=_this$props$user.lastName,email=_this$props$user.email,startDate=_this$props$user.startDate,expireDate=_this$props$user.expireDate,price=_this$props$user.price,company=_this$props$user.company,street=_this$props$user.street,city=_this$props$user.city,state=_this$props$user.state,zipCode=_this$props$user.zipCode,phone=_this$props$user.phone;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(Breadcrumb,{heading:\"menu.profile\",match:this.props.match}),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5\"}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{sm:\"12\",md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"firstName\"},\"First Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"firstName\",value:firstName!==null&&firstName!==void 0?firstName:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"lastName\"},\"Last Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"lastName\",value:lastName!==null&&lastName!==void 0?lastName:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"lastName\"},\"Email\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"email\",value:email!==null&&email!==void 0?email:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"phone\"},\"Phone Number\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"phone\",value:phone!==null&&phone!==void 0?phone:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"company\"},\"Company\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"company\",value:company!==null&&company!==void 0?company:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"zipCode\"},\"ZIP Code\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"zipCode\",value:zipCode!==null&&zipCode!==void 0?zipCode:'',readOnly:true}))),/*#__PURE__*/React.createElement(Colxx,{sm:\"12\",md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"street\"},\"Street\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"street\",value:street!==null&&street!==void 0?street:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"city\"},\"City\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"city\",value:city!==null&&city!==void 0?city:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"state\"},\"State\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"state\",value:state!==null&&state!==void 0?state:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"startDate\"},\"Start Date\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"startDate\",value:startDate!==null&&startDate!==void 0?startDate:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"expireDate\"},\"Expire Date\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"expireDate\",value:expireDate!==null&&expireDate!==void 0?expireDate:'',readOnly:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"price\"},\"Price\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"price\",value:price!==null&&price!==void 0?price:'',readOnly:true})))))))));}}]);return SiteInfo;}(Component);var mapStateToProps=function mapStateToProps(_ref){var authUser=_ref.authUser;var user=authUser.user;return{user};};export default connect(mapStateToProps,{})(SiteInfo);","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/views/my-site/site-info/index.js"],"names":["React","Component","Fragment","Row","Card","CardBody","FormGroup","Label","Input","Colxx","Separator","Breadcrumb","connect","SiteInfo","props","user","firstName","lastName","email","startDate","expireDate","price","company","street","city","state","zipCode","phone","match","mapStateToProps","authUser"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {Row, Card, CardBody, FormGroup, Label, Input} from \"reactstrap\";\r\nimport {Colxx, Separator} from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SiteInfo extends Component {\r\n\r\n    render() {\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            startDate,\r\n            expireDate,\r\n            price,\r\n            company,\r\n            street,\r\n            city,\r\n            state,\r\n            zipCode,\r\n            phone\r\n        } = this.props.user;\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n                        <Breadcrumb heading=\"menu.profile\" match={this.props.match} />\r\n                        <Separator className=\"mb-5\" />\r\n                    </Colxx>\r\n                </Row>\r\n                <Row>\r\n                    <Colxx xxs=\"12\" className=\"mb-4\">\r\n                        <Card>\r\n                            <CardBody>\r\n                                <Row>\r\n                                    <Colxx sm=\"12\" md=\"6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"firstName\">First Name</Label>\r\n                                            <Input type=\"text\" id=\"firstName\" value={firstName ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"lastName\">Last Name</Label>\r\n                                            <Input type=\"text\" id=\"lastName\" value={lastName ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"lastName\">Email</Label>\r\n                                            <Input type=\"text\" id=\"email\" value={email ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"phone\">Phone Number</Label>\r\n                                            <Input type=\"text\" id=\"phone\" value={phone ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"company\">Company</Label>\r\n                                            <Input type=\"text\" id=\"company\" value={company ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"zipCode\">ZIP Code</Label>\r\n                                            <Input type=\"text\" id=\"zipCode\" value={zipCode ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                    </Colxx>\r\n\r\n                                    <Colxx sm=\"12\" md=\"6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"street\">Street</Label>\r\n                                            <Input type=\"text\" id=\"street\" value={street ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"city\">City</Label>\r\n                                            <Input type=\"text\" id=\"city\" value={city ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"state\">State</Label>\r\n                                            <Input type=\"text\" id=\"state\" value={state ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"startDate\">Start Date</Label>\r\n                                            <Input type=\"text\" id=\"startDate\" value={startDate ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"expireDate\">Expire Date</Label>\r\n                                            <Input type=\"text\" id=\"expireDate\" value={expireDate ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"price\">Price</Label>\r\n                                            <Input type=\"text\" id=\"price\" value={price ?? ''} readOnly={true}/>\r\n                                        </FormGroup>\r\n                                    </Colxx>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Colxx>\r\n                </Row>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n    const { user } = authUser;\r\n    return { user };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n)(SiteInfo);\r\n"]},"metadata":{},"sourceType":"module"}