{"ast":null,"code":"import axios from\"axios\";import{servicePath,tokenPrefix}from\"../../constants/defaultValues\";import errorMessage from\"../../constants/errorMessages\";import{LOAD_USER_SUCCESS,LOGIN_USER,LOGIN_USER_SUCCESS,LOGOUT_USER,REGISTER_USER,REGISTER_USER_SUCCESS,LOGIN_USER_ERROR,REGISTER_USER_ERROR,FORGOT_PASSWORD,FORGOT_PASSWORD_SUCCESS,FORGOT_PASSWORD_ERROR,RESET_PASSWORD,RESET_PASSWORD_SUCCESS,RESET_PASSWORD_ERROR,UPDATE_MENU_APP_SETTINGS_SUCCESS}from'../actions';export var loadUser=function loadUser(){return function(dispatch,getState){dispatch({type:LOGIN_USER});axios.get(servicePath+\"/user/check-auth\",{headers:{'X-API-TOKEN':tokenPrefix+getState().authUser.token}}).then(function(response){if(response.status===200&&response.data['message']===\"\"){var data=response.data['data'];dispatch({type:LOAD_USER_SUCCESS,payload:data['user']});}else{dispatch({type:LOGOUT_USER});}}).catch(function(error){dispatch({type:LOGOUT_USER});});};};export var loginUser=function loginUser(user,history){return function(dispatch){dispatch({type:LOGIN_USER});axios.post(servicePath+\"/user/login\",{email:user.email,password:user.password}).then(function(response){if(response.status===200&&response.data['message']===\"\"){var data=response.data['data'];localStorage.setItem('_fs_utk',data['apiToken']);localStorage.setItem('user_info',JSON.stringify(data['userInfo']));localStorage.setItem('menu_app_config',JSON.stringify(data['menuAppConfig']));dispatch({type:LOGIN_USER_SUCCESS,payload:{token:data['apiToken'],user:data['userInfo']}});dispatch({type:UPDATE_MENU_APP_SETTINGS_SUCCESS,payload:data['menuAppConfig']});history.push('/');}else{var errorCode=response.data['message'];dispatch({type:LOGIN_USER_ERROR,payload:errorMessage[errorCode]});}}).catch(function(error){dispatch({type:LOGIN_USER_ERROR,payload:error});});};};export var forgotPassword=function forgotPassword(forgotUserMail,history){return{type:FORGOT_PASSWORD,payload:{forgotUserMail,history}};};export var forgotPasswordSuccess=function forgotPasswordSuccess(forgotUserMail){return{type:FORGOT_PASSWORD_SUCCESS,payload:forgotUserMail};};export var forgotPasswordError=function forgotPasswordError(message){return{type:FORGOT_PASSWORD_ERROR,payload:{message}};};export var resetPassword=function resetPassword(_ref){var resetPasswordCode=_ref.resetPasswordCode,newPassword=_ref.newPassword,history=_ref.history;return{type:RESET_PASSWORD,payload:{resetPasswordCode,newPassword,history}};};export var resetPasswordSuccess=function resetPasswordSuccess(newPassword){return{type:RESET_PASSWORD_SUCCESS,payload:newPassword};};export var resetPasswordError=function resetPasswordError(message){return{type:RESET_PASSWORD_ERROR,payload:{message}};};export var registerUser=function registerUser(user,history){return{type:REGISTER_USER,payload:{user,history}};};export var registerUserSuccess=function registerUserSuccess(user){return{type:REGISTER_USER_SUCCESS,payload:user};};export var registerUserError=function registerUserError(message){return{type:REGISTER_USER_ERROR,payload:{message}};};export var logoutUser=function logoutUser(){return function(dispatch){dispatch({type:LOGOUT_USER});};};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/auth/actions.js"],"names":["axios","servicePath","tokenPrefix","errorMessage","LOAD_USER_SUCCESS","LOGIN_USER","LOGIN_USER_SUCCESS","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","LOGIN_USER_ERROR","REGISTER_USER_ERROR","FORGOT_PASSWORD","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","UPDATE_MENU_APP_SETTINGS_SUCCESS","loadUser","dispatch","getState","type","get","headers","authUser","token","then","response","status","data","payload","catch","error","loginUser","user","history","post","email","password","localStorage","setItem","JSON","stringify","push","errorCode","forgotPassword","forgotUserMail","forgotPasswordSuccess","forgotPasswordError","message","resetPassword","resetPasswordCode","newPassword","resetPasswordSuccess","resetPasswordError","registerUser","registerUserSuccess","registerUserError","logoutUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {servicePath, tokenPrefix} from \"../../constants/defaultValues\";\r\nimport errorMessage from \"../../constants/errorMessages\";\r\n\r\nimport {\r\n    LOAD_USER_SUCCESS,\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    REGISTER_USER_ERROR,\r\n    FORGOT_PASSWORD,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_ERROR,\r\n    RESET_PASSWORD,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_ERROR,\r\n    UPDATE_MENU_APP_SETTINGS_SUCCESS\r\n} from '../actions';\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: LOGIN_USER\r\n    });\r\n\r\n    axios.get(servicePath + \"/user/check-auth\", {\r\n        headers: {\r\n            'X-API-TOKEN': tokenPrefix + getState().authUser.token\r\n        }\r\n    }).then(response => {\r\n\r\n        if (response.status === 200 && response.data['message'] === \"\") {\r\n            const data = response.data['data'];\r\n            dispatch({\r\n                type: LOAD_USER_SUCCESS,\r\n                payload:  data['user']\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOGOUT_USER\r\n            });\r\n        }\r\n\r\n    }).catch(error => {\r\n        dispatch({\r\n            type: LOGOUT_USER\r\n        });\r\n    });\r\n};\r\n\r\nexport const loginUser = (user, history) => dispatch => {\r\n\r\n    dispatch({\r\n        type: LOGIN_USER\r\n    });\r\n\r\n    axios.post(servicePath + \"/user/login\", {\r\n        email: user.email,\r\n        password: user.password\r\n    }).then(response => {\r\n\r\n        if (response.status === 200 && response.data['message'] === \"\") {\r\n\r\n            const data = response.data['data'];\r\n\r\n            localStorage.setItem('_fs_utk', data['apiToken']);\r\n            localStorage.setItem('user_info', JSON.stringify(data['userInfo']));\r\n            localStorage.setItem('menu_app_config', JSON.stringify(data['menuAppConfig']));\r\n\r\n            dispatch({\r\n                type: LOGIN_USER_SUCCESS,\r\n                payload: {\r\n                    token: data['apiToken'],\r\n                    user: data['userInfo']\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: UPDATE_MENU_APP_SETTINGS_SUCCESS,\r\n                payload: data['menuAppConfig']\r\n            });\r\n\r\n            history.push('/');\r\n        } else {\r\n            const errorCode = response.data['message'];\r\n            dispatch({\r\n                type: LOGIN_USER_ERROR,\r\n                payload: errorMessage[errorCode]\r\n            });\r\n        }\r\n\r\n    }).catch(error => {\r\n        dispatch({\r\n            type: LOGIN_USER_ERROR,\r\n            payload: error\r\n        });\r\n    });\r\n};\r\n\r\nexport const forgotPassword = (forgotUserMail, history) => ({\r\n    type: FORGOT_PASSWORD,\r\n    payload: {forgotUserMail, history}\r\n});\r\nexport const forgotPasswordSuccess = (forgotUserMail) => ({\r\n    type: FORGOT_PASSWORD_SUCCESS,\r\n    payload: forgotUserMail\r\n});\r\nexport const forgotPasswordError = (message) => ({\r\n    type: FORGOT_PASSWORD_ERROR,\r\n    payload: {message}\r\n});\r\n\r\nexport const resetPassword = ({resetPasswordCode, newPassword, history}) => ({\r\n    type: RESET_PASSWORD,\r\n    payload: {resetPasswordCode, newPassword, history}\r\n});\r\nexport const resetPasswordSuccess = (newPassword) => ({\r\n    type: RESET_PASSWORD_SUCCESS,\r\n    payload: newPassword\r\n});\r\nexport const resetPasswordError = (message) => ({\r\n    type: RESET_PASSWORD_ERROR,\r\n    payload: {message}\r\n});\r\n\r\n\r\nexport const registerUser = (user, history) => ({\r\n    type: REGISTER_USER,\r\n    payload: {user, history}\r\n})\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user\r\n})\r\nexport const registerUserError = (message) => ({\r\n    type: REGISTER_USER_ERROR,\r\n    payload: {message}\r\n})\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}