{"ast":null,"code":"import _objectSpread from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { UPDATE_MENU_APP_COLORS_REQUEST, UPDATE_MENU_APP_SETTINGS_SUCCESS, UPDATE_MENU_APP_COLORS_FAIL, UPDATE_MENU_APP_LOGO_REQUEST, UPDATE_MENU_APP_LOGO_FAIL } from '../actions';\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nvar INIT_STATE = {\n  menuAppSettings: JSON.parse(localStorage.getItem('menu_app_config')),\n  templateLoading: false,\n  logoLoading: false,\n  error: ''\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_MENU_APP_COLORS_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        templateLoading: true,\n        error: ''\n      });\n\n    case UPDATE_MENU_APP_SETTINGS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        templateLoading: false,\n        error: '',\n        menuAppSettings: action.payload\n      });\n\n    case UPDATE_MENU_APP_COLORS_FAIL:\n      NotificationManager.warning(action.payload, \"Error\", 3000, null, null, '');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        templateLoading: false,\n        error: action.payload\n      });\n\n    case UPDATE_MENU_APP_LOGO_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoLoading: true,\n        error: ''\n      });\n\n    case UPDATE_MENU_APP_LOGO_FAIL:\n      NotificationManager.warning(action.payload, \"Error\", 3000, null, null, '');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoLoading: false,\n        error: action.payload\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/my-site/reducer.js"],"names":["UPDATE_MENU_APP_COLORS_REQUEST","UPDATE_MENU_APP_SETTINGS_SUCCESS","UPDATE_MENU_APP_COLORS_FAIL","UPDATE_MENU_APP_LOGO_REQUEST","UPDATE_MENU_APP_LOGO_FAIL","NotificationManager","INIT_STATE","menuAppSettings","JSON","parse","localStorage","getItem","templateLoading","logoLoading","error","state","action","type","payload","warning"],"mappings":";AAAA,SACIA,8BADJ,EAEIC,gCAFJ,EAGIC,2BAHJ,EAIIC,4BAJJ,EAKIC,yBALJ,QAMO,YANP;AAOA,SAAQC,mBAAR,QAAkC,6CAAlC;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,eAAe,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADF;AAEfC,EAAAA,eAAe,EAAE,KAFF;AAGfC,EAAAA,WAAW,EAAE,KAHE;AAIfC,EAAAA,KAAK,EAAE;AAJQ,CAAnB;AAOA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBT,UAAuB;AAAA,MAAXU,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,8BAAL;AACI,6CAAYe,KAAZ;AAAmBH,QAAAA,eAAe,EAAE,IAApC;AAA0CE,QAAAA,KAAK,EAAE;AAAjD;;AACJ,SAAKb,gCAAL;AACI,6CAAYc,KAAZ;AAAmBH,QAAAA,eAAe,EAAE,KAApC;AAA2CE,QAAAA,KAAK,EAAE,EAAlD;AAAsDP,QAAAA,eAAe,EAAES,MAAM,CAACE;AAA9E;;AACJ,SAAKhB,2BAAL;AACIG,MAAAA,mBAAmB,CAACc,OAApB,CACIH,MAAM,CAACE,OADX,EAEI,OAFJ,EAGI,IAHJ,EAII,IAJJ,EAKI,IALJ,EAMI,EANJ;AAQA,6CAAYH,KAAZ;AAAmBH,QAAAA,eAAe,EAAE,KAApC;AAA2CE,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAAzD;;AAEJ,SAAKf,4BAAL;AACI,6CAAYY,KAAZ;AAAmBF,QAAAA,WAAW,EAAE,IAAhC;AAAsCC,QAAAA,KAAK,EAAE;AAA7C;;AACJ,SAAKV,yBAAL;AACIC,MAAAA,mBAAmB,CAACc,OAApB,CACIH,MAAM,CAACE,OADX,EAEI,OAFJ,EAGI,IAHJ,EAII,IAJJ,EAKI,IALJ,EAMI,EANJ;AAQA,6CAAYH,KAAZ;AAAmBF,QAAAA,WAAW,EAAE,KAAhC;AAAuCC,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAArD;;AACJ;AAAS,+BAAYH,KAAZ;AA5Bb;AA8BH,CA/BD","sourcesContent":["import {\n    UPDATE_MENU_APP_COLORS_REQUEST,\n    UPDATE_MENU_APP_SETTINGS_SUCCESS,\n    UPDATE_MENU_APP_COLORS_FAIL,\n    UPDATE_MENU_APP_LOGO_REQUEST,\n    UPDATE_MENU_APP_LOGO_FAIL\n} from '../actions';\nimport {NotificationManager} from \"../../components/common/react-notifications\";\n\nconst INIT_STATE = {\n    menuAppSettings: JSON.parse(localStorage.getItem('menu_app_config')),\n    templateLoading: false,\n    logoLoading: false,\n    error: ''\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case UPDATE_MENU_APP_COLORS_REQUEST:\n            return { ...state, templateLoading: true, error: '' };\n        case UPDATE_MENU_APP_SETTINGS_SUCCESS:\n            return { ...state, templateLoading: false, error: '', menuAppSettings: action.payload };\n        case UPDATE_MENU_APP_COLORS_FAIL:\n            NotificationManager.warning(\n                action.payload,\n                \"Error\",\n                3000,\n                null,\n                null,\n                ''\n            );\n            return { ...state, templateLoading: false, error: action.payload };\n\n        case UPDATE_MENU_APP_LOGO_REQUEST:\n            return { ...state, logoLoading: true, error: '' };\n        case UPDATE_MENU_APP_LOGO_FAIL:\n            NotificationManager.warning(\n                action.payload,\n                \"Error\",\n                3000,\n                null,\n                null,\n                ''\n            );\n            return { ...state, logoLoading: false, error: action.payload };\n        default: return { ...state };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}