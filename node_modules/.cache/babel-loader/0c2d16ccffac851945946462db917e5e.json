{"ast":null,"code":"import _objectSpread from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{LOAD_PRODUCT_SUCCESS,LOAD_PRODUCT_FAIL,TOGGLE_PRODUCT_STATE,TOGGLE_PRODUCT_STATE_SUCCESS,TOGGLE_PRODUCT_STATE_FAIL,CHANGE_PRODUCTS_STATE_SUCCESS,CHANGE_PRODUCTS_STATE_FAIL}from\"../actions\";var INIT_STATE={items:[],totalPage:1,totalItem:0,toggleItems:[]};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INIT_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LOAD_PRODUCT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{items:action.payload.data,totalItem:action.payload.totalItem,totalPage:action.payload.totalPage});case LOAD_PRODUCT_FAIL:return _objectSpread(_objectSpread({},state),{},{items:[],totalItem:0,totalPage:1});case TOGGLE_PRODUCT_STATE:return _objectSpread(_objectSpread({},state),{},{toggleItems:action.payload});case TOGGLE_PRODUCT_STATE_SUCCESS:return _objectSpread(_objectSpread({},state),{},{items:toggleProductState(state.items,action.payload),toggleItems:[]});case CHANGE_PRODUCTS_STATE_SUCCESS:return _objectSpread(_objectSpread({},state),{},{items:updateProductState(state.items,action.payload.productIds,action.payload.state),toggleItems:[]});case TOGGLE_PRODUCT_STATE_FAIL:case CHANGE_PRODUCTS_STATE_FAIL:return _objectSpread(_objectSpread({},state),{},{toggleItems:[]});default:return _objectSpread({},state);}});var toggleProductState=function toggleProductState(products,productId){return products.map(function(product){if(product['id']!==productId)return product;return _objectSpread(_objectSpread({},product),{},{show_flag:1-product.show_flag});});};var updateProductState=function updateProductState(products,productIds,state){return products.map(function(product){if(productIds.indexOf(product['id'])<0)return product;return _objectSpread(_objectSpread({},product),{},{show_flag:state});});};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/products/reducer.js"],"names":["LOAD_PRODUCT_SUCCESS","LOAD_PRODUCT_FAIL","TOGGLE_PRODUCT_STATE","TOGGLE_PRODUCT_STATE_SUCCESS","TOGGLE_PRODUCT_STATE_FAIL","CHANGE_PRODUCTS_STATE_SUCCESS","CHANGE_PRODUCTS_STATE_FAIL","INIT_STATE","items","totalPage","totalItem","toggleItems","state","action","type","payload","data","toggleProductState","updateProductState","productIds","products","productId","map","product","show_flag","indexOf"],"mappings":"+MAAA,OACIA,oBADJ,CAEIC,iBAFJ,CAGIC,oBAHJ,CAIIC,4BAJJ,CAKIC,yBALJ,CAMIC,6BANJ,CAOIC,0BAPJ,KAQO,YARP,CAUA,GAAMC,CAAAA,UAAU,CAAG,CACfC,KAAK,CAAE,EADQ,CAEfC,SAAS,CAAE,CAFI,CAGfC,SAAS,CAAE,CAHI,CAIfC,WAAW,CAAE,EAJE,CAAnB,CAOA,eAAe,UAAgC,IAA/BC,CAAAA,KAA+B,2DAAvBL,UAAuB,IAAXM,CAAAA,MAAW,2CAC3C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKd,CAAAA,oBAAL,CACI,sCACOY,KADP,MAEIJ,KAAK,CAAEK,MAAM,CAACE,OAAP,CAAeC,IAF1B,CAGIN,SAAS,CAAEG,MAAM,CAACE,OAAP,CAAeL,SAH9B,CAIID,SAAS,CAAEI,MAAM,CAACE,OAAP,CAAeN,SAJ9B,GAMJ,IAAKR,CAAAA,iBAAL,CACI,sCACOW,KADP,MAEIJ,KAAK,CAAE,EAFX,CAGIE,SAAS,CAAE,CAHf,CAIID,SAAS,CAAE,CAJf,GAMJ,IAAKP,CAAAA,oBAAL,CACI,sCACOU,KADP,MAEID,WAAW,CAAEE,MAAM,CAACE,OAFxB,GAIJ,IAAKZ,CAAAA,4BAAL,CACI,sCACOS,KADP,MAEIJ,KAAK,CAAES,kBAAkB,CAACL,KAAK,CAACJ,KAAP,CAAcK,MAAM,CAACE,OAArB,CAF7B,CAGIJ,WAAW,CAAE,EAHjB,GAKJ,IAAKN,CAAAA,6BAAL,CACI,sCACOO,KADP,MAEIJ,KAAK,CAAEU,kBAAkB,CAACN,KAAK,CAACJ,KAAP,CAAcK,MAAM,CAACE,OAAP,CAAeI,UAA7B,CAAyCN,MAAM,CAACE,OAAP,CAAeH,KAAxD,CAF7B,CAGID,WAAW,CAAE,EAHjB,GAKJ,IAAKP,CAAAA,yBAAL,CACA,IAAKE,CAAAA,0BAAL,CACI,sCACOM,KADP,MAEID,WAAW,CAAE,EAFjB,GAIJ,QACI,wBAAWC,KAAX,EAvCR,CAyCH,CA1CD,EA4CA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACG,QAAD,CAAWC,SAAX,CAAyB,CAChD,MAAOD,CAAAA,QAAQ,CAACE,GAAT,CAAa,SAAAC,OAAO,CAAI,CAC3B,GAAIA,OAAO,CAAC,IAAD,CAAP,GAAkBF,SAAtB,CAAiC,MAAOE,CAAAA,OAAP,CACjC,sCACOA,OADP,MAEIC,SAAS,CAAE,EAAID,OAAO,CAACC,SAF3B,GAIH,CANM,CAAP,CAOH,CARD,CAUA,GAAMN,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACE,QAAD,CAAWD,UAAX,CAAuBP,KAAvB,CAAiC,CACxD,MAAOQ,CAAAA,QAAQ,CAACE,GAAT,CAAa,SAAAC,OAAO,CAAI,CAC3B,GAAIJ,UAAU,CAACM,OAAX,CAAmBF,OAAO,CAAC,IAAD,CAA1B,EAAoC,CAAxC,CAA2C,MAAOA,CAAAA,OAAP,CAC3C,sCACOA,OADP,MAEIC,SAAS,CAAEZ,KAFf,GAIH,CANM,CAAP,CAOH,CARD","sourcesContent":["import {\n    LOAD_PRODUCT_SUCCESS,\n    LOAD_PRODUCT_FAIL,\n    TOGGLE_PRODUCT_STATE,\n    TOGGLE_PRODUCT_STATE_SUCCESS,\n    TOGGLE_PRODUCT_STATE_FAIL,\n    CHANGE_PRODUCTS_STATE_SUCCESS,\n    CHANGE_PRODUCTS_STATE_FAIL\n} from \"../actions\";\n\nconst INIT_STATE = {\n    items: [],\n    totalPage: 1,\n    totalItem: 0,\n    toggleItems: []\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case LOAD_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                items: action.payload.data,\n                totalItem: action.payload.totalItem,\n                totalPage: action.payload.totalPage\n            };\n        case LOAD_PRODUCT_FAIL:\n            return {\n                ...state,\n                items: [],\n                totalItem: 0,\n                totalPage: 1\n            };\n        case TOGGLE_PRODUCT_STATE:\n            return {\n                ...state,\n                toggleItems: action.payload,\n            };\n        case TOGGLE_PRODUCT_STATE_SUCCESS:\n            return {\n                ...state,\n                items: toggleProductState(state.items, action.payload),\n                toggleItems: []\n            };\n        case CHANGE_PRODUCTS_STATE_SUCCESS:\n            return {\n                ...state,\n                items: updateProductState(state.items, action.payload.productIds, action.payload.state),\n                toggleItems: []\n            }\n        case TOGGLE_PRODUCT_STATE_FAIL:\n        case CHANGE_PRODUCTS_STATE_FAIL:\n            return {\n                ...state,\n                toggleItems: []\n            }\n        default:\n            return {...state};\n    }\n}\n\nconst toggleProductState = (products, productId) => {\n    return products.map(product => {\n        if (product['id'] !== productId) return product;\n        return {\n            ...product,\n            show_flag: 1 - product.show_flag\n        }\n    });\n}\n\nconst updateProductState = (products, productIds, state) => {\n    return products.map(product => {\n        if (productIds.indexOf(product['id']) < 0) return product;\n        return {\n            ...product,\n            show_flag: state\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}