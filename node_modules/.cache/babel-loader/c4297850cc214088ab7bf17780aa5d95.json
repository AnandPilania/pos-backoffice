{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/products/ImageListView.js\";\nimport React, { Component } from \"react\";\nimport { Row, Card, CardBody, CardSubtitle, CardImg, CardText, CustomInput, Badge } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\nimport { productImagePath } from \"../../constants/defaultValues\";\nimport { injectIntl } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport { toggleProductState } from \"../../redux/products/actions\";\n\nvar ImageListView = /*#__PURE__*/function (_Component) {\n  _inherits(ImageListView, _Component);\n\n  var _super = _createSuper(ImageListView);\n\n  function ImageListView() {\n    _classCallCheck(this, ImageListView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ImageListView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          product = _this$props.product,\n          isSelect = _this$props.isSelect,\n          collect = _this$props.collect,\n          onCheckItem = _this$props.onCheckItem,\n          toggleItems = _this$props.toggleItems,\n          intl = _this$props.intl;\n      return /*#__PURE__*/React.createElement(Colxx, {\n        sm: \"6\",\n        lg: \"4\",\n        xl: \"3\",\n        className: \"mb-3\",\n        key: product.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ContextMenuTrigger, {\n        id: \"menu_id\",\n        data: product.id,\n        collect: collect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        onClick: function onClick(event) {\n          return onCheckItem(event, product.id);\n        },\n        className: classnames({\n          active: isSelect\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"products/edit/\".concat(product.id),\n        className: \"w-40 w-sm-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardImg, {\n        top: true,\n        alt: product.name,\n        src: productImagePath + \"/thumbnail/\" + product.picture,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Badge, {\n        color: toggleItems.indexOf(product.id) !== -1 ? 'info' : product.show_flag === 1 ? 'primary' : 'danger',\n        pill: true,\n        className: \"position-absolute badge-top-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, toggleItems.indexOf(product.id) !== -1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"show-spinner badge-multiple-state badge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spinner d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bounce3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 51\n        }\n      }))) : product.show_flag === 1 ? intl.messages['pages.active-c'] : intl.messages['pages.inactive-c'])), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Colxx, {\n        xxs: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        className: \"item-check mb-0\",\n        type: \"checkbox\",\n        id: \"check_\".concat(product.id),\n        checked: isSelect,\n        onChange: function onChange() {},\n        label: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Colxx, {\n        xxs: \"10\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CardSubtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, product.name), /*#__PURE__*/React.createElement(CardText, {\n        className: \"text-muted text-small mb-0 font-weight-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, product.category.name)))))));\n    }\n  }]);\n\n  return ImageListView;\n}(Component);\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\n\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var products = _ref.products;\n  var toggleItems = products.toggleItems;\n  return {\n    toggleItems\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, {\n  toggleProductState\n})(ImageListView));","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/products/ImageListView.js"],"names":["React","Component","Row","Card","CardBody","CardSubtitle","CardImg","CardText","CustomInput","Badge","NavLink","classnames","ContextMenuTrigger","Colxx","productImagePath","injectIntl","connect","toggleProductState","ImageListView","props","product","isSelect","collect","onCheckItem","toggleItems","intl","id","event","active","name","picture","indexOf","show_flag","messages","category","mapStateToProps","products"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardImg,\r\n  CardText,\r\n  CustomInput,\r\n  Badge\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport {productImagePath} from \"../../constants/defaultValues\";\r\nimport {injectIntl} from \"react-intl\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleProductState} from \"../../redux/products/actions\";\r\n\r\nclass ImageListView extends Component {\r\n\r\n  render() {\r\n    const { product, isSelect, collect, onCheckItem, toggleItems, intl } = this.props;\r\n    return (\r\n        <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\r\n          <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n            <Card\r\n                onClick={event => onCheckItem(event, product.id)}\r\n                className={classnames({\r\n                  active: isSelect\r\n                })}\r\n            >\r\n              <div className=\"position-relative\">\r\n                <NavLink to={`products/edit/${product.id}`} className=\"w-40 w-sm-100\">\r\n                  <CardImg top alt={product.name} src={productImagePath + \"/thumbnail/\" + product.picture} />\r\n                </NavLink>\r\n                <Badge color={\r\n                  toggleItems.indexOf(product.id) !== -1 ? 'info' : (product.show_flag === 1 ? 'primary' : 'danger')}\r\n                       pill\r\n                       className=\"position-absolute badge-top-left\"\r\n                >\r\n                  {toggleItems.indexOf(product.id) !== -1 ?\r\n                      <div className=\"show-spinner badge-multiple-state badge\">\r\n                                                <span className=\"spinner d-inline-block\">\r\n                                                  <span className=\"bounce1\"/>\r\n                                                  <span className=\"bounce2\"/>\r\n                                                  <span className=\"bounce3\"/>\r\n                                                </span>\r\n                      </div> : (product.show_flag === 1 ?\r\n                          intl.messages['pages.active-c'] :\r\n                          intl.messages['pages.inactive-c'])}\r\n                </Badge>\r\n              </div>\r\n              <CardBody>\r\n                <Row>\r\n                  <Colxx xxs=\"2\">\r\n                    <CustomInput\r\n                        className=\"item-check mb-0\"\r\n                        type=\"checkbox\"\r\n                        id={`check_${product.id}`}\r\n                        checked={isSelect}\r\n                        onChange={() => {}}\r\n                        label=\"\"/>\r\n                  </Colxx>\r\n                  <Colxx xxs=\"10\" className=\"mb-3\">\r\n                    <CardSubtitle>{product.name}</CardSubtitle>\r\n                    <CardText className=\"text-muted text-small mb-0 font-weight-light\">\r\n                      {product.category.name}\r\n                    </CardText>\r\n                  </Colxx>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </ContextMenuTrigger>\r\n        </Colxx>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nconst mapStateToProps = ({products}) => {\r\n  const {toggleItems} = products;\r\n  return {toggleItems};\r\n};\r\nexport default injectIntl(\r\n    connect(\r\n        mapStateToProps,\r\n        {\r\n          toggleProductState\r\n        }\r\n    )(ImageListView)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}