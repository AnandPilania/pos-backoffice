{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LOAD_PRODUCT_SUCCESS, LOAD_PRODUCT_FAIL, TOGGLE_PRODUCT_STATE, TOGGLE_PRODUCT_STATE_SUCCESS, TOGGLE_PRODUCT_STATE_FAIL } from \"../actions\";\nimport axios from \"axios\";\nimport { tokenPrefix, servicePath } from \"../../constants/defaultValues\";\nexport var getProduct = function getProduct(pageInfo) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", axios.get(\"\".concat(servicePath, \"/products/paging?pageSize=\").concat(pageInfo.selectedPageSize, \"&currentPage=\").concat(pageInfo.currentPage, \"&orderBy=\").concat(pageInfo.selectedOrderOption.column, \"&search=\").concat(pageInfo.search), {\n                headers: {\n                  'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n              }).then(function (res) {\n                return res.data['data'];\n              }).then(function (data) {\n                dispatch({\n                  type: LOAD_PRODUCT_SUCCESS,\n                  payload: data\n                });\n              }).catch(function (error) {\n                dispatch({\n                  type: LOAD_PRODUCT_FAIL\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var toggleProductState = function toggleProductState(productId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", axios.post(servicePath + \"/products/toggleActive\", {\n                productId\n              }, {\n                headers: {\n                  'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n              }).then(function (response) {\n                return response['data'];\n              }).then(function (data) {\n                if (data['message'] === \"\") {\n                  dispatch({\n                    type: TOGGLE_PRODUCT_STATE_SUCCESS,\n                    payload: productId\n                  });\n                  return true;\n                } else {\n                  return false;\n                }\n              }).catch(function (error) {\n                return false;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/products/actions.js"],"names":["LOAD_PRODUCT_SUCCESS","LOAD_PRODUCT_FAIL","TOGGLE_PRODUCT_STATE","TOGGLE_PRODUCT_STATE_SUCCESS","TOGGLE_PRODUCT_STATE_FAIL","axios","tokenPrefix","servicePath","getProduct","pageInfo","dispatch","getState","get","selectedPageSize","currentPage","selectedOrderOption","column","search","headers","authUser","token","then","res","data","type","payload","catch","error","toggleProductState","productId","post","response"],"mappings":";;AAAA,SACIA,oBADJ,EAEIC,iBAFJ,EAGIC,oBAHJ,EAIIC,4BAJJ,EAKIC,yBALJ,QAMO,YANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,+BAAvC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD;AAAA;AAAA,wEAAc,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC7BN,KAAK,CACPO,GADE,WAEIL,WAFJ,uCAE4CE,QAAQ,CAACI,gBAFrD,0BAEqFJ,QAAQ,CAACK,WAF9F,sBAGKL,QAAQ,CAACM,mBAAT,CAA6BC,MAHlC,qBAGmDP,QAAQ,CAACQ,MAH5D,GAGsE;AACjEC,gBAAAA,OAAO,EAAE;AACL,iCAAeZ,WAAW,GAAGK,QAAQ,GAAGQ,QAAX,CAAoBC;AAD5C;AADwD,eAHtE,EASFC,IATE,CASG,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAG,CAACC,IAAJ,CAAS,MAAT,CAAP;AACH,eAXE,EAYFF,IAZE,CAYG,UAAAE,IAAI,EAAI;AACVb,gBAAAA,QAAQ,CAAC;AACLc,kBAAAA,IAAI,EAAExB,oBADD;AAELyB,kBAAAA,OAAO,EAAEF;AAFJ,iBAAD,CAAR;AAIH,eAjBE,EAkBFG,KAlBE,CAkBI,UAAAC,KAAK,EAAI;AACZjB,gBAAAA,QAAQ,CAAC;AACLc,kBAAAA,IAAI,EAAEvB;AADD,iBAAD,CAAR;AAGH,eAtBE,CAD6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAd;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AA0BP,OAAO,IAAM2B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD;AAAA;AAAA,yEAAe,kBAAOnB,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gDACtCN,KAAK,CACPyB,IADE,CACGvB,WAAW,GAAG,wBADjB,EAC2C;AAC1CsB,gBAAAA;AAD0C,eAD3C,EAGA;AACCX,gBAAAA,OAAO,EAAE;AACL,iCAAeZ,WAAW,GAAGK,QAAQ,GAAGQ,QAAX,CAAoBC;AAD5C;AADV,eAHA,EAQFC,IARE,CAQG,UAAAU,QAAQ;AAAA,uBAAIA,QAAQ,CAAC,MAAD,CAAZ;AAAA,eARX,EASFV,IATE,CASG,UAAAE,IAAI,EAAI;AACV,oBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,EAAxB,EAA4B;AACxBb,kBAAAA,QAAQ,CAAC;AACLc,oBAAAA,IAAI,EAAErB,4BADD;AAELsB,oBAAAA,OAAO,EAAEI;AAFJ,mBAAD,CAAR;AAIA,yBAAO,IAAP;AACH,iBAND,MAMO;AACH,yBAAO,KAAP;AACH;AAEJ,eApBE,EAqBFH,KArBE,CAqBI,UAAAC,KAAK,EAAI;AACZ,uBAAO,KAAP;AACH,eAvBE,CADsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAf;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B","sourcesContent":["import {\n    LOAD_PRODUCT_SUCCESS,\n    LOAD_PRODUCT_FAIL,\n    TOGGLE_PRODUCT_STATE,\n    TOGGLE_PRODUCT_STATE_SUCCESS,\n    TOGGLE_PRODUCT_STATE_FAIL\n} from \"../actions\";\nimport axios from \"axios\";\nimport {tokenPrefix, servicePath} from \"../../constants/defaultValues\";\n\nexport const getProduct = (pageInfo) => async (dispatch, getState) => {\n    return axios\n        .get(\n            `${servicePath}/products/paging?pageSize=${pageInfo.selectedPageSize}&currentPage=${pageInfo.currentPage}&orderBy=${\n                pageInfo.selectedOrderOption.column}&search=${pageInfo.search}`, {\n                headers: {\n                    'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n            }\n        )\n        .then(res => {\n            return res.data['data'];\n        })\n        .then(data => {\n            dispatch({\n                type: LOAD_PRODUCT_SUCCESS,\n                payload: data\n            });\n        })\n        .catch(error => {\n            dispatch({\n                type: LOAD_PRODUCT_FAIL,\n            });\n        });\n}\n\nexport const toggleProductState = (productId) => async (dispatch, getState) => {\n    return axios\n        .post(servicePath + \"/products/toggleActive\", {\n            productId\n        }, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response['data'])\n        .then(data => {\n            if (data['message'] === \"\") {\n                dispatch({\n                    type: TOGGLE_PRODUCT_STATE_SUCCESS,\n                    payload: productId\n                });\n                return true;\n            } else {\n                return false;\n            }\n\n        })\n        .catch(error => {\n            return false;\n        });\n}"]},"metadata":{},"sourceType":"module"}