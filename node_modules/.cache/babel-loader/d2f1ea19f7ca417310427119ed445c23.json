{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LOAD_CATEGORY_SUCCESS, LOAD_CATEGORY_FAIL, TOGGLE_CATEGORY_STATE, TOGGLE_CATEGORY_STATE_SUCCESS, TOGGLE_CATEGORY_STATE_FAIL, CHANGE_CATEGORIES_STATE_SUCCESS, CHANGE_CATEGORIES_STATE_FAIL } from \"../actions\";\nimport axios from \"axios\";\nimport { tokenPrefix, servicePath } from \"../../constants/defaultValues\";\nexport var getCategoryList = function getCategoryList(pageInfo) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", axios.get(\"\".concat(servicePath, \"/categories/paging\"), {\n                params: {\n                  pageSize: pageInfo.selectedPageSize,\n                  currentPage: pageInfo.currentPage,\n                  orderBy: pageInfo.selectedOrderOption.column,\n                  search: pageInfo.search\n                },\n                headers: {\n                  'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n              }).then(function (res) {\n                return res.data['data'];\n              }).then(function (data) {\n                dispatch({\n                  type: LOAD_CATEGORY_SUCCESS,\n                  payload: data\n                });\n                return true;\n              }).catch(function (error) {\n                dispatch({\n                  type: LOAD_CATEGORY_FAIL\n                });\n                return false;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var toggleCategoryState = function toggleCategoryState(categoryId) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: TOGGLE_CATEGORY_STATE,\n      payload: [categoryId]\n    });\n    axios.post(servicePath + \"/categories/toggleActive\", {\n      categoryId\n    }, {\n      headers: {\n        'X-API-TOKEN': tokenPrefix + getState().authUser.token\n      }\n    }).then(function (response) {\n      return response['data'];\n    }).then(function (data) {\n      if (data['message'] === \"\") {\n        dispatch({\n          type: TOGGLE_CATEGORY_STATE_SUCCESS,\n          payload: categoryId\n        });\n      } else {\n        dispatch({\n          type: TOGGLE_CATEGORY_STATE_FAIL\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: TOGGLE_CATEGORY_STATE_FAIL\n      });\n    });\n  };\n};\nexport var changeCategoriesState = function changeCategoriesState(categoryIds, state) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: TOGGLE_CATEGORY_STATE,\n      payload: categoryIds\n    });\n    axios.post(servicePath + \"/categories/changeState\", {\n      categoryIds: JSON.stringify(categoryIds),\n      state\n    }, {\n      headers: {\n        'X-API-TOKEN': tokenPrefix + getState().authUser.token\n      }\n    }).then(function (response) {\n      return response['data'];\n    }).then(function (data) {\n      if (data['message'] === \"\") {\n        dispatch({\n          type: CHANGE_CATEGORIES_STATE_SUCCESS,\n          payload: {\n            categoryIds,\n            state\n          }\n        });\n      } else {\n        dispatch({\n          type: CHANGE_CATEGORIES_STATE_FAIL\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: CHANGE_CATEGORIES_STATE_FAIL\n      });\n    });\n  };\n};\nexport var deleteCategories = function deleteCategories(categoryIds) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", axios.delete(\"\".concat(servicePath, \"/categories/delete\"), {\n                data: {\n                  categoryIds: JSON.stringify(categoryIds)\n                },\n                headers: {\n                  'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n              }).then(function (res) {\n                return res.data['data'];\n              }).then(function (data) {\n                return true;\n              }).catch(function (error) {\n                return false;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/categories/actions.js"],"names":["LOAD_CATEGORY_SUCCESS","LOAD_CATEGORY_FAIL","TOGGLE_CATEGORY_STATE","TOGGLE_CATEGORY_STATE_SUCCESS","TOGGLE_CATEGORY_STATE_FAIL","CHANGE_CATEGORIES_STATE_SUCCESS","CHANGE_CATEGORIES_STATE_FAIL","axios","tokenPrefix","servicePath","getCategoryList","pageInfo","dispatch","getState","get","params","pageSize","selectedPageSize","currentPage","orderBy","selectedOrderOption","column","search","headers","authUser","token","then","res","data","type","payload","catch","error","toggleCategoryState","categoryId","post","response","changeCategoriesState","categoryIds","state","JSON","stringify","deleteCategories","delete"],"mappings":"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","sourcesContent":["import {\n    LOAD_CATEGORY_SUCCESS,\n    LOAD_CATEGORY_FAIL,\n    TOGGLE_CATEGORY_STATE,\n    TOGGLE_CATEGORY_STATE_SUCCESS,\n    TOGGLE_CATEGORY_STATE_FAIL,\n    CHANGE_CATEGORIES_STATE_SUCCESS,\n    CHANGE_CATEGORIES_STATE_FAIL\n} from \"../actions\";\nimport axios from \"axios\";\nimport {tokenPrefix, servicePath} from \"../../constants/defaultValues\";\n\nexport const getCategoryList = (pageInfo) => async (dispatch, getState) => {\n    return axios\n        .get(\n            `${servicePath}/categories/paging`, {\n                params: {\n                    pageSize: pageInfo.selectedPageSize,\n                    currentPage: pageInfo.currentPage,\n                    orderBy: pageInfo.selectedOrderOption.column,\n                    search: pageInfo.search\n                },\n                headers: {\n                    'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n            }\n        )\n        .then(res => res.data['data'])\n        .then(data => {\n            dispatch({\n                type: LOAD_CATEGORY_SUCCESS,\n                payload: data\n            });\n            return true;\n        })\n        .catch(error => {\n            dispatch({\n                type: LOAD_CATEGORY_FAIL,\n            });\n            return false;\n        });\n}\n\nexport const toggleCategoryState = (categoryId) => (dispatch, getState) => {\n    dispatch({\n        type: TOGGLE_CATEGORY_STATE,\n        payload: [categoryId]\n    });\n    axios\n        .post(servicePath + \"/categories/toggleActive\", {\n            categoryId\n        }, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response['data'])\n        .then(data => {\n            if (data['message'] === \"\") {\n                dispatch({\n                    type: TOGGLE_CATEGORY_STATE_SUCCESS,\n                    payload: categoryId\n                });\n            } else {\n                dispatch({\n                    type: TOGGLE_CATEGORY_STATE_FAIL\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: TOGGLE_CATEGORY_STATE_FAIL\n            });\n        });\n}\n\nexport const changeCategoriesState = (categoryIds, state) => (dispatch, getState) => {\n    dispatch({\n        type: TOGGLE_CATEGORY_STATE,\n        payload: categoryIds\n    });\n    axios\n        .post(servicePath + \"/categories/changeState\", {\n            categoryIds: JSON.stringify(categoryIds),\n            state\n        }, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response['data'])\n        .then(data => {\n            if (data['message'] === \"\") {\n                dispatch({\n                    type: CHANGE_CATEGORIES_STATE_SUCCESS,\n                    payload: {\n                        categoryIds,\n                        state\n                    }\n                });\n            } else {\n                dispatch({\n                    type: CHANGE_CATEGORIES_STATE_FAIL\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: CHANGE_CATEGORIES_STATE_FAIL\n            });\n        });\n}\n\nexport const deleteCategories = (categoryIds) => async (dispatch, getState) => {\n    return axios\n        .delete(\n            `${servicePath}/categories/delete`, {\n                data: {\n                    categoryIds: JSON.stringify(categoryIds)\n                },\n                headers: {\n                    'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n            }\n        )\n        .then(res => {\n            return res.data['data'];\n        })\n        .then(data => {\n            return true;\n        })\n        .catch(error => {\n            return false;\n        });\n}"]},"metadata":{},"sourceType":"module"}