{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/navs/Topnav.js\";\nimport React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setContainerClassnames, clickOnMobileMenu, logoutUser, changeLocale } from \"../../redux/actions\";\nimport { localeOptions, isDarkSwitchActive, mediaPath } from \"../../constants/defaultValues\";\nimport { MobileMenuIcon, MenuIcon } from \"../../components/svg\";\nimport TopnavNotifications from \"./Topnav.Notifications\";\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\nimport { getDirection, setDirection } from \"../../helpers/Utils\";\n\nvar TopNav = /*#__PURE__*/function (_Component) {\n  _inherits(TopNav, _Component);\n\n  var _super = _createSuper(TopNav);\n\n  function TopNav(props) {\n    var _this;\n\n    _classCallCheck(this, TopNav);\n\n    _this = _super.call(this, props);\n\n    _this.handleChangeLocale = function (locale, direction) {\n      _this.props.changeLocale(locale);\n\n      var currentDirection = getDirection().direction;\n\n      if (direction !== currentDirection) {\n        setDirection(direction);\n        setTimeout(function () {\n          window.location.reload();\n        }, 500);\n      }\n    };\n\n    _this.handleLogout = function () {\n      _this.props.logoutUser(_this.props.history);\n    };\n\n    _this.menuButtonClick = function (e, menuClickCount, containerClassnames) {\n      e.preventDefault();\n      setTimeout(function () {\n        var event = document.createEvent(\"HTMLEvents\");\n        event.initEvent(\"resize\", false, false);\n        window.dispatchEvent(event);\n      }, 350);\n\n      _this.props.setContainerClassnames(++menuClickCount, containerClassnames, _this.props.selectedMenuHasSubItems);\n    };\n\n    _this.mobileMenuButtonClick = function (e, containerClassnames) {\n      e.preventDefault();\n\n      _this.props.clickOnMobileMenu(containerClassnames);\n    };\n\n    _this.state = {\n      isInFullScreen: false,\n      searchKeyword: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TopNav, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          containerClassnames = _this$props.containerClassnames,\n          menuClickCount = _this$props.menuClickCount,\n          locale = _this$props.locale;\n      var messages = this.props.intl.messages;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar fixed-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center navbar-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"#\",\n        location: {},\n        className: \"menu-button d-none d-md-block\",\n        onClick: function onClick(e) {\n          return _this2.menuButtonClick(e, menuClickCount, containerClassnames);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MenuIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(NavLink, {\n        to: \"#\",\n        location: {},\n        className: \"menu-button-mobile d-xs-block d-sm-block d-md-none\",\n        onClick: function onClick(e) {\n          return _this2.mobileMenuButtonClick(e, containerClassnames);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MobileMenuIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        caret: true,\n        color: \"light\",\n        size: \"sm\",\n        className: \"language-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, locale.toUpperCase())), /*#__PURE__*/React.createElement(DropdownMenu, {\n        className: \"mt-3\",\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }\n      }, localeOptions.map(function (l) {\n        return /*#__PURE__*/React.createElement(DropdownItem, {\n          onClick: function onClick() {\n            return _this2.handleChangeLocale(l.id, l.direction);\n          },\n          key: l.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 41\n          }\n        }, l.name);\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, isDarkSwitchActive && /*#__PURE__*/React.createElement(TopnavDarkSwitch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 44\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header-icons d-inline-block align-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TopnavNotifications, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        className: \"dropdown-menu-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        className: \"p-0\",\n        color: \"empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"name mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      }, this.props.loginUser ? this.props.loginUser.first_name + ' ' + this.props.loginUser.last_name : ''), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Profile\",\n        src: this.props.company_logo !== undefined ? \"\".concat(mediaPath, \"/company_logos/\").concat(this.props.company_logo) : '/assets/img/profile-pic-l.jpg',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(DropdownMenu, {\n        className: \"mt-3\",\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, \"Account\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, \"Features\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      }, \"History\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, \"Support\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        divider: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: function onClick() {\n          return _this2.handleLogout();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }\n      }, \"Sign out\"))))));\n    }\n  }]);\n\n  return TopNav;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var menu = _ref.menu,\n      settings = _ref.settings,\n      authUser = _ref.authUser;\n  var containerClassnames = menu.containerClassnames,\n      menuClickCount = menu.menuClickCount,\n      selectedMenuHasSubItems = menu.selectedMenuHasSubItems;\n  var locale = settings.locale;\n  var loginUser = authUser.user;\n  return {\n    containerClassnames,\n    menuClickCount,\n    selectedMenuHasSubItems,\n    locale,\n    loginUser\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, {\n  setContainerClassnames,\n  clickOnMobileMenu,\n  logoutUser,\n  changeLocale\n})(TopNav));","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/containers/navs/Topnav.js"],"names":["React","Component","injectIntl","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","NavLink","connect","setContainerClassnames","clickOnMobileMenu","logoutUser","changeLocale","localeOptions","isDarkSwitchActive","mediaPath","MobileMenuIcon","MenuIcon","TopnavNotifications","TopnavDarkSwitch","getDirection","setDirection","TopNav","props","handleChangeLocale","locale","direction","currentDirection","setTimeout","window","location","reload","handleLogout","history","menuButtonClick","e","menuClickCount","containerClassnames","preventDefault","event","document","createEvent","initEvent","dispatchEvent","selectedMenuHasSubItems","mobileMenuButtonClick","state","isInFullScreen","searchKeyword","messages","intl","toUpperCase","map","l","id","name","loginUser","first_name","last_name","company_logo","undefined","mapStateToProps","menu","settings","authUser","user"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {injectIntl} from \"react-intl\";\r\nimport {\r\n    UncontrolledDropdown,\r\n    DropdownItem,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n} from \"reactstrap\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    setContainerClassnames,\r\n    clickOnMobileMenu,\r\n    logoutUser,\r\n    changeLocale\r\n} from \"../../redux/actions\";\r\n\r\nimport {\r\n    localeOptions,\r\n    isDarkSwitchActive,\r\n    mediaPath\r\n} from \"../../constants/defaultValues\";\r\n\r\nimport {MobileMenuIcon, MenuIcon} from \"../../components/svg\";\r\nimport TopnavNotifications from \"./Topnav.Notifications\";\r\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\r\n\r\nimport {getDirection, setDirection} from \"../../helpers/Utils\";\r\n\r\nclass TopNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isInFullScreen: false,\r\n            searchKeyword: \"\"\r\n        };\r\n    }\r\n\r\n    handleChangeLocale = (locale, direction) => {\r\n        this.props.changeLocale(locale);\r\n\r\n        const currentDirection = getDirection().direction;\r\n        if (direction !== currentDirection) {\r\n            setDirection(direction);\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 500);\r\n        }\r\n    };\r\n\r\n    handleLogout = () => {\r\n        this.props.logoutUser(this.props.history);\r\n    };\r\n\r\n    menuButtonClick = (e, menuClickCount, containerClassnames) => {\r\n        e.preventDefault();\r\n\r\n        setTimeout(() => {\r\n            var event = document.createEvent(\"HTMLEvents\");\r\n            event.initEvent(\"resize\", false, false);\r\n            window.dispatchEvent(event);\r\n        }, 350);\r\n        this.props.setContainerClassnames(\r\n            ++menuClickCount,\r\n            containerClassnames,\r\n            this.props.selectedMenuHasSubItems\r\n        );\r\n    };\r\n    mobileMenuButtonClick = (e, containerClassnames) => {\r\n        e.preventDefault();\r\n        this.props.clickOnMobileMenu(containerClassnames);\r\n    };\r\n\r\n    render() {\r\n        const {containerClassnames, menuClickCount, locale} = this.props;\r\n        const {messages} = this.props.intl;\r\n        return (\r\n            <nav className=\"navbar fixed-top\">\r\n                <div className=\"d-flex align-items-center navbar-left\">\r\n                    <NavLink\r\n                        to=\"#\" location={{}}\r\n                        className=\"menu-button d-none d-md-block\"\r\n                        onClick={e =>\r\n                            this.menuButtonClick(e, menuClickCount, containerClassnames)\r\n                        }\r\n                    >\r\n                        <MenuIcon/>\r\n                    </NavLink>\r\n                    <NavLink\r\n                        to=\"#\" location={{}}\r\n                        className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n                        onClick={e => this.mobileMenuButtonClick(e, containerClassnames)}\r\n                    >\r\n                        <MobileMenuIcon/>\r\n                    </NavLink>\r\n\r\n                    <div className=\"d-inline-block\">\r\n                        <UncontrolledDropdown className=\"ml-2\">\r\n                            <DropdownToggle\r\n                                caret\r\n                                color=\"light\"\r\n                                size=\"sm\"\r\n                                className=\"language-button\"\r\n                            >\r\n                                <span className=\"name\">{locale.toUpperCase()}</span>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu className=\"mt-3\" right>\r\n                                {localeOptions.map(l => {\r\n                                    return (\r\n                                        <DropdownItem\r\n                                            onClick={() => this.handleChangeLocale(l.id, l.direction)}\r\n                                            key={l.id}\r\n                                        >\r\n                                            {l.name}\r\n                                        </DropdownItem>\r\n                                    );\r\n                                })}\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"navbar-right\">\r\n                    {isDarkSwitchActive && <TopnavDarkSwitch/>}\r\n\r\n                    <div className=\"header-icons d-inline-block align-middle\">\r\n\r\n                        <TopnavNotifications/>\r\n                    </div>\r\n                    <div className=\"user d-inline-block\">\r\n                        <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n                            <DropdownToggle className=\"p-0\" color=\"empty\">\r\n                                <span className=\"name mr-1\">{this.props.loginUser ? this.props.loginUser.first_name + ' ' + this.props.loginUser.last_name : ''}</span>\r\n                                <span>\r\n                  <img alt=\"Profile\" src={\r\n                      this.props.company_logo !== undefined\r\n                          ? `${mediaPath}/company_logos/${this.props.company_logo}`\r\n                          : '/assets/img/profile-pic-l.jpg'\r\n                          }/>\r\n                </span>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu className=\"mt-3\" right>\r\n                                <DropdownItem>Account</DropdownItem>\r\n                                <DropdownItem>Features</DropdownItem>\r\n                                <DropdownItem>History</DropdownItem>\r\n                                <DropdownItem>Support</DropdownItem>\r\n                                <DropdownItem divider/>\r\n                                <DropdownItem onClick={() => this.handleLogout()}>\r\n                                    Sign out\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({menu, settings, authUser}) => {\r\n    const {containerClassnames, menuClickCount, selectedMenuHasSubItems} = menu;\r\n    const {locale} = settings;\r\n    const {user: loginUser} = authUser;\r\n    return {\r\n        containerClassnames,\r\n        menuClickCount,\r\n        selectedMenuHasSubItems,\r\n        locale,\r\n        loginUser\r\n    };\r\n};\r\nexport default injectIntl(\r\n    connect(\r\n        mapStateToProps,\r\n        {setContainerClassnames, clickOnMobileMenu, logoutUser, changeLocale}\r\n    )(TopNav)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}