{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/views/auth/login.js\";\nimport React, { Component } from \"react\";\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nimport { Formik, Form, Field } from \"formik\";\nimport { loginUser } from \"../../redux/actions\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.onUserLogin = function (values) {\n      if (!_this.props.loading) {\n        if (values.email !== \"\" && values.password !== \"\") {\n          _this.props.loginUser(values, _this.props.history);\n        }\n      }\n    };\n\n    _this.validateEmail = function (value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your email address\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        error = \"Invalid email address\";\n      }\n\n      return error;\n    };\n\n    _this.validatePassword = function (value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your password\";\n      } else if (value.length < 4) {\n        error = \"Value must be longer than 3 characters\";\n      }\n\n      return error;\n    };\n\n    _this.state = {\n      email: \"demo@gogo.com\",\n      password: \"gogo123\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.error) {\n        NotificationManager.warning(this.props.error, \"Login Error\", 3000, null, null, '');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          password = _this$state.password,\n          email = _this$state.email;\n      var initialValues = {\n        email,\n        password\n      };\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"h-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var authUser = _ref.authUser;\n  var user = authUser.user,\n      loading = authUser.loading,\n      error = authUser.error;\n  return {\n    user,\n    loading,\n    error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/views/auth/login.js"],"names":["React","Component","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","connect","NotificationManager","Formik","Form","Field","loginUser","Colxx","IntlMessages","Login","props","onUserLogin","values","loading","email","password","history","validateEmail","value","error","test","validatePassword","length","state","warning","initialValues","mapStateToProps","authUser","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { NotificationManager } from \"../../components/common/react-notifications\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nimport { loginUser } from \"../../redux/actions\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"demo@gogo.com\",\r\n      password: \"gogo123\"\r\n    };\r\n  }\r\n\r\n  onUserLogin = (values) => {\r\n    if (!this.props.loading) {\r\n      if (values.email !== \"\" && values.password !== \"\") {\r\n        this.props.loginUser(values, this.props.history);\r\n      }\r\n    }\r\n  }\r\n\r\n  validateEmail = (value) => {\r\n    let error;\r\n    if (!value) {\r\n      error = \"Please enter your email address\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n      error = \"Invalid email address\";\r\n    }\r\n    return error;\r\n  }\r\n\r\n  validatePassword = (value) => {\r\n    let error;\r\n    if (!value) {\r\n      error = \"Please enter your password\";\r\n    } else if (value.length < 4) {\r\n      error = \"Value must be longer than 3 characters\";\r\n    }\r\n    return error;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.error) {\r\n      NotificationManager.warning(\r\n        this.props.error,\r\n        \"Login Error\",\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { password, email } = this.state;\r\n    const initialValues = {email,password};\r\n\r\n    return (\r\n      <Row className=\"h-100\">\r\n        \r\n      </Row>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { user, loading, error } = authUser;\r\n  return { user, loading, error };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    loginUser\r\n  }\r\n)(Login);\r\n"]},"metadata":{},"sourceType":"module"}