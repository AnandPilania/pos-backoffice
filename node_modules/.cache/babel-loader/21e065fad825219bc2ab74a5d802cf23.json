{"ast":null,"code":"import _classCallCheck from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from\"react\";import{Row,Card,CardBody,Label,Input,FormGroup,Button}from\"reactstrap\";import IntlMessages from\"../../../helpers/IntlMessages\";import{Colxx,Separator}from\"../../../components/common/CustomBootstrap\";import Breadcrumb from\"../../../containers/navs/Breadcrumb\";import axios from\"axios\";import{servicePath,tokenPrefix}from\"../../../constants/defaultValues\";import{NotificationManager}from\"../../../components/common/react-notifications\";import errorMessage from\"../../../constants/errorMessages\";import{connect}from\"react-redux\";import CustomSelectInput from\"../../../components/common/CustomSelectInput\";import Select from\"react-select\";import{injectIntl}from\"react-intl\";var CategoryEdit=/*#__PURE__*/function(_Component){_inherits(CategoryEdit,_Component);var _super=_createSuper(CategoryEdit);function CategoryEdit(props){var _this;_classCallCheck(this,CategoryEdit);_this=_super.call(this,props);_this.onChange=function(e){_this.setState({[e.target.name]:e.target.value});};_this.handleStateChange=function(state){_this.setState({state});};_this.onSubmit=function(){var _this$state=_this.state,loading=_this$state.loading,uploading=_this$state.uploading,name=_this$state.name,state=_this$state.state;if(!loading&&!uploading){var data=new FormData();data.append('id',_this.props.match.params.categoryId);data.append('name',name);data.append('state',state.value);_this.setState({uploading:true});axios.post(servicePath+\"/categories/update\",data,{headers:{'X-API-TOKEN':tokenPrefix+_this.props.apiToken}}).then(function(response){_this.setState({uploading:false});if(response.status===200&&response.data['message']===\"\"){NotificationManager.success(\"Category Successfully Updated\",\"Success\",3000,null,null,'');}else{var errorCode=response.data['message'];NotificationManager.warning(errorMessage[errorCode],\"Error\",3000,null,null,'');}}).catch(function(error){_this.setState({uploading:false});NotificationManager.warning(error,\"Error\",3000,null,null,'');});}};_this.state={loading:false,uploading:false};return _this;}_createClass(CategoryEdit,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.setState({loading:true});axios.get(servicePath+\"/categories/get\",{params:{categoryId:this.props.match.params.categoryId},headers:{'X-API-TOKEN':tokenPrefix+this.props.apiToken}}).then(function(response){return response['data'];}).then(function(data){if(data['message']===\"\"){_this2.setState({loading:false,name:data['data']['category']['name'],state:data['data']['category']['show_flag']===1?{'label':_this2.props.intl.messages['pages.active'],'value':1}:{'label':_this2.props.intl.messages['pages.inactive'],'value':0}});}else{_this2.props.history.push('/products/categories');}}).catch(function(error){_this2.props.history.push('/products/categories');});}},{key:\"render\",value:function render(){var _this3=this;var _this$state2=this.state,loading=_this$state2.loading,uploading=_this$state2.uploading,name=_this$state2.name,state=_this$state2.state;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(Breadcrumb,{heading:\"menu.category-edit\",match:this.props.match}),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5\"}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},loading?/*#__PURE__*/React.createElement(\"div\",{className:\"loading\"}):/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",xl:\"6\",className:\"col-left\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"name\"},\"Category Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"name\",name:\"name\",value:name,onChange:this.onChange})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"state\"},\"State\"),/*#__PURE__*/React.createElement(Select,{id:\"state\",components:{Input:CustomSelectInput},className:\"react-select\",classNamePrefix:\"react-select\",onChange:this.handleStateChange,value:state,options:[{'label':this.props.intl.messages['pages.active'],'value':1},{'label':this.props.intl.messages['pages.inactive'],'value':0}]})))),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",size:\"lg\",outline:true,className:\"mr-3\",onClick:function onClick(){return _this3.props.history.push('/products/categories');}},/*#__PURE__*/React.createElement(IntlMessages,{id:\"pages.back\"})),/*#__PURE__*/React.createElement(Button,{onClick:this.onSubmit,color:\"primary\",className:\"btn-shadow btn-multiple-state \".concat(uploading?\"show-spinner\":\"\"),size:\"lg\"},/*#__PURE__*/React.createElement(\"span\",{className:\"spinner d-inline-block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"bounce1\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"bounce2\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"bounce3\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"pages.save\"}))))))));}}]);return CategoryEdit;}(Component);var mapStateToProps=function mapStateToProps(_ref){var authUser=_ref.authUser;var apiToken=authUser.token;return{apiToken};};export default injectIntl(connect(mapStateToProps,{})(CategoryEdit));","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/views/products/categories/edit.js"],"names":["React","Component","Fragment","Row","Card","CardBody","Label","Input","FormGroup","Button","IntlMessages","Colxx","Separator","Breadcrumb","axios","servicePath","tokenPrefix","NotificationManager","errorMessage","connect","CustomSelectInput","Select","injectIntl","CategoryEdit","props","onChange","e","setState","target","name","value","handleStateChange","state","onSubmit","loading","uploading","data","FormData","append","match","params","categoryId","post","headers","apiToken","then","response","status","success","errorCode","warning","catch","error","get","intl","messages","history","push","mapStateToProps","authUser","token"],"mappings":"gzBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAAQC,GAAR,CAAaC,IAAb,CAAmBC,QAAnB,CAA6BC,KAA7B,CAAoCC,KAApC,CAA2CC,SAA3C,CAAsDC,MAAtD,KAAmE,YAAnE,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,4CAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,kCAAvC,CACA,OAAQC,mBAAR,KAAkC,gDAAlC,CACA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8CAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAAQC,UAAR,KAAyB,YAAzB,C,GAEMC,CAAAA,Y,4GAEF,sBAAYC,KAAZ,CAAmB,8CACf,uBAAMA,KAAN,EADe,MAsCnBC,QAtCmB,CAsCR,SAACC,CAAD,CAAO,CACd,MAAKC,QAAL,CAAc,CACV,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,EAAiBH,CAAC,CAACE,MAAF,CAASE,KADhB,CAAd,EAGH,CA1CkB,OA4CnBC,iBA5CmB,CA4CC,SAAAC,KAAK,CAAI,CACzB,MAAKL,QAAL,CAAc,CAACK,KAAD,CAAd,EACH,CA9CkB,OAgDnBC,QAhDmB,CAgDR,UAAM,iBAC6B,MAAKD,KADlC,CACNE,OADM,aACNA,OADM,CACGC,SADH,aACGA,SADH,CACcN,IADd,aACcA,IADd,CACoBG,KADpB,aACoBA,KADpB,CAGb,GAAI,CAACE,OAAD,EAAY,CAACC,SAAjB,CAA4B,CAExB,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,QAAJ,EAAb,CACAD,IAAI,CAACE,MAAL,CAAY,IAAZ,CAAkB,MAAKd,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBC,UAA1C,EACAL,IAAI,CAACE,MAAL,CAAY,MAAZ,CAAoBT,IAApB,EACAO,IAAI,CAACE,MAAL,CAAY,OAAZ,CAAqBN,KAAK,CAACF,KAA3B,EAEA,MAAKH,QAAL,CAAc,CAACQ,SAAS,CAAE,IAAZ,CAAd,EAEArB,KAAK,CACA4B,IADL,CACU3B,WAAW,CAAG,oBADxB,CAC8CqB,IAD9C,CACoD,CAC5CO,OAAO,CAAE,CACL,cAAe3B,WAAW,CAAG,MAAKQ,KAAL,CAAWoB,QADnC,CADmC,CADpD,EAMKC,IANL,CAMU,SAAAC,QAAQ,CAAI,CACd,MAAKnB,QAAL,CAAc,CACVQ,SAAS,CAAE,KADD,CAAd,EAGA,GAAIW,QAAQ,CAACC,MAAT,GAAoB,GAApB,EAA2BD,QAAQ,CAACV,IAAT,CAAc,SAAd,IAA6B,EAA5D,CAAgE,CAC5DnB,mBAAmB,CAAC+B,OAApB,CACI,+BADJ,CAEI,SAFJ,CAGI,IAHJ,CAII,IAJJ,CAKI,IALJ,CAMI,EANJ,EAQH,CATD,IASO,CACH,GAAMC,CAAAA,SAAS,CAAGH,QAAQ,CAACV,IAAT,CAAc,SAAd,CAAlB,CACAnB,mBAAmB,CAACiC,OAApB,CACIhC,YAAY,CAAC+B,SAAD,CADhB,CAEI,OAFJ,CAGI,IAHJ,CAII,IAJJ,CAKI,IALJ,CAMI,EANJ,EAQH,CAEJ,CA/BL,EAgCKE,KAhCL,CAgCW,SAAAC,KAAK,CAAI,CACZ,MAAKzB,QAAL,CAAc,CACVQ,SAAS,CAAE,KADD,CAAd,EAGAlB,mBAAmB,CAACiC,OAApB,CACIE,KADJ,CAEI,OAFJ,CAGI,IAHJ,CAII,IAJJ,CAKI,IALJ,CAMI,EANJ,EAQH,CA5CL,EA6CH,CACJ,CA1GkB,CAEf,MAAKpB,KAAL,CAAa,CACTE,OAAO,CAAE,KADA,CAETC,SAAS,CAAE,KAFF,CAAb,CAFe,aAMlB,C,sFAEmB,iBAChB,KAAKR,QAAL,CAAc,CAACO,OAAO,CAAE,IAAV,CAAd,EACApB,KAAK,CACAuC,GADL,CACStC,WAAW,CAAG,iBADvB,CAC0C,CAClCyB,MAAM,CAAE,CACJC,UAAU,CAAE,KAAKjB,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBC,UADhC,CAD0B,CAIlCE,OAAO,CAAE,CACL,cAAe3B,WAAW,CAAG,KAAKQ,KAAL,CAAWoB,QADnC,CAJyB,CAD1C,EASKC,IATL,CASU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAAC,MAAD,CAAZ,EATlB,EAUKD,IAVL,CAUU,SAAAT,IAAI,CAAI,CACV,GAAIA,IAAI,CAAC,SAAD,CAAJ,GAAoB,EAAxB,CAA4B,CACxB,MAAI,CAACT,QAAL,CAAc,CACVO,OAAO,CAAE,KADC,CAEVL,IAAI,CAAEO,IAAI,CAAC,MAAD,CAAJ,CAAa,UAAb,EAAyB,MAAzB,CAFI,CAGVJ,KAAK,CAAEI,IAAI,CAAC,MAAD,CAAJ,CAAa,UAAb,EAAyB,WAAzB,IAA0C,CAA1C,CACH,CAAC,QAAS,MAAI,CAACZ,KAAL,CAAW8B,IAAX,CAAgBC,QAAhB,CAAyB,cAAzB,CAAV,CAAoD,QAAS,CAA7D,CADG,CAEH,CAAC,QAAS,MAAI,CAAC/B,KAAL,CAAW8B,IAAX,CAAgBC,QAAhB,CAAyB,gBAAzB,CAAV,CAAsD,QAAS,CAA/D,CALM,CAAd,EAOH,CARD,IAQO,CACH,MAAI,CAAC/B,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAwB,sBAAxB,EACH,CACJ,CAtBL,EAuBKN,KAvBL,CAuBW,SAAAC,KAAK,CAAI,CACZ,MAAI,CAAC5B,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAwB,sBAAxB,EACH,CAzBL,EA0BH,C,uCAwEQ,kCAMD,KAAKzB,KANJ,CAEDE,OAFC,cAEDA,OAFC,CAGDC,SAHC,cAGDA,SAHC,CAIDN,IAJC,cAIDA,IAJC,CAKDG,KALC,cAKDA,KALC,CAOL,mBACI,oBAAC,QAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,KAAD,EAAO,GAAG,CAAC,IAAX,eACI,oBAAC,UAAD,EAAY,OAAO,CAAC,oBAApB,CAAyC,KAAK,CAAE,KAAKR,KAAL,CAAWe,KAA3D,EADJ,cAEI,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,EAFJ,CADJ,CADJ,cAOI,oBAAC,GAAD,mBACI,oBAAC,KAAD,EAAO,GAAG,CAAC,IAAX,CAAgB,SAAS,CAAC,MAA1B,EAEQL,OAAO,cAAG,2BAAK,SAAS,CAAC,SAAf,EAAH,cAEH,oBAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,eACI,oBAAC,QAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,KAAD,EAAO,GAAG,CAAC,IAAX,CAAgB,EAAE,CAAC,GAAnB,CAAuB,SAAS,CAAC,UAAjC,eACI,oBAAC,SAAD,mBACI,oBAAC,KAAD,EAAO,GAAG,CAAC,MAAX,kBADJ,cAEI,oBAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,MAAtB,CAA6B,IAAI,CAAC,MAAlC,CAAyC,KAAK,CAAEL,IAAhD,CACO,QAAQ,CAAE,KAAKJ,QADtB,EAFJ,CADJ,cAMI,oBAAC,SAAD,mBACI,oBAAC,KAAD,EAAO,GAAG,CAAC,OAAX,UADJ,cAEI,oBAAC,MAAD,EACI,EAAE,CAAC,OADP,CAEI,UAAU,CAAE,CAAClB,KAAK,CAAEa,iBAAR,CAFhB,CAGI,SAAS,CAAC,cAHd,CAII,eAAe,CAAC,cAJpB,CAKI,QAAQ,CAAE,KAAKW,iBALnB,CAMI,KAAK,CAAEC,KANX,CAOI,OAAO,CAAE,CACL,CACI,QAAS,KAAKR,KAAL,CAAW8B,IAAX,CAAgBC,QAAhB,CAAyB,cAAzB,CADb,CAEI,QAAS,CAFb,CADK,CAKL,CACI,QAAS,KAAK/B,KAAL,CAAW8B,IAAX,CAAgBC,QAAhB,CAAyB,gBAAzB,CADb,CAEI,QAAS,CAFb,CALK,CAPb,EAFJ,CANJ,CADJ,CADJ,cA+BI,oBAAC,MAAD,EACI,KAAK,CAAC,WADV,CAEI,IAAI,CAAC,IAFT,CAGI,OAAO,KAHX,CAII,SAAS,CAAC,MAJd,CAKI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC/B,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAwB,sBAAxB,CAAN,EALb,eAOI,oBAAC,YAAD,EAAc,EAAE,CAAC,YAAjB,EAPJ,CA/BJ,cAwCI,oBAAC,MAAD,EACI,OAAO,CAAE,KAAKxB,QADlB,CAEI,KAAK,CAAC,SAFV,CAGI,SAAS,yCAAmCE,SAAS,CAAG,cAAH,CAAoB,EAAhE,CAHb,CAII,IAAI,CAAC,IAJT,eAMA,4BAAM,SAAS,CAAC,wBAAhB,eACE,4BAAM,SAAS,CAAC,SAAhB,EADF,cAEE,4BAAM,SAAS,CAAC,SAAhB,EAFF,cAGE,4BAAM,SAAS,CAAC,SAAhB,EAHF,CANA,cAWI,4BAAM,SAAS,CAAC,OAAhB,eAAwB,oBAAC,YAAD,EAAc,EAAE,CAAC,YAAjB,EAAxB,CAXJ,CAxCJ,CADJ,CAJZ,CADJ,CAPJ,CADJ,CA0EH,C,0BA/LsBlC,S,EAkM3B,GAAMyD,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,IACtBf,CAAAA,QADsB,CACVe,QADU,CAC7BC,KAD6B,CAEpC,MAAO,CAAChB,QAAD,CAAP,CACH,CAHD,CAKA,cAAetB,CAAAA,UAAU,CACrBH,OAAO,CACHuC,eADG,CAEH,EAFG,CAAP,CAGEnC,YAHF,CADqB,CAAzB","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\nimport {Row, Card, CardBody, Label, Input, FormGroup, Button} from \"reactstrap\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport {Colxx, Separator} from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport axios from \"axios\";\r\nimport {servicePath, tokenPrefix} from \"../../../constants/defaultValues\";\r\nimport {NotificationManager} from \"../../../components/common/react-notifications\";\r\nimport errorMessage from \"../../../constants/errorMessages\";\r\nimport {connect} from \"react-redux\";\r\nimport CustomSelectInput from \"../../../components/common/CustomSelectInput\";\r\nimport Select from \"react-select\";\r\nimport {injectIntl} from \"react-intl\";\r\n\r\nclass CategoryEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            uploading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        axios\r\n            .get(servicePath + \"/categories/get\", {\r\n                params: {\r\n                    categoryId: this.props.match.params.categoryId,\r\n                },\r\n                headers: {\r\n                    'X-API-TOKEN': tokenPrefix + this.props.apiToken\r\n                }\r\n            })\r\n            .then(response => response['data'])\r\n            .then(data => {\r\n                if (data['message'] === \"\") {\r\n                    this.setState({\r\n                        loading: false,\r\n                        name: data['data']['category']['name'],\r\n                        state: data['data']['category']['show_flag'] === 1 ?\r\n                            {'label': this.props.intl.messages['pages.active'], 'value': 1} :\r\n                            {'label': this.props.intl.messages['pages.inactive'], 'value': 0}\r\n                    });\r\n                } else {\r\n                    this.props.history.push('/products/categories');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.props.history.push('/products/categories');\r\n            });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleStateChange = state => {\r\n        this.setState({state});\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const {loading, uploading, name, state} = this.state;\r\n\r\n        if (!loading && !uploading) {\r\n\r\n            const data = new FormData();\r\n            data.append('id', this.props.match.params.categoryId);\r\n            data.append('name', name);\r\n            data.append('state', state.value);\r\n\r\n            this.setState({uploading: true});\r\n\r\n            axios\r\n                .post(servicePath + \"/categories/update\", data, {\r\n                    headers: {\r\n                        'X-API-TOKEN': tokenPrefix + this.props.apiToken\r\n                    }\r\n                })\r\n                .then(response => {\r\n                    this.setState({\r\n                        uploading: false\r\n                    });\r\n                    if (response.status === 200 && response.data['message'] === \"\") {\r\n                        NotificationManager.success(\r\n                            \"Category Successfully Updated\",\r\n                            \"Success\",\r\n                            3000,\r\n                            null,\r\n                            null,\r\n                            ''\r\n                        );\r\n                    } else {\r\n                        const errorCode = response.data['message'];\r\n                        NotificationManager.warning(\r\n                            errorMessage[errorCode],\r\n                            \"Error\",\r\n                            3000,\r\n                            null,\r\n                            null,\r\n                            ''\r\n                        );\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        uploading: false\r\n                    });\r\n                    NotificationManager.warning(\r\n                        error,\r\n                        \"Error\",\r\n                        3000,\r\n                        null,\r\n                        null,\r\n                        ''\r\n                    );\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            loading,\r\n            uploading,\r\n            name,\r\n            state,\r\n        } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n                        <Breadcrumb heading=\"menu.category-edit\" match={this.props.match}/>\r\n                        <Separator className=\"mb-5\"/>\r\n                    </Colxx>\r\n                </Row>\r\n                <Row>\r\n                    <Colxx xxs=\"12\" className=\"mb-4\">\r\n                        {\r\n                            loading ? <div className=\"loading\"/> :\r\n\r\n                                <Card className=\"mb-4\">\r\n                                    <CardBody>\r\n                                        <Row>\r\n                                            <Colxx xxs=\"12\" xl=\"6\" className=\"col-left\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"name\">Category Name</Label>\r\n                                                    <Input type=\"text\" id=\"name\" name=\"name\" value={name}\r\n                                                           onChange={this.onChange}/>\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"state\">State</Label>\r\n                                                    <Select\r\n                                                        id=\"state\"\r\n                                                        components={{Input: CustomSelectInput}}\r\n                                                        className=\"react-select\"\r\n                                                        classNamePrefix=\"react-select\"\r\n                                                        onChange={this.handleStateChange}\r\n                                                        value={state}\r\n                                                        options={[\r\n                                                            {\r\n                                                                'label': this.props.intl.messages['pages.active'],\r\n                                                                'value': 1\r\n                                                            },\r\n                                                            {\r\n                                                                'label': this.props.intl.messages['pages.inactive'],\r\n                                                                'value': 0\r\n                                                            }\r\n                                                        ]}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Colxx>\r\n                                        </Row>\r\n                                        <Button\r\n                                            color=\"secondary\"\r\n                                            size=\"lg\"\r\n                                            outline\r\n                                            className=\"mr-3\"\r\n                                            onClick={() => this.props.history.push('/products/categories')}\r\n                                        >\r\n                                            <IntlMessages id=\"pages.back\"/>\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={this.onSubmit}\r\n                                            color=\"primary\"\r\n                                            className={`btn-shadow btn-multiple-state ${uploading ? \"show-spinner\" : \"\"}`}\r\n                                            size=\"lg\"\r\n                                        >\r\n                                        <span className=\"spinner d-inline-block\">\r\n                                          <span className=\"bounce1\"/>\r\n                                          <span className=\"bounce2\"/>\r\n                                          <span className=\"bounce3\"/>\r\n                                        </span>\r\n                                            <span className=\"label\"><IntlMessages id=\"pages.save\"/></span>\r\n                                        </Button>\r\n                                    </CardBody>\r\n                                </Card>\r\n                        }\r\n                    </Colxx>\r\n                </Row>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({authUser}) => {\r\n    const {token: apiToken} = authUser;\r\n    return {apiToken};\r\n};\r\n\r\nexport default injectIntl(\r\n    connect(\r\n        mapStateToProps,\r\n        {}\r\n    )(CategoryEdit)\r\n);"]},"metadata":{},"sourceType":"module"}