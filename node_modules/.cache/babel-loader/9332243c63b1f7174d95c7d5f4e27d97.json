{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LOAD_PRODUCT_SUCCESS, LOAD_PRODUCT_FAIL } from \"../actions\";\nimport axios from \"axios\";\nimport { tokenPrefix, servicePath } from \"../../constants/defaultValues\";\nexport var getProduct = function getProduct(pageInfo) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", axios.get(\"\".concat(servicePath, \"/products/paging?pageSize=\").concat(pageInfo.selectedPageSize, \"&currentPage=\").concat(pageInfo.currentPage, \"&orderBy=\").concat(pageInfo.selectedOrderOption.column, \"&search=\").concat(pageInfo.search), {\n                headers: {\n                  'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n              }).then(function (res) {\n                return res.data['data'];\n              }).then(function (data) {\n                dispatch({\n                  type: LOAD_PRODUCT_SUCCESS,\n                  payload: data\n                });\n              }).catch(function (error) {\n                dispatch({\n                  type: LOAD_PRODUCT_FAIL\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/products/actions.js"],"names":["LOAD_PRODUCT_SUCCESS","LOAD_PRODUCT_FAIL","axios","tokenPrefix","servicePath","getProduct","pageInfo","dispatch","getState","get","selectedPageSize","currentPage","selectedOrderOption","column","search","headers","authUser","token","then","res","data","type","payload","catch","error"],"mappings":";;AAAA,SACIA,oBADJ,EAEIC,iBAFJ,QAGO,YAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,+BAAvC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD;AAAA;AAAA,wEAAc,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC7BN,KAAK,CACPO,GADE,WAEIL,WAFJ,uCAE4CE,QAAQ,CAACI,gBAFrD,0BAEqFJ,QAAQ,CAACK,WAF9F,sBAGKL,QAAQ,CAACM,mBAAT,CAA6BC,MAHlC,qBAGmDP,QAAQ,CAACQ,MAH5D,GAGsE;AACjEC,gBAAAA,OAAO,EAAE;AACL,iCAAeZ,WAAW,GAAGK,QAAQ,GAAGQ,QAAX,CAAoBC;AAD5C;AADwD,eAHtE,EASFC,IATE,CASG,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAG,CAACC,IAAJ,CAAS,MAAT,CAAP;AACH,eAXE,EAYFF,IAZE,CAYG,UAAAE,IAAI,EAAI;AACVb,gBAAAA,QAAQ,CAAC;AACLc,kBAAAA,IAAI,EAAErB,oBADD;AAELsB,kBAAAA,OAAO,EAAEF;AAFJ,iBAAD,CAAR;AAIH,eAjBE,EAkBFG,KAlBE,CAkBI,UAAAC,KAAK,EAAI;AACZjB,gBAAAA,QAAQ,CAAC;AACLc,kBAAAA,IAAI,EAAEpB;AADD,iBAAD,CAAR;AAGH,eAtBE,CAD6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAd;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import {\n    LOAD_PRODUCT_SUCCESS,\n    LOAD_PRODUCT_FAIL\n} from \"../actions\";\nimport axios from \"axios\";\nimport {tokenPrefix, servicePath} from \"../../constants/defaultValues\";\n\nexport const getProduct = (pageInfo) => async (dispatch, getState) => {\n    return axios\n        .get(\n            `${servicePath}/products/paging?pageSize=${pageInfo.selectedPageSize}&currentPage=${pageInfo.currentPage}&orderBy=${\n                pageInfo.selectedOrderOption.column}&search=${pageInfo.search}`, {\n                headers: {\n                    'X-API-TOKEN': tokenPrefix + getState().authUser.token\n                }\n            }\n        )\n        .then(res => {\n            return res.data['data'];\n        })\n        .then(data => {\n            dispatch({\n                type: LOAD_PRODUCT_SUCCESS,\n                payload: data\n            });\n        })\n        .catch(error => {\n            dispatch({\n                type: LOAD_PRODUCT_FAIL,\n            });\n        });\n}\n"]},"metadata":{},"sourceType":"module"}