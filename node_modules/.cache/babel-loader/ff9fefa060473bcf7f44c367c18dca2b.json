{"ast":null,"code":"import axios from'axios';import{servicePath,tokenPrefix}from'../../constants/defaultValues';import{UPDATE_MENU_APP_COLORS_REQUEST,UPDATE_MENU_APP_SETTINGS_SUCCESS,UPDATE_MENU_APP_COLORS_FAIL,UPDATE_MENU_APP_LOGO_REQUEST,UPDATE_MENU_APP_LOGO_FAIL}from'../actions';import{NotificationManager}from\"../../components/common/react-notifications\";export var updateMenuAppColor=function updateMenuAppColor(payload){return function(dispatch,getState){dispatch({type:UPDATE_MENU_APP_COLORS_REQUEST});axios.post(servicePath+\"/user/update-menu-app-colors\",payload,{headers:{'X-API-TOKEN':tokenPrefix+getState().authUser.token}}).then(function(response){return response.data;}).then(function(data){if(data['message']===\"\"){localStorage.setItem('menu_app_config',JSON.stringify(data['data']));NotificationManager.success(\"Template Successfully Updated\",\"Success\",3000,null,null,'');dispatch({type:UPDATE_MENU_APP_SETTINGS_SUCCESS,payload:data['data']});}else{dispatch({type:UPDATE_MENU_APP_COLORS_FAIL,payload:data['message']});}}).catch(function(error){dispatch({type:UPDATE_MENU_APP_COLORS_FAIL,payload:error});});};};export var updateMenuAppLogo=function updateMenuAppLogo(payload){return function(dispatch,getState){dispatch({type:UPDATE_MENU_APP_LOGO_REQUEST});axios.post(servicePath+\"/user/update-menu-app-logo\",payload,{headers:{'X-API-TOKEN':tokenPrefix+getState().authUser.token}}).then(function(response){return response.data;}).then(function(data){if(data['message']===\"\"){localStorage.setItem('menu_app_config',JSON.stringify(data['data']));NotificationManager.success(\"Logo Successfully Updated\",\"Success\",3000,null,null,'');dispatch({type:UPDATE_MENU_APP_SETTINGS_SUCCESS,payload:data['data']});}else{dispatch({type:UPDATE_MENU_APP_LOGO_FAIL,payload:data['message']});}}).catch(function(error){dispatch({type:UPDATE_MENU_APP_LOGO_FAIL,payload:error});});};};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/my-site/actions.js"],"names":["axios","servicePath","tokenPrefix","UPDATE_MENU_APP_COLORS_REQUEST","UPDATE_MENU_APP_SETTINGS_SUCCESS","UPDATE_MENU_APP_COLORS_FAIL","UPDATE_MENU_APP_LOGO_REQUEST","UPDATE_MENU_APP_LOGO_FAIL","NotificationManager","updateMenuAppColor","payload","dispatch","getState","type","post","headers","authUser","token","then","response","data","localStorage","setItem","JSON","stringify","success","catch","error","updateMenuAppLogo"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {servicePath, tokenPrefix} from '../../constants/defaultValues';\n\nimport {\n    UPDATE_MENU_APP_COLORS_REQUEST,\n    UPDATE_MENU_APP_SETTINGS_SUCCESS,\n    UPDATE_MENU_APP_COLORS_FAIL,\n    UPDATE_MENU_APP_LOGO_REQUEST,\n    UPDATE_MENU_APP_LOGO_FAIL,\n} from '../actions';\nimport {NotificationManager} from \"../../components/common/react-notifications\";\n\nexport const updateMenuAppColor = (payload) => (dispatch, getState) => {\n\n    dispatch({\n        type: UPDATE_MENU_APP_COLORS_REQUEST\n    });\n\n    axios\n        .post(servicePath + \"/user/update-menu-app-colors\", payload, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response.data)\n        .then(data => {\n            if (data['message'] === \"\") {\n                localStorage.setItem('menu_app_config', JSON.stringify(data['data']));\n                NotificationManager.success(\n                    \"Template Successfully Updated\",\n                    \"Success\",\n                    3000,\n                    null,\n                    null,\n                    ''\n                );\n                dispatch({\n                    type: UPDATE_MENU_APP_SETTINGS_SUCCESS,\n                    payload: data['data']\n                });\n            } else {\n                dispatch({\n                    type: UPDATE_MENU_APP_COLORS_FAIL,\n                    payload: data['message']\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: UPDATE_MENU_APP_COLORS_FAIL,\n                payload: error\n            });\n        });\n};\n\nexport const updateMenuAppLogo = (payload) => (dispatch, getState) => {\n\n    dispatch({\n        type: UPDATE_MENU_APP_LOGO_REQUEST\n    });\n\n    axios\n        .post(servicePath + \"/user/update-menu-app-logo\", payload, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response.data)\n        .then(data => {\n            if (data['message'] === \"\") {\n                localStorage.setItem('menu_app_config', JSON.stringify(data['data']));\n                NotificationManager.success(\n                    \"Logo Successfully Updated\",\n                    \"Success\",\n                    3000,\n                    null,\n                    null,\n                    ''\n                );\n                dispatch({\n                    type: UPDATE_MENU_APP_SETTINGS_SUCCESS,\n                    payload: data['data']\n                });\n            } else {\n                dispatch({\n                    type: UPDATE_MENU_APP_LOGO_FAIL,\n                    payload: data['message']\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: UPDATE_MENU_APP_LOGO_FAIL,\n                payload: error\n            });\n        });\n};"]},"metadata":{},"sourceType":"module"}