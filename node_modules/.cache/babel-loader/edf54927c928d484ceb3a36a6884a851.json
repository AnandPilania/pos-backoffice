{"ast":null,"code":"import axios from 'axios';\nimport { servicePath, tokenPrefix } from '../../constants/defaultValues';\nimport { UPDATE_MENU_APP_COLORS_REQUEST, UPDATE_MENU_APP_SETTINGS_SUCCESS, UPDATE_MENU_APP_COLORS_FAIL, UPDATE_MENU_APP_LOGO_REQUEST, UPDATE_MENU_APP_LOGO_FAIL } from '../actions';\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nexport var updateMenuAppColor = function updateMenuAppColor(payload) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: UPDATE_MENU_APP_COLORS_REQUEST\n    });\n    axios.post(servicePath + \"/user/update-menu-app-colors\", payload, {\n      headers: {\n        'X-API-TOKEN': tokenPrefix + getState().authUser.token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).then(function (data) {\n      if (data['message'] === \"\") {\n        localStorage.setItem('menu_app_config', JSON.stringify(data['data']));\n        NotificationManager.success(\"Template Successfully Updated\", \"Success\", 3000, null, null, '');\n        dispatch({\n          type: UPDATE_MENU_APP_SETTINGS_SUCCESS,\n          payload: data['data']\n        });\n      } else {\n        dispatch({\n          type: UPDATE_MENU_APP_COLORS_FAIL,\n          payload: data['message']\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: UPDATE_MENU_APP_COLORS_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport var updateMenuAppLogo = function updateMenuAppLogo(payload) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: UPDATE_MENU_APP_LOGO_REQUEST\n    });\n    axios.post(servicePath + \"/user/update-menu-app-logo\", payload, {\n      headers: {\n        'X-API-TOKEN': tokenPrefix + getState().authUser.token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).then(function (data) {\n      if (data['message'] === \"\") {\n        localStorage.setItem('menu_app_config', JSON.stringify(data['data']));\n        NotificationManager.success(\"Logo Successfully Updated\", \"Success\", 3000, null, null, '');\n        dispatch({\n          type: UPDATE_MENU_APP_SETTINGS_SUCCESS,\n          payload: data['data']\n        });\n      } else {\n        dispatch({\n          type: UPDATE_MENU_APP_LOGO_FAIL,\n          payload: data['message']\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: UPDATE_MENU_APP_LOGO_FAIL,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Volumes/DATA/project/20200412_POSbackoffice_django_react/project/POS-backoffice/frontend/src/redux/my-site/actions.js"],"names":["axios","servicePath","tokenPrefix","UPDATE_MENU_APP_COLORS_REQUEST","UPDATE_MENU_APP_SETTINGS_SUCCESS","UPDATE_MENU_APP_COLORS_FAIL","UPDATE_MENU_APP_LOGO_REQUEST","UPDATE_MENU_APP_LOGO_FAIL","NotificationManager","updateMenuAppColor","payload","dispatch","getState","type","post","headers","authUser","token","then","response","data","localStorage","setItem","JSON","stringify","success","catch","error","updateMenuAppLogo"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {servicePath, tokenPrefix} from '../../constants/defaultValues';\n\nimport {\n    UPDATE_MENU_APP_COLORS_REQUEST,\n    UPDATE_MENU_APP_SETTINGS_SUCCESS,\n    UPDATE_MENU_APP_COLORS_FAIL,\n    UPDATE_MENU_APP_LOGO_REQUEST,\n    UPDATE_MENU_APP_LOGO_FAIL,\n} from '../actions';\nimport {NotificationManager} from \"../../components/common/react-notifications\";\n\nexport const updateMenuAppColor = (payload) => (dispatch, getState) => {\n\n    dispatch({\n        type: UPDATE_MENU_APP_COLORS_REQUEST\n    });\n\n    axios\n        .post(servicePath + \"/user/update-menu-app-colors\", payload, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response.data)\n        .then(data => {\n            if (data['message'] === \"\") {\n                localStorage.setItem('menu_app_config', JSON.stringify(data['data']));\n                NotificationManager.success(\n                    \"Template Successfully Updated\",\n                    \"Success\",\n                    3000,\n                    null,\n                    null,\n                    ''\n                );\n                dispatch({\n                    type: UPDATE_MENU_APP_SETTINGS_SUCCESS,\n                    payload: data['data']\n                });\n            } else {\n                dispatch({\n                    type: UPDATE_MENU_APP_COLORS_FAIL,\n                    payload: data['message']\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: UPDATE_MENU_APP_COLORS_FAIL,\n                payload: error\n            });\n        });\n};\n\nexport const updateMenuAppLogo = (payload) => (dispatch, getState) => {\n\n    dispatch({\n        type: UPDATE_MENU_APP_LOGO_REQUEST\n    });\n\n    axios\n        .post(servicePath + \"/user/update-menu-app-logo\", payload, {\n            headers: {\n                'X-API-TOKEN': tokenPrefix + getState().authUser.token\n            }\n        })\n        .then(response => response.data)\n        .then(data => {\n            if (data['message'] === \"\") {\n                localStorage.setItem('menu_app_config', JSON.stringify(data['data']));\n                NotificationManager.success(\n                    \"Logo Successfully Updated\",\n                    \"Success\",\n                    3000,\n                    null,\n                    null,\n                    ''\n                );\n                dispatch({\n                    type: UPDATE_MENU_APP_SETTINGS_SUCCESS,\n                    payload: data['data']\n                });\n            } else {\n                dispatch({\n                    type: UPDATE_MENU_APP_LOGO_FAIL,\n                    payload: data['message']\n                });\n            }\n\n        })\n        .catch(error => {\n            dispatch({\n                type: UPDATE_MENU_APP_LOGO_FAIL,\n                payload: error\n            });\n        });\n};"]},"metadata":{},"sourceType":"module"}